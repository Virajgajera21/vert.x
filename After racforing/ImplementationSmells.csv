Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
vert.x,io.vertx.core.cli,ArgumentConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 16,20
vert.x,io.vertx.core.cli,OptionConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 28,20
vert.x,io.vertx.core.cli,OptionConverter,toJson,Complex Method,Cyclomatic complexity of the method is 8,98
vert.x,io.vertx.core.cli,AmbiguousOptionException,AmbiguousOptionException,Long Statement,The length of the statement "super("Ambiguous argument in command line: '" + token + "' matches "+ matchingOpts.stream().map(Option::getName).collect(Collectors.toList()));" is 143.,29
vert.x,io.vertx.core.cli,InvalidValueException,InvalidValueException,Long Statement,The length of the statement "super("The value '" + value + "' is not accepted by the argument '"+ (argument.getArgName() != null ? argument.getArgName() : argument.getIndex())+ "'"`cause);" is 159.,36
vert.x,io.vertx.core.cli,MissingOptionException,MissingOptionException,Long Statement,The length of the statement "super("The option" + (expected.size() > 1 ? "s " : " ") + expected.stream().map(Option::getName).collect(Collectors.toList())+ (expected.size() > 1 ? " are" : " is")+ " required");" is 180.,25
vert.x,io.vertx.core.cli,MissingValueException,MissingValueException,Long Statement,The length of the statement "super("The argument '" + (argument.getArgName() != null ? argument.getArgName() : argument.getIndex()) + "' is required");" is 122.,35
vert.x,io.vertx.core.cli,Option,ensureValidity,Complex Conditional,The conditional expression (shortName == null || shortName.equals(NO_NAME)) && (longName == null || longName.equals(NO_NAME)) is complex.,156
vert.x,io.vertx.core.cli,TypedOption,setType,Complex Conditional,The conditional expression type != null && getChoices().isEmpty() && type.isEnum() is complex.,132
vert.x,io.vertx.core.cli,UsageMessageFormatter,appendOption,Complex Conditional,The conditional expression option.acceptValue() && (option.getArgName() == null || option.getArgName().length() != 0) is complex.,190
vert.x,io.vertx.core.cli,UsageMessageFormatter,renderOptionsAndArguments,Complex Method,Cyclomatic complexity of the method is 22,418
vert.x,io.vertx.core.cli,UsageMessageFormatter,renderWrappedTextBlock,Empty catch clause,The method has an empty catch block.,595
vert.x,io.vertx.core.cli,UsageMessageFormatter,findWrapPos,Complex Conditional,The conditional expression c == ' ' || c == '\n' || c == '\r' is complex.,624
vert.x,io.vertx.core.cli,AmbiguousOptionExceptionTest,testCreation,Long Statement,The length of the statement "AmbiguousOptionException exception=new AmbiguousOptionException("foo"`Arrays.asList(new Option().setLongName("foobar")`new Option().setLongName("foobaz")));" is 156.,25
vert.x,io.vertx.core.cli,AmbiguousOptionExceptionTest,testCreation,Long Statement,The length of the statement "assertThat(exception.getMessage()).contains("Ambiguous argument in command line").contains("'foo'").contains("foobar").contains("foobaz");" is 138.,25
vert.x,io.vertx.core.cli,AmbiguousOptionExceptionTest,testCreation,Magic Number,The method contains a magic number: 2,25
vert.x,io.vertx.core.cli,OptionTest,createAndCopy,Long Statement,The length of the statement "Option option=new Option().setArgName(TestUtils.randomAlphaString(100)).addChoice(TestUtils.randomAlphaString(100)).setDefaultValue(TestUtils.randomAlphaString(100)).setDescription(TestUtils.randomAlphaString(100)).setFlag(TestUtils.randomBoolean()).setHelp(TestUtils.randomBoolean()).setHidden(TestUtils.randomBoolean()).setLongName(TestUtils.randomAlphaString(100)).setMultiValued(TestUtils.randomBoolean()).setRequired(TestUtils.randomBoolean()).setShortName(TestUtils.randomAlphaString(100)).setSingleValued(TestUtils.randomBoolean());" is 539.,23
vert.x,io.vertx.core.cli,OptionTest,createAndCopy,Magic Number,The method contains a magic number: 100,23
vert.x,io.vertx.core.cli,OptionTest,createAndCopy,Magic Number,The method contains a magic number: 100,23
vert.x,io.vertx.core.cli,OptionTest,createAndCopy,Magic Number,The method contains a magic number: 100,23
vert.x,io.vertx.core.cli,OptionTest,createAndCopy,Magic Number,The method contains a magic number: 100,23
vert.x,io.vertx.core.cli,OptionTest,createAndCopy,Magic Number,The method contains a magic number: 100,23
vert.x,io.vertx.core.cli,OptionTest,createAndCopy,Magic Number,The method contains a magic number: 100,23
vert.x,io.vertx.core.datagram,DatagramSocketOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 12,20
vert.x,io.vertx.core.datagram,DatagramTest,tearDown,Magic Number,The method contains a magic number: 2,52
vert.x,io.vertx.core.datagram,DatagramTest,testDatagramSocket,Magic Number,The method contains a magic number: 65536,68
vert.x,io.vertx.core.datagram,DatagramTest,testDatagramSocket,Magic Number,The method contains a magic number: 65536,68
vert.x,io.vertx.core.datagram,DatagramTest,testDatagramSocket,Magic Number,The method contains a magic number: 65536,68
vert.x,io.vertx.core.datagram,DatagramTest,testDatagramSocket,Magic Number,The method contains a magic number: 65536,68
vert.x,io.vertx.core.datagram,DatagramTest,testDatagramSocket,Magic Number,The method contains a magic number: 65536,68
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceive,Long Statement,The length of the statement "assertTrue("Was expecting an unpooled buffer instead of " + buff.getClass().getSimpleName()`buff instanceof UnpooledHeapByteBuf);" is 129.,94
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceive,Magic Number,The method contains a magic number: 2,94
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceive,Magic Number,The method contains a magic number: 128,94
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceive,Magic Number,The method contains a magic number: 1234,94
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceive,Magic Number,The method contains a magic number: 1234,94
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceiveLargePacket,Magic Number,The method contains a magic number: 10000,134
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceiveLargePacket,Magic Number,The method contains a magic number: 16,134
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceiveLargePacket,Magic Number,The method contains a magic number: 1234,134
vert.x,io.vertx.core.datagram,DatagramTest,testSendReceiveLargePacket,Magic Number,The method contains a magic number: 1234,134
vert.x,io.vertx.core.datagram,DatagramTest,testSender,Magic Number,The method contains a magic number: 1234,153
vert.x,io.vertx.core.datagram,DatagramTest,testSender,Magic Number,The method contains a magic number: 128,153
vert.x,io.vertx.core.datagram,DatagramTest,testSender,Magic Number,The method contains a magic number: 1234,153
vert.x,io.vertx.core.datagram,DatagramTest,testListenHostPort,Magic Number,The method contains a magic number: 1234,173
vert.x,io.vertx.core.datagram,DatagramTest,testListenPort,Magic Number,The method contains a magic number: 1234,182
vert.x,io.vertx.core.datagram,DatagramTest,testListenInetSocketAddress,Magic Number,The method contains a magic number: 1234,191
vert.x,io.vertx.core.datagram,DatagramTest,testListenSamePortMultipleTimes,Long Statement,The length of the statement "peer2.listen(1234`"127.0.0.1").onComplete(onSuccess(v -> peer1.listen(1234`"127.0.0.1").onComplete(onFailure(err -> testComplete()))));" is 135.,200
vert.x,io.vertx.core.datagram,DatagramTest,testListenSamePortMultipleTimes,Magic Number,The method contains a magic number: 1234,200
vert.x,io.vertx.core.datagram,DatagramTest,testListenSamePortMultipleTimes,Magic Number,The method contains a magic number: 1234,200
vert.x,io.vertx.core.datagram,DatagramTest,testEcho,Magic Number,The method contains a magic number: 1234,211
vert.x,io.vertx.core.datagram,DatagramTest,testEcho,Magic Number,The method contains a magic number: 128,211
vert.x,io.vertx.core.datagram,DatagramTest,testEcho,Magic Number,The method contains a magic number: 1235,211
vert.x,io.vertx.core.datagram,DatagramTest,testEcho,Magic Number,The method contains a magic number: 1235,211
vert.x,io.vertx.core.datagram,DatagramTest,testEcho,Magic Number,The method contains a magic number: 1235,211
vert.x,io.vertx.core.datagram,DatagramTest,testEcho,Magic Number,The method contains a magic number: 1234,211
vert.x,io.vertx.core.datagram,DatagramTest,testEcho,Magic Number,The method contains a magic number: 1234,211
vert.x,io.vertx.core.datagram,DatagramTest,testSendAfterCloseFails,Magic Number,The method contains a magic number: 1234,238
vert.x,io.vertx.core.datagram,DatagramTest,testSendAfterCloseFails,Magic Number,The method contains a magic number: 1234,238
vert.x,io.vertx.core.datagram,DatagramTest,testBroadcast,Magic Number,The method contains a magic number: 1234,256
vert.x,io.vertx.core.datagram,DatagramTest,testBroadcast,Magic Number,The method contains a magic number: 128,256
vert.x,io.vertx.core.datagram,DatagramTest,testBroadcast,Magic Number,The method contains a magic number: 1234,256
vert.x,io.vertx.core.datagram,DatagramTest,testBroadcastFailsIfNotConfigured,Magic Number,The method contains a magic number: 1234,275
vert.x,io.vertx.core.datagram,DatagramTest,testMulticastJoinLeave,Long Statement,The length of the statement "testMulticastJoinLeave("0.0.0.0"`new DatagramSocketOptions()`new DatagramSocketOptions().setMulticastNetworkInterface(iface)`(groupAddress`handler) -> {" is 152.,287
vert.x,io.vertx.core.datagram,DatagramTest,testMulticastJoinLeave,Long Parameter List,The method has 5 parameters. ,320
vert.x,io.vertx.core.datagram,DatagramTest,testMulticastJoinLeave,Magic Number,The method contains a magic number: 1234,320
vert.x,io.vertx.core.datagram,DatagramTest,testMulticastJoinLeave,Magic Number,The method contains a magic number: 1234,320
vert.x,io.vertx.core.datagram,DatagramTest,testMulticastJoinLeave,Magic Number,The method contains a magic number: 1000,320
vert.x,io.vertx.core.datagram,DatagramTest,testMulticastJoinLeave,Magic Number,The method contains a magic number: 1234,320
vert.x,io.vertx.core.datagram,DatagramTest,testMulticastJoinLeave,Magic Number,The method contains a magic number: 1000,320
vert.x,io.vertx.core.datagram,DatagramTest,testOptions,Magic Number,The method contains a magic number: 123,381
vert.x,io.vertx.core.datagram,DatagramTest,testOptions,Magic Number,The method contains a magic number: 123,381
vert.x,io.vertx.core.datagram,DatagramTest,testOptions,Magic Number,The method contains a magic number: 23,381
vert.x,io.vertx.core.datagram,DatagramTest,testOptions,Magic Number,The method contains a magic number: 2,381
vert.x,io.vertx.core.datagram,DatagramTest,testOptions,Magic Number,The method contains a magic number: 256,381
vert.x,io.vertx.core.datagram,DatagramTest,testOptions,Magic Number,The method contains a magic number: 100,381
vert.x,io.vertx.core.datagram,DatagramTest,testCopyOptions,Magic Number,The method contains a magic number: 100,436
vert.x,io.vertx.core.datagram,DatagramTest,testCopyOptionsJson,Long Statement,The length of the statement "JsonObject json=new JsonObject().put("broadcast"`broadcast).put("loopbackModeDisabled"`loopbackModeDisabled).put("multicastTimeToLive"`multicastTimeToLive).put("multicastNetworkInterface"`multicastNetworkInterface).put("reuseAddress"`reuseAddress).put("ipV6"`ipV6);" is 265.,473
vert.x,io.vertx.core.datagram,DatagramTest,testCopyOptionsJson,Magic Number,The method contains a magic number: 100,473
vert.x,io.vertx.core.datagram,DatagramTest,testOptionsCopied,Magic Number,The method contains a magic number: 1234,498
vert.x,io.vertx.core.datagram,DatagramTest,testOptionsCopied,Magic Number,The method contains a magic number: 1234,498
vert.x,io.vertx.core.datagram,DatagramTest,testLogging,Magic Number,The method contains a magic number: 1234,533
vert.x,io.vertx.core.datagram,DatagramTest,testLogging,Magic Number,The method contains a magic number: 128,533
vert.x,io.vertx.core.datagram,DatagramTest,testLogging,Magic Number,The method contains a magic number: 1234,533
vert.x,io.vertx.core.datagram,DatagramTest,testWorker,Magic Number,The method contains a magic number: 2,550
vert.x,io.vertx.core.datagram,DatagramTest,testWorker,Magic Number,The method contains a magic number: 128,550
vert.x,io.vertx.core.datagram,DatagramTest,testWorker,Magic Number,The method contains a magic number: 1234,550
vert.x,io.vertx.core.datagram,DatagramTest,testWorker,Magic Number,The method contains a magic number: 1234,550
vert.x,io.vertx.core.datagram,DatagramTest,start,Magic Number,The method contains a magic number: 1234,555
vert.x,io.vertx.core,DeploymentOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 18,20
vert.x,io.vertx.core,VertxOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 46,20
vert.x,io.vertx.core,VertxOptionsConverter,fromJson,Long Method,The method has 116 lines of code.,20
vert.x,io.vertx.core,VertxOptionsConverter,fromJson,Long Statement,The length of the statement "obj.setAddressResolverOptions(new io.vertx.core.dns.AddressResolverOptions((io.vertx.core.json.JsonObject)member.getValue()));" is 126.,20
vert.x,io.vertx.core,VertxOptionsConverter,toJson,Complex Method,Cyclomatic complexity of the method is 12,141
vert.x,io.vertx.core,Future,join,Long Parameter List,The method has 5 parameters. ,147
vert.x,io.vertx.core,Future,join,Long Parameter List,The method has 6 parameters. ,154
vert.x,io.vertx.core,VertxOptions,VertxOptions,Long Identifier,The length of the field blockedThreadCheckIntervalUnit is 30.,153
vert.x,io.vertx.core,VertxOptions,VertxOptions,Long Statement,The length of the statement "this.fileSystemOptions=other.getFileSystemOptions() != null ? new FileSystemOptions(other.getFileSystemOptions()) : null;" is 121.,153
vert.x,io.vertx.core,VertxOptions,VertxOptions,Long Statement,The length of the statement "this.addressResolverOptions=other.addressResolverOptions != null ? new AddressResolverOptions(other.getAddressResolverOptions()) : null;" is 136.,153
vert.x,io.vertx.core,VertxOptions,getBlockedThreadCheckIntervalUnit,Long Identifier,The length of the field blockedThreadCheckIntervalUnit is 30.,623
vert.x,io.vertx.core,VertxOptions,setBlockedThreadCheckIntervalUnit,Long Identifier,The length of the parameter blockedThreadCheckIntervalUnit is 30.,630
vert.x,io.vertx.core,VertxOptions,setBlockedThreadCheckIntervalUnit,Long Identifier,The length of the field blockedThreadCheckIntervalUnit is 30.,630
vert.x,io.vertx.core,VertxOptions,toString,Long Identifier,The length of the field blockedThreadCheckIntervalUnit is 30.,716
vert.x,io.vertx.core,VertxOptions,toString,Long Statement,The length of the statement "return "VertxOptions{" + "eventLoopPoolSize=" + eventLoopPoolSize + "` workerPoolSize="+ workerPoolSize+ "` internalBlockingPoolSize="+ internalBlockingPoolSize+ "` blockedThreadCheckIntervalUnit="+ blockedThreadCheckIntervalUnit+ "` blockedThreadCheckInterval="+ blockedThreadCheckInterval+ "` maxEventLoopExecuteTimeUnit="+ maxEventLoopExecuteTimeUnit+ "` maxEventLoopExecuteTime="+ maxEventLoopExecuteTime+ "` maxWorkerExecuteTimeUnit="+ maxWorkerExecuteTimeUnit+ "` maxWorkerExecuteTime="+ maxWorkerExecuteTime+ "` clusterManager="+ clusterManager+ "` haEnabled="+ haEnabled+ "` preferNativeTransport="+ preferNativeTransport+ "` quorumSize="+ quorumSize+ "` haGroup='"+ haGroup+ '\''+ "` metrics="+ metricsOptions+ "` tracing="+ tracingOptions+ "` fileSystemOptions="+ fileSystemOptions+ "` addressResolver="+ addressResolverOptions.toJson()+ "` eventbus="+ eventBusOptions.toJson()+ "` warningExceptionTimeUnit="+ warningExceptionTimeUnit+ "` warningExceptionTime="+ warningExceptionTime+ "` disableTCCL="+ disableTCCL+ "` useDaemonThread="+ useDaemonThread+ '}';" is 1069.,716
vert.x,io.vertx.core,AccessEventBusFromInitVerticleFactoryTest,testLoadFactoryThatCheckEventBusAndSharedDataForNull,Magic Number,The method contains a magic number: 2,9
vert.x,io.vertx.core,BlockedThreadCheckerTest,expectMessage,Long Statement,The length of the statement "if (event.thread().getName().startsWith(poolName) && event.maxExecTime() == maxExecuteTimeUnit.toNanos(maxExecuteTime)) {" is 121.,34
vert.x,io.vertx.core,BlockedThreadCheckerTest,testBlockCheckDefault,Long Statement,The length of the statement "expectMessage("vert.x-eventloop-thread"`VertxOptions.DEFAULT_MAX_EVENT_LOOP_EXECUTE_TIME`VertxOptions.DEFAULT_MAX_EVENT_LOOP_EXECUTE_TIME_UNIT);" is 144.,54
vert.x,io.vertx.core,BlockedThreadCheckerTest,testBlockCheckDefault,Magic Number,The method contains a magic number: 6000,54
vert.x,io.vertx.core,BlockedThreadCheckerTest,start,Magic Number,The method contains a magic number: 6000,57
vert.x,io.vertx.core,BlockedThreadCheckerTest,testBlockCheckExceptionTimeLimit,Magic Number,The method contains a magic number: 3000,69
vert.x,io.vertx.core,BlockedThreadCheckerTest,start,Magic Number,The method contains a magic number: 3000,72
vert.x,io.vertx.core,BlockedThreadCheckerTest,testBlockCheckWorker,Magic Number,The method contains a magic number: 3000,97
vert.x,io.vertx.core,BlockedThreadCheckerTest,start,Magic Number,The method contains a magic number: 3000,100
vert.x,io.vertx.core,BlockedThreadCheckerTest,testBlockCheckExecuteBlocking,Magic Number,The method contains a magic number: 3000,127
vert.x,io.vertx.core,BlockedThreadCheckerTest,start,Magic Number,The method contains a magic number: 3000,130
vert.x,io.vertx.core,BlockedThreadCheckerTest,testNamedWorkerPoolMaxExecuteWorkerTime,Long Statement,The length of the statement "DeploymentOptions deploymentOptions=new DeploymentOptions().setWorkerPoolName(poolName).setMaxWorkerExecuteTime(maxWorkerExecuteTime);" is 134.,162
vert.x,io.vertx.core,BlockedThreadCheckerTest,testNamedWorkerPoolMaxExecuteWorkerTime,Magic Number,The method contains a magic number: 10,162
vert.x,io.vertx.core,BlockedThreadCheckerTest,testNamedWorkerPoolMaxExecuteWorkerTime,Magic Number,The method contains a magic number: 3,162
vert.x,io.vertx.core,BlockedThreadCheckerTest,testNamedWorkerPoolMaxExecuteWorkerTime,Magic Number,The method contains a magic number: 5,162
vert.x,io.vertx.core,BlockedThreadCheckerTest,start,Magic Number,The method contains a magic number: 5,171
vert.x,io.vertx.core,BlockedThreadCheckerTest,testCustomThreadBlockedHandler,Magic Number,The method contains a magic number: 2,185
vert.x,io.vertx.core,BlockedThreadCheckerTest,testCustomThreadBlockedHandler,Magic Number,The method contains a magic number: 3000,185
vert.x,io.vertx.core,BlockedThreadCheckerTest,testCustomThreadBlockedHandler,Magic Number,The method contains a magic number: 1000,185
vert.x,io.vertx.core,BlockedThreadCheckerTest,testCustomThreadBlockedHandler,Magic Number,The method contains a magic number: 2,185
vert.x,io.vertx.core,BlockedThreadCheckerTest,start,Magic Number,The method contains a magic number: 3000,190
vert.x,io.vertx.core,ClasspathVerticleFactoryTest,testLoadedFromClasspath,Magic Number,The method contains a magic number: 2,23
vert.x,io.vertx.core,ComplexHATest,testComplexFailover,Magic Number,The method contains a magic number: 10,63
vert.x,io.vertx.core,ComplexHATest,testComplexFailover,Magic Number,The method contains a magic number: 8,63
vert.x,io.vertx.core,ComplexHATest,testComplexFailover,Magic Number,The method contains a magic number: 2,63
vert.x,io.vertx.core,ComplexHATest,deployRandomVerticles,Magic Number,The method contains a magic number: 100,81
vert.x,io.vertx.core,ComplexHATest,deployRandomVerticles,Magic Number,The method contains a magic number: 3,81
vert.x,io.vertx.core,ComplexHATest,eventLoopWaitUntil,Magic Number,The method contains a magic number: 10000,136
vert.x,io.vertx.core,ComplexHATest,checkHasDeployments,Long Statement,The length of the statement "if (curr.verticleIdentifier().equals(prev.verticleIdentifier()) && curr.deploymentOptions().toJson().equals(prev.deploymentOptions().toJson())) {" is 145.,223
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentAllSuccess,Magic Number,The method contains a magic number: 100,54
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentAllFailure,Magic Number,The method contains a magic number: 100,62
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentAllMixed,Magic Number,The method contains a magic number: 100,70
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentAnySuccess,Magic Number,The method contains a magic number: 100,78
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentAnyFailure,Magic Number,The method contains a magic number: 100,86
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentAnyMixed,Magic Number,The method contains a magic number: 100,94
vert.x,io.vertx.core,CompositeFutureTest,tesConcurrenttJoinSuccess,Magic Number,The method contains a magic number: 100,102
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentJoinFailure,Magic Number,The method contains a magic number: 100,110
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentJoinMixed,Magic Number,The method contains a magic number: 100,118
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentCompletion,Long Statement,The length of the statement "List<Promise<String>> promises=IntStream.range(0`NUM_THREADS).mapToObj(i -> Promise.<String>promise()).collect(Collectors.toList());" is 132.,126
vert.x,io.vertx.core,CompositeFutureTest,testConcurrentCompletion,Magic Number,The method contains a magic number: 30,126
vert.x,io.vertx.core,CompositeFutureTest,testAllSucceeded,Magic Number,The method contains a magic number: 3,168
vert.x,io.vertx.core,CompositeFutureTest,testAllSucceeded,Magic Number,The method contains a magic number: 3,168
vert.x,io.vertx.core,CompositeFutureTest,testAllLargeList,Magic Number,The method contains a magic number: 63,219
vert.x,io.vertx.core,CompositeFutureTest,testAllLargeList,Magic Number,The method contains a magic number: 64,219
vert.x,io.vertx.core,CompositeFutureTest,testAllLargeList,Magic Number,The method contains a magic number: 65,219
vert.x,io.vertx.core,CompositeFutureTest,testAllLargeList,Magic Number,The method contains a magic number: 100,219
vert.x,io.vertx.core,CompositeFutureTest,testAnySucceeded1,Magic Number,The method contains a magic number: 3,264
vert.x,io.vertx.core,CompositeFutureTest,testAnySucceeded2,Magic Number,The method contains a magic number: 3,296
vert.x,io.vertx.core,CompositeFutureTest,testAnyLargeList,Magic Number,The method contains a magic number: 63,333
vert.x,io.vertx.core,CompositeFutureTest,testAnyLargeList,Magic Number,The method contains a magic number: 64,333
vert.x,io.vertx.core,CompositeFutureTest,testAnyLargeList,Magic Number,The method contains a magic number: 65,333
vert.x,io.vertx.core,CompositeFutureTest,testAnyLargeList,Magic Number,The method contains a magic number: 100,333
vert.x,io.vertx.core,CompositeFutureTest,testJoinFailed2,Magic Number,The method contains a magic number: 10,426
vert.x,io.vertx.core,CompositeFutureTest,testCompositeFutureToList,Magic Number,The method contains a magic number: 4,473
vert.x,io.vertx.core,CompositeFutureTest,testCompositeFutureToList,Magic Number,The method contains a magic number: 4,473
vert.x,io.vertx.core,CompositeFutureTest,testCompositeFutureCauses,Magic Number,The method contains a magic number: 2,487
vert.x,io.vertx.core,CompositeFutureTest,testCompositeFutureMulti,Magic Number,The method contains a magic number: 2,498
vert.x,io.vertx.core,CompositeFutureTest,testCompositeFutureMulti,Magic Number,The method contains a magic number: 4,498
vert.x,io.vertx.core,CompositeFutureTest,testCompositeFutureMulti,Magic Number,The method contains a magic number: 2,498
vert.x,io.vertx.core,CompositeFutureTest,testIndexOutOfBounds,Magic Number,The method contains a magic number: 2,522
vert.x,io.vertx.core,CompositeFutureTest,testIndexOutOfBounds,Magic Number,The method contains a magic number: 2,522
vert.x,io.vertx.core,CompositeFutureTest,testIndexOutOfBounds,Magic Number,The method contains a magic number: 3,522
vert.x,io.vertx.core,CompositeFutureTest,testToString,Long Statement,The length of the statement "assertEquals("Future{result=(Future{result=null}`Future{result=null})}"`Future.all(Future.succeededFuture()`Future.succeededFuture()).toString());" is 146.,531
vert.x,io.vertx.core,CompositeFutureTest,testToString,Long Statement,The length of the statement "assertEquals("Future{result=(Future{result=true}`Future{result=false})}"`Future.all(Future.succeededFuture(true)`Future.succeededFuture(false)).toString());" is 156.,531
vert.x,io.vertx.core,ContextTaskTest,setUp,Magic Number,The method contains a magic number: 2,47
vert.x,io.vertx.core,ContextTaskTest,setUp,Magic Number,The method contains a magic number: 10,47
vert.x,io.vertx.core,ContextTaskTest,createWorkerContext,Long Statement,The length of the statement "return ((VertxInternal)vertx).createWorkerContext(null`null`new WorkerPool(workerExecutor`null)`Thread.currentThread().getContextClassLoader());" is 144.,63
vert.x,io.vertx.core,ContextTaskTest,testOpFromSameContext,Magic Number,The method contains a magic number: 2,89
vert.x,io.vertx.core,ContextTaskTest,testOpFromSameEventLoop,Magic Number,The method contains a magic number: 2,132
vert.x,io.vertx.core,ContextTaskTest,testOpFromAnotherEventLoop,Magic Number,The method contains a magic number: 2,177
vert.x,io.vertx.core,ContextTaskTest,testOpFromSameSchedule,Magic Number,The method contains a magic number: 2,217
vert.x,io.vertx.core,ContextTest,createWorkerContext,Long Statement,The length of the statement "return ((VertxInternal)vertx).createWorkerContext(null`new CloseFuture()`new WorkerPool(workerExecutor`null)`Thread.currentThread().getContextClassLoader());" is 157.,42
vert.x,io.vertx.core,ContextTest,setUp,Magic Number,The method contains a magic number: 2,46
vert.x,io.vertx.core,ContextTest,setUp,Magic Number,The method contains a magic number: 10,46
vert.x,io.vertx.core,ContextTest,testRunOnContext,Magic Number,The method contains a magic number: 10,58
vert.x,io.vertx.core,ContextTest,testExecuteOrderedBlocking,Magic Number,The method contains a magic number: 2,124
vert.x,io.vertx.core,ContextTest,testExecuteOrderedBlocking,Magic Number,The method contains a magic number: 3,124
vert.x,io.vertx.core,ContextTest,testExecuteUnorderedBlocking,Magic Number,The method contains a magic number: 2,138
vert.x,io.vertx.core,ContextTest,testExecuteUnorderedBlocking,Magic Number,The method contains a magic number: 3,138
vert.x,io.vertx.core,ContextTest,testExecuteBlockingThreadAsyncComplete,Magic Number,The method contains a magic number: 200,166
vert.x,io.vertx.core,ContextTest,testExecuteBlockingThreadAsyncComplete,Magic Number,The method contains a magic number: 20,166
vert.x,io.vertx.core,ContextTest,testVerticleUseDifferentOrderedExecutor,Magic Number,The method contains a magic number: 2,296
vert.x,io.vertx.core,ContextTest,testInternalExecuteBlockingWithQueue,Magic Number,The method contains a magic number: 2,328
vert.x,io.vertx.core,ContextTest,testInternalExecuteBlockingWithQueue,Magic Number,The method contains a magic number: 2,341
vert.x,io.vertx.core,ContextTest,testInternalExecuteBlockingWithQueue,Magic Number,The method contains a magic number: 3,341
vert.x,io.vertx.core,ContextTest,testInternalExecuteBlockingWithQueue,Magic Number,The method contains a magic number: 10,341
vert.x,io.vertx.core,ContextTest,testInternalExecuteBlockingWithQueue,Magic Number,The method contains a magic number: 20,341
vert.x,io.vertx.core,ContextTest,checkDuplicate,Magic Number,The method contains a magic number: 10,438
vert.x,io.vertx.core,ContextTest,testDuplicateWorkerConcurrency,Magic Number,The method contains a magic number: 200,497
vert.x,io.vertx.core,ContextTest,testDuplicateExecuteBlocking,Magic Number,The method contains a magic number: 2,563
vert.x,io.vertx.core,ContextTest,testDuplicateExecuteBlocking,Magic Number,The method contains a magic number: 2,563
vert.x,io.vertx.core,ContextTest,testDuplicateExecuteBlocking,Magic Number,The method contains a magic number: 2000,563
vert.x,io.vertx.core,ContextTest,testDuplicateExecuteBlocking,Magic Number,The method contains a magic number: 500,563
vert.x,io.vertx.core,ContextTest,testReentrantDispatch,Magic Number,The method contains a magic number: 2,590
vert.x,io.vertx.core,ContextTest,testSucceededFutureContextPropagation2,Magic Number,The method contains a magic number: 100,841
vert.x,io.vertx.core,ContextTest,testDispatchContextOnAnyThread,Magic Number,The method contains a magic number: 2,962
vert.x,io.vertx.core,ContextTest,testDispatchContextOnAnyThread,Magic Number,The method contains a magic number: 2,962
vert.x,io.vertx.core,ContextTest,testDispatchContextOnAnyThread,Magic Number,The method contains a magic number: 2,962
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 4,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 4,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 2,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 3,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 8,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 4,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 1234567,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 4,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 2,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonObject,Magic Number,The method contains a magic number: 3,38
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 4,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 4,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 2,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 3,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 8,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 4,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 2,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 3,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 1234567,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 4,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 5,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 4,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 6,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 2,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 3,61
vert.x,io.vertx.core,ConversionHelperTest,testToJsonArray,Magic Number,The method contains a magic number: 7,61
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 4,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 4,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 2,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 3,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 6,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 4,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 4,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 2,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonObject,Magic Number,The method contains a magic number: 3,95
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 4,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 4,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 2,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 3,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 6,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 4,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 2,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 3,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 4,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 4,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 2,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 3,114
vert.x,io.vertx.core,ConversionHelperTest,testFromJsonArray,Magic Number,The method contains a magic number: 5,114
vert.x,io.vertx.core,ConversionHelperTest,testWrapObject,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("nestedObj"`new JsonObject().put("key"`"value")).put("nestedList"`new JsonArray().add(new JsonObject().put("key"`"value")));" is 160.,133
vert.x,io.vertx.core,CustomerLauncherLowMemoryTest,testCloseHookInvoked,Magic Number,The method contains a magic number: 10000,47
vert.x,io.vertx.core,CustomerLauncherLowMemoryTest,stopExternalProcess,Magic Number,The method contains a magic number: 10_000,74
vert.x,io.vertx.core,DeploymentTest,testOptions,Magic Number,The method contains a magic number: 123,49
vert.x,io.vertx.core,DeploymentTest,testOptions,Magic Number,The method contains a magic number: 1000,49
vert.x,io.vertx.core,DeploymentTest,testOptions,Magic Number,The method contains a magic number: 10,49
vert.x,io.vertx.core,DeploymentTest,testCopyOptions,Magic Number,The method contains a magic number: 100,78
vert.x,io.vertx.core,DeploymentTest,testCopyOptions,Magic Number,The method contains a magic number: 10,78
vert.x,io.vertx.core,DeploymentTest,testJsonOptions,Magic Number,The method contains a magic number: 10,123
vert.x,io.vertx.core,DeploymentTest,testToJson,Magic Number,The method contains a magic number: 10,153
vert.x,io.vertx.core,DeploymentTest,testDeployFromContext,Magic Number,The method contains a magic number: 2,214
vert.x,io.vertx.core,DeploymentTest,testDeployUndeployMultiple,Magic Number,The method contains a magic number: 10,481
vert.x,io.vertx.core,DeploymentTest,testDeployUndeployMultiple,Magic Number,The method contains a magic number: 10,481
vert.x,io.vertx.core,DeploymentTest,testDeployUndeployMultiple,Magic Number,The method contains a magic number: 10,481
vert.x,io.vertx.core,DeploymentTest,testDeployInstanceSetInstances,Magic Number,The method contains a magic number: 2,505
vert.x,io.vertx.core,DeploymentTest,testDeployUsingClassAndConfig,Long Statement,The length of the statement "vertx.deployVerticle("java:" + TestVerticle.class.getCanonicalName()`new DeploymentOptions().setConfig(config)).onComplete(onSuccess(id -> testComplete()));" is 156.,517
vert.x,io.vertx.core,DeploymentTest,testDeployUndeployMultipleInstancesUsingClassName,Magic Number,The method contains a magic number: 10,535
vert.x,io.vertx.core,DeploymentTest,testSimpleChildDeployment,Magic Number,The method contains a magic number: 3,601
vert.x,io.vertx.core,DeploymentTest,testSimpleChildUndeploymentOrder,Magic Number,The method contains a magic number: 10,620
vert.x,io.vertx.core,DeploymentTest,testSimpleChildUndeploymentDeployedAfterParentFailure,Magic Number,The method contains a magic number: 100,722
vert.x,io.vertx.core,DeploymentTest,start,Magic Number,The method contains a magic number: 100,726
vert.x,io.vertx.core,DeploymentTest,start,Magic Number,The method contains a magic number: 100,729
vert.x,io.vertx.core,DeploymentTest,testAsyncDeploy,Magic Number,The method contains a magic number: 1000,767
vert.x,io.vertx.core,DeploymentTest,testAsyncDeploy,Magic Number,The method contains a magic number: 2,767
vert.x,io.vertx.core,DeploymentTest,testAsyncDeployFailure,Magic Number,The method contains a magic number: 1000,787
vert.x,io.vertx.core,DeploymentTest,testAsyncUndeploy,Magic Number,The method contains a magic number: 1000,828
vert.x,io.vertx.core,DeploymentTest,testAsyncUndeploy,Magic Number,The method contains a magic number: 2,828
vert.x,io.vertx.core,DeploymentTest,testAsyncUndeployFailure,Long Statement,The length of the statement "MyAsyncVerticle verticle=new MyAsyncVerticle(f -> f.complete(null)`f -> vertx.setTimer(delay`id -> f.fail(new Exception("foobar"))));" is 133.,845
vert.x,io.vertx.core,DeploymentTest,testAsyncUndeployFailure,Magic Number,The method contains a magic number: 1000,845
vert.x,io.vertx.core,DeploymentTest,testAsyncUndeployFailsAfterSuccess,Magic Number,The method contains a magic number: 2,861
vert.x,io.vertx.core,DeploymentTest,testChildUndeployedDirectly,Magic Number,The method contains a magic number: 10,884
vert.x,io.vertx.core,DeploymentTest,testCloseHooksCalled,Magic Number,The method contains a magic number: 2,917
vert.x,io.vertx.core,DeploymentTest,testUndeployAll,Magic Number,The method contains a magic number: 10,997
vert.x,io.vertx.core,DeploymentTest,testUndeployAll,Magic Number,The method contains a magic number: 2,997
vert.x,io.vertx.core,DeploymentTest,testDeployChildOnParentUndeploy,Long Statement,The length of the statement "vertx.deployVerticle(new ParentVerticle()).onComplete(onSuccess(id -> vertx.undeploy(id).onComplete(onFailure(u -> testComplete()))));" is 134.,1019
vert.x,io.vertx.core,DeploymentTest,testUndeployAllFailureInUndeploy,Magic Number,The method contains a magic number: 10,1035
vert.x,io.vertx.core,DeploymentTest,testGetInstanceCountMultipleVerticles,Long Statement,The length of the statement "vertx.deployVerticle(TestVerticle3.class.getCanonicalName()`new DeploymentOptions().setInstances(3)).onComplete(onSuccess(v -> {" is 128.,1079
vert.x,io.vertx.core,DeploymentTest,testGetInstanceCountMultipleVerticles,Magic Number,The method contains a magic number: 3,1079
vert.x,io.vertx.core,DeploymentTest,testGetInstanceCountMultipleVerticles,Magic Number,The method contains a magic number: 9,1079
vert.x,io.vertx.core,DeploymentTest,testGetInstanceCountMultipleVerticles,Magic Number,The method contains a magic number: 3,1079
vert.x,io.vertx.core,DeploymentTest,testDeploySupplier,Magic Number,The method contains a magic number: 4,1131
vert.x,io.vertx.core,DeploymentTest,testDeploySupplierDuplicate,Magic Number,The method contains a magic number: 2,1166
vert.x,io.vertx.core,DeploymentTest,testDeployClass,Long Statement,The length of the statement "vertx.deployVerticle(ReferenceSavingMyVerticle.class`new DeploymentOptions().setInstances(4).setConfig(config)).onComplete(onSuccess(deploymentId -> {" is 150.,1192
vert.x,io.vertx.core,DeploymentTest,testDeployClass,Magic Number,The method contains a magic number: 4,1192
vert.x,io.vertx.core,DeploymentTest,testFailedDeployRunsContextShutdownHook,Long Identifier,The length of the identifier closeHookCalledBeforeDeployFailure is 34.,1217
vert.x,io.vertx.core,DeploymentTest,testMultipleFailedDeploys,Magic Number,The method contains a magic number: 10,1238
vert.x,io.vertx.core,DeploymentTest,testMultipleFailedDeploys,Magic Number,The method contains a magic number: 30,1238
vert.x,io.vertx.core,DeploymentTest,testUndeployParentDuringChildDeployment,Magic Number,The method contains a magic number: 2,1266
vert.x,io.vertx.core,DeploymentTest,testContextClassLoader,Magic Number,The method contains a magic number: 5,1304
vert.x,io.vertx.core,DeploymentTest,start,Magic Number,The method contains a magic number: 5,1322
vert.x,io.vertx.core,DeploymentTest,generateJSONObject,Magic Number,The method contains a magic number: 123,1356
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingSuccess,Empty catch clause,The method has an empty catch block.,27
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingSuccess,Magic Number,The method contains a magic number: 1000,27
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingFailed,Empty catch clause,The method has an empty catch block.,43
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingFailed,Magic Number,The method contains a magic number: 1000,43
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingContext,Empty catch clause,The method has an empty catch block.,71
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingContext,Magic Number,The method contains a magic number: 1000,71
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingContext,Magic Number,The method contains a magic number: 20,71
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingParallel,Empty catch clause,The method has an empty catch block.,127
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingParallel,Magic Number,The method contains a magic number: 10,127
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingParallel,Magic Number,The method contains a magic number: 1000,127
vert.x,io.vertx.core,ExecuteBlockingTest,testExecuteBlockingParallel,Magic Number,The method contains a magic number: 1000,127
vert.x,io.vertx.core,FutureTest,testComposeSuccessToSuccess,Magic Number,The method contains a magic number: 6,232
vert.x,io.vertx.core,FutureTest,testComposeSuccessToSuccess,Magic Number,The method contains a magic number: 6,232
vert.x,io.vertx.core,FutureTest,testComposeWithNullFunction,Empty catch clause,The method has an empty catch block.,291
vert.x,io.vertx.core,FutureTest,testTransformToSuccess,Magic Number,The method contains a magic number: 6,312
vert.x,io.vertx.core,FutureTest,testTransformToSuccess,Magic Number,The method contains a magic number: 6,312
vert.x,io.vertx.core,FutureTest,testTransformWithNullFunction,Empty catch clause,The method has an empty catch block.,372
vert.x,io.vertx.core,FutureTest,testEventuallySuccessToSuccess,Magic Number,The method contains a magic number: 6,383
vert.x,io.vertx.core,FutureTest,testEventuallyFailureToSuccess,Magic Number,The method contains a magic number: 6,412
vert.x,io.vertx.core,FutureTest,testMapSuccess,Magic Number,The method contains a magic number: 3,442
vert.x,io.vertx.core,FutureTest,testMapValueSuccess,Magic Number,The method contains a magic number: 3,453
vert.x,io.vertx.core,FutureTest,testMapValueAlreadySuccess,Magic Number,The method contains a magic number: 3,464
vert.x,io.vertx.core,FutureTest,testMapWithNullFunction,Empty catch clause,The method has an empty catch block.,527
vert.x,io.vertx.core,FutureTest,testMapWithNullFunction,Empty catch clause,The method has an empty catch block.,527
vert.x,io.vertx.core,FutureTest,testMapEmpty,Magic Number,The method contains a magic number: 3,543
vert.x,io.vertx.core,FutureTest,testRecoverWithNullFunction,Empty catch clause,The method has an empty catch block.,608
vert.x,io.vertx.core,FutureTest,testDefaultCompleter,Complex Method,Cyclomatic complexity of the method is 8,752
vert.x,io.vertx.core,FutureTest,testDefaultCompleter,Long Method,The method has 149 lines of code.,752
vert.x,io.vertx.core,FutureTest,testUncompletedAsyncResultMap,Magic Number,The method contains a magic number: 17,852
vert.x,io.vertx.core,FutureTest,testSucceededAsyncResultMap,Magic Number,The method contains a magic number: 17,865
vert.x,io.vertx.core,FutureTest,testSucceededAsyncResultMap,Magic Number,The method contains a magic number: 6,865
vert.x,io.vertx.core,FutureTest,testSucceededAsyncResultMap,Magic Number,The method contains a magic number: 17,865
vert.x,io.vertx.core,FutureTest,testFailedAsyncResultMap,Magic Number,The method contains a magic number: 17,879
vert.x,io.vertx.core,FutureTest,testOtherwiseWithNullFunction,Empty catch clause,The method has an empty catch block.,1081
vert.x,io.vertx.core,FutureTest,testOtherwiseWithNullFunction,Empty catch clause,The method has an empty catch block.,1081
vert.x,io.vertx.core,FutureTest,testToString,Long Statement,The length of the statement "assertEquals("Future{cause=It's like that` and that's the way it is}"`Future.failedFuture("It's like that` and that's the way it is").toString());" is 146.,1112
vert.x,io.vertx.core,FutureTest,testSetNullHandler,Empty catch clause,The method has an empty catch block.,1149
vert.x,io.vertx.core,FutureTest,testSetNullHandler,Empty catch clause,The method has an empty catch block.,1149
vert.x,io.vertx.core,FutureTest,testSucceedOnContext,Magic Number,The method contains a magic number: 4,1165
vert.x,io.vertx.core,FutureTest,testSucceedOnContext,Magic Number,The method contains a magic number: 10,1165
vert.x,io.vertx.core,FutureTest,testSeveralHandlers1,Magic Number,The method contains a magic number: 2,1259
vert.x,io.vertx.core,FutureTest,testSeveralHandlers2,Magic Number,The method contains a magic number: 2,1274
vert.x,io.vertx.core,FutureTest,testSeveralHandlers3,Magic Number,The method contains a magic number: 2,1289
vert.x,io.vertx.core,FutureTest,testSuccessNotification,Magic Number,The method contains a magic number: 2,1304
vert.x,io.vertx.core,FutureTest,testFailureNotification,Magic Number,The method contains a magic number: 2,1324
vert.x,io.vertx.core,FutureTest,testVoidFuture,Magic Number,The method contains a magic number: 2,1345
vert.x,io.vertx.core,FutureTest,testToCompletionStageTrampolining,Magic Number,The method contains a magic number: 2,1374
vert.x,io.vertx.core,FutureTest,testToCompletionStageDelayedCompletion,Magic Number,The method contains a magic number: 2,1397
vert.x,io.vertx.core,FutureTest,testFromCompletionStageTrampolining,Magic Number,The method contains a magic number: 2,1425
vert.x,io.vertx.core,FutureTest,testFromCompletionStageWithContext,Magic Number,The method contains a magic number: 2,1462
vert.x,io.vertx.core,FutureTest,testCompletedFuturesContext,Magic Number,The method contains a magic number: 4,1503
vert.x,io.vertx.core,FutureTest,testOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContext((ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onComplete(ignore -> task.run())`Promise::complete);" is 154.,1546
vert.x,io.vertx.core,FutureTest,testOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContext((ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run())`Promise::complete);" is 145.,1546
vert.x,io.vertx.core,FutureTest,testOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContext((ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onSuccess(ignore -> task.run())`Promise::complete);" is 153.,1546
vert.x,io.vertx.core,FutureTest,testOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContext((ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onSuccess(ignore -> task.run())`Promise::complete);" is 144.,1546
vert.x,io.vertx.core,FutureTest,testOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContext((ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run())`promise -> promise.fail("failure"));" is 162.,1546
vert.x,io.vertx.core,FutureTest,testOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContext((ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run())`promise -> promise.fail("failure"));" is 162.,1546
vert.x,io.vertx.core,FutureTest,testOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContext((ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onFailure(ignore -> task.run())`promise -> promise.fail("failure"));" is 170.,1546
vert.x,io.vertx.core,FutureTest,testOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContext((ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onFailure(ignore -> task.run())`promise -> promise.fail("failure"));" is 161.,1546
vert.x,io.vertx.core,FutureTest,testListenersReportFailureOnContext,Magic Number,The method contains a magic number: 2,1558
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(succeededFutureProvider1`(ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onComplete(ignore -> task.run()));" is 176.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(succeededFutureProvider1`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run()));" is 167.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(succeededFutureProvider1`(ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onSuccess(ignore -> task.run()));" is 175.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(succeededFutureProvider1`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onSuccess(ignore -> task.run()));" is 166.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(succeededFutureProvider2`(ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onComplete(ignore -> task.run()));" is 176.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(succeededFutureProvider2`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run()));" is 167.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(succeededFutureProvider2`(ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onSuccess(ignore -> task.run()));" is 175.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(succeededFutureProvider2`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onSuccess(ignore -> task.run()));" is 166.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(failedFutureProvider1`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run()));" is 164.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(failedFutureProvider1`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run()));" is 164.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(failedFutureProvider1`(ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onFailure(ignore -> task.run()));" is 172.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(failedFutureProvider1`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onFailure(ignore -> task.run()));" is 163.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(failedFutureProvider2`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run()));" is 164.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(failedFutureProvider2`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onComplete(ignore -> task.run()));" is 164.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(failedFutureProvider2`(ctx`task) -> ctx.runOnContext(v -> task.run())`(fut`task) -> fut.onFailure(ignore -> task.run()));" is 172.,1583
vert.x,io.vertx.core,FutureTest,testCompletedFutureOnXXXReportsFailureOnContext,Long Statement,The length of the statement "testListenersReportFailureOnContextAfterCompletion(failedFutureProvider2`(ctx`task) -> new Thread(task).start()`(fut`task) -> fut.onFailure(ignore -> task.run()));" is 163.,1583
vert.x,io.vertx.core,FutureTest,testAndThenComplete,Magic Number,The method contains a magic number: 4,1632
vert.x,io.vertx.core,FutureTest,testAndThenCompleteContextual,Magic Number,The method contains a magic number: 50,1652
vert.x,io.vertx.core,FutureTest,testAndThenCompleteContextual,Magic Number,The method contains a magic number: 4,1652
vert.x,io.vertx.core,FutureTest,testAndThenCompleteHandlerWithError,Magic Number,The method contains a magic number: 4,1689
vert.x,io.vertx.core,HATest,testSimpleFailover,Magic Number,The method contains a magic number: 2,45
vert.x,io.vertx.core,HATest,testQuorum,Magic Number,The method contains a magic number: 2,63
vert.x,io.vertx.core,HATest,testQuorum,Magic Number,The method contains a magic number: 2,63
vert.x,io.vertx.core,HATest,testQuorumLost,Magic Number,The method contains a magic number: 3,80
vert.x,io.vertx.core,HATest,testQuorumLost,Magic Number,The method contains a magic number: 3,80
vert.x,io.vertx.core,HATest,testQuorumLost,Magic Number,The method contains a magic number: 3,80
vert.x,io.vertx.core,HATest,testQuorumLost,Magic Number,The method contains a magic number: 3,80
vert.x,io.vertx.core,HATest,testCleanCloseNoFailover,Magic Number,The method contains a magic number: 500,108
vert.x,io.vertx.core,HATest,testFailureInFailover,Long Statement,The length of the statement "vertx1.deployVerticle("java:" + HAVerticle1.class.getName()`new DeploymentOptions().setHa(true)).onComplete(onSuccess(id -> {" is 125.,133
vert.x,io.vertx.core,HATest,testHaGroups,Long Statement,The length of the statement "vertx1.deployVerticle("java:" + HAVerticle1.class.getName()`new DeploymentOptions().setHa(true)).onComplete(onSuccess(id -> {" is 125.,173
vert.x,io.vertx.core,HATest,testHaGroups,Long Statement,The length of the statement "vertx3.deployVerticle("java:" + HAVerticle2.class.getName()`new DeploymentOptions().setHa(true)).onComplete(onSuccess(id -> {" is 125.,173
vert.x,io.vertx.core,HATest,testHaGroups,Magic Number,The method contains a magic number: 2,173
vert.x,io.vertx.core,HATest,testNoFailoverToNonHANode,Long Statement,The length of the statement "vertx1.deployVerticle("java:" + HAVerticle1.class.getName()`new DeploymentOptions().setHa(true)).onComplete(onSuccess(id -> {" is 125.,216
vert.x,io.vertx.core,HATest,testNoFailoverToNonHANode,Magic Number,The method contains a magic number: 500,216
vert.x,io.vertx.core,HATest,testNonHADeployments,Long Statement,The length of the statement "vertx2.deployVerticle("java:" + HAVerticle1.class.getName()`new DeploymentOptions().setHa(true)).onComplete(onSuccess(id -> {" is 125.,243
vert.x,io.vertx.core,HATest,testNonHADeployments,Long Statement,The length of the statement "vertx2.deployVerticle("java:" + HAVerticle2.class.getName()`new DeploymentOptions().setHa(false)).onComplete(onSuccess(id -> {" is 126.,243
vert.x,io.vertx.core,HATest,testNonHADeployments,Long Statement,The length of the statement "assertTrue(((VertxInternal)vertx1).getDeployment(depID).verticleIdentifier().equals("java:" + HAVerticle1.class.getName()));" is 124.,243
vert.x,io.vertx.core,HATest,testNonHADeployments,Magic Number,The method contains a magic number: 2,243
vert.x,io.vertx.core,HATest,testCloseRemovesFromCluster,Long Statement,The length of the statement "vertx3.deployVerticle("java:" + HAVerticle1.class.getName()`new DeploymentOptions().setHa(true)).onComplete(onSuccess(id -> {" is 125.,271
vert.x,io.vertx.core,HATest,testCloseRemovesFromCluster,Long Statement,The length of the statement "assertTrue(((VertxInternal)vertx1).getDeployment(depID).verticleIdentifier().equals("java:" + HAVerticle1.class.getName()));" is 124.,271
vert.x,io.vertx.core,HATest,testQuorumWithHaGroups,Long Statement,The length of the statement "vertx1.deployVerticle("java:" + HAVerticle1.class.getName()`new DeploymentOptions().setHa(true)).onComplete(onSuccess(id -> {" is 125.,299
vert.x,io.vertx.core,HATest,testQuorumWithHaGroups,Long Statement,The length of the statement "vertx2.deployVerticle("java:" + HAVerticle1.class.getName()`new DeploymentOptions().setHa(true)).onComplete(onSuccess(id -> {" is 125.,299
vert.x,io.vertx.core,HATest,testQuorumWithHaGroups,Magic Number,The method contains a magic number: 2,299
vert.x,io.vertx.core,HATest,testQuorumWithHaGroups,Magic Number,The method contains a magic number: 2,299
vert.x,io.vertx.core,HATest,testQuorumWithHaGroups,Magic Number,The method contains a magic number: 500,299
vert.x,io.vertx.core,HATest,testQuorumWithHaGroups,Magic Number,The method contains a magic number: 2,299
vert.x,io.vertx.core,HATest,testQuorumWithHaGroups,Magic Number,The method contains a magic number: 500,299
vert.x,io.vertx.core,HATest,testQuorumWithHaGroups,Magic Number,The method contains a magic number: 2,299
vert.x,io.vertx.core,HATest,startVertx,Magic Number,The method contains a magic number: 2,364
vert.x,io.vertx.core,HATest,closeVertices,Magic Number,The method contains a magic number: 2,407
vert.x,io.vertx.core,IsolatingClassLoaderTest,testGetResources,Magic Number,The method contains a magic number: 2,79
vert.x,io.vertx.core,IsolatingClassLoaderTest,testGetResources,Magic Number,The method contains a magic number: 3,79
vert.x,io.vertx.core,IsolatingClassLoaderTest,testGetResources,Magic Number,The method contains a magic number: 2,79
vert.x,io.vertx.core,IsolatingClassLoaderTest,testGetResourceAsStream,Magic Number,The method contains a magic number: 2,115
vert.x,io.vertx.core,LauncherTest,testRunVerticleMultipleInstances,Magic Number,The method contains a magic number: 10,137
vert.x,io.vertx.core,LauncherTest,testRunVerticleWithMainVerticleInManifestWithArgs,Magic Number,The method contains a magic number: 10,200
vert.x,io.vertx.core,LauncherTest,testRunVerticleWithConfString,Magic Number,The method contains a magic number: 123,378
vert.x,io.vertx.core,LauncherTest,testRunVerticleWithConfFile,Magic Number,The method contains a magic number: 123,392
vert.x,io.vertx.core,LauncherTest,testConfigureFromSystemProperties,Magic Number,The method contains a magic number: 123,415
vert.x,io.vertx.core,LauncherTest,testConfigureFromSystemProperties,Magic Number,The method contains a magic number: 123767667L,415
vert.x,io.vertx.core,LauncherTest,testConfigureFromJson,Long Statement,The length of the statement "JsonObject json=new JsonObject().put("eventLoopPoolSize"`123).put("maxEventLoopExecuteTime"`123767667).put("metricsOptions"`new JsonObject().put("enabled"`true)).put("eventBusOptions"`new JsonObject().put("clusterPublicHost"`"mars")).put("haGroup"`"somegroup").put("maxEventLoopExecuteTimeUnit"`"SECONDS");" is 306.,466
vert.x,io.vertx.core,LauncherTest,testConfigureFromJson,Magic Number,The method contains a magic number: 123,466
vert.x,io.vertx.core,LauncherTest,testConfigureFromJson,Magic Number,The method contains a magic number: 123767667,466
vert.x,io.vertx.core,LauncherTest,testConfigureFromJson,Magic Number,The method contains a magic number: 123,466
vert.x,io.vertx.core,LauncherTest,testConfigureFromJson,Magic Number,The method contains a magic number: 123767667L,466
vert.x,io.vertx.core,LauncherTest,testCustomMetricsOptions,Long Statement,The length of the statement "Thread.currentThread().setContextClassLoader(MetricsOptionsTest.createMetricsFromMetaInfLoader("io.vertx.core.CustomMetricsFactory"));" is 134.,499
vert.x,io.vertx.core,LauncherTest,testCustomMetricsOptionsFromJson,Long Statement,The length of the statement "JsonObject json=new JsonObject().put("metricsOptions"`new JsonObject().put("enabled"`true).put("customProperty"`"customPropertyValue").put("nestedOptions"`new JsonObject().put("nestedProperty"`"nestedValue")));" is 210.,569
vert.x,io.vertx.core,LauncherTest,testCustomMetricsOptionsFromJson,Long Statement,The length of the statement "Thread.currentThread().setContextClassLoader(MetricsOptionsTest.createMetricsFromMetaInfLoader("io.vertx.core.CustomMetricsFactory"));" is 134.,569
vert.x,io.vertx.core,LauncherTest,testWhenPassingTheMainObject,Magic Number,The method contains a magic number: 10,602
vert.x,io.vertx.core,LauncherTest,testConfigureClusterHostPortFromCommandLine,Long Statement,The length of the statement "String[] args={"run"`"java:" + TestVerticle.class.getCanonicalName()`"-cluster"`"--cluster-host"`"127.0.0.1"`"--cluster-port"`Integer.toString(clusterPort)};" is 157.,640
vert.x,io.vertx.core,LauncherTest,testConfigureClusterPublicHostPortFromCommandLine,Long Statement,The length of the statement "String[] args={"run"`"java:" + TestVerticle.class.getCanonicalName()`"-cluster"`"--cluster-public-host"`"127.0.0.1"`"--cluster-public-port"`Integer.toString(clusterPublicPort)};" is 177.,653
vert.x,io.vertx.core,LauncherTest,testOverrideClusterHostPortFromCommandLine,Long Statement,The length of the statement "String[] args={"run"`"java:" + TestVerticle.class.getCanonicalName()`"-cluster"`"--cluster-host"`"127.0.0.2"`"--cluster-port"`Integer.toString(clusterPort)`"--cluster-public-host"`"127.0.0.4"`"--cluster-public-port"`Integer.toString(clusterPublicPort)};" is 253.,685
vert.x,io.vertx.core,NamedWorkerPoolTest,testThread,Magic Number,The method contains a magic number: 10,34
vert.x,io.vertx.core,NamedWorkerPoolTest,testOrdered,Magic Number,The method contains a magic number: 10,60
vert.x,io.vertx.core,NamedWorkerPoolTest,testOrdered,Magic Number,The method contains a magic number: 1000,60
vert.x,io.vertx.core,NamedWorkerPoolTest,testUnordered,Magic Number,The method contains a magic number: 10,98
vert.x,io.vertx.core,NamedWorkerPoolTest,testUnordered,Magic Number,The method contains a magic number: 5,98
vert.x,io.vertx.core,NamedWorkerPoolTest,testUseDifferentExecutorWithSameTaskQueue,Magic Number,The method contains a magic number: 10,129
vert.x,io.vertx.core,NamedWorkerPoolTest,testPoolSize,Magic Number,The method contains a magic number: 10,157
vert.x,io.vertx.core,NamedWorkerPoolTest,testPoolSize,Magic Number,The method contains a magic number: 5,157
vert.x,io.vertx.core,NamedWorkerPoolTest,testPoolSize,Magic Number,The method contains a magic number: 100,157
vert.x,io.vertx.core,NamedWorkerPoolTest,testPoolSize,Magic Number,The method contains a magic number: 100,157
vert.x,io.vertx.core,NamedWorkerPoolTest,testPoolSize,Magic Number,The method contains a magic number: 5,157
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime1,Long Statement,The length of the statement "Vertx vertx=Vertx.vertx(new VertxOptions().setMaxWorkerExecuteTime(maxExecuteTime).setMaxWorkerExecuteTimeUnit(maxExecuteTimeUnit));" is 132.,176
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime1,Magic Number,The method contains a magic number: 10,176
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime1,Magic Number,The method contains a magic number: 5,176
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime1,Magic Number,The method contains a magic number: 60,176
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime2,Long Statement,The length of the statement "Vertx vertx=Vertx.vertx(new VertxOptions().setMaxWorkerExecuteTime(maxExecuteTime).setMaxWorkerExecuteTimeUnit(maxExecuteTimeUnit));" is 132.,190
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime2,Long Statement,The length of the statement "testMaxExecuteTime(vertx.createSharedWorkerExecutor(poolName`poolSize`maxExecuteTime)`maxExecuteTime`maxExecuteTimeUnit);" is 121.,190
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime2,Magic Number,The method contains a magic number: 10,190
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime2,Magic Number,The method contains a magic number: 5,190
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime2,Magic Number,The method contains a magic number: 60,190
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime3,Long Statement,The length of the statement "testMaxExecuteTime(vertx.createSharedWorkerExecutor(poolName`poolSize`maxExecuteTime`maxExecuteTimeUnit)`maxExecuteTime`maxExecuteTimeUnit);" is 140.,204
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime3,Magic Number,The method contains a magic number: 10,204
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime3,Magic Number,The method contains a magic number: 5,204
vert.x,io.vertx.core,NamedWorkerPoolTest,testMaxExecuteTime3,Magic Number,The method contains a magic number: 60,204
vert.x,io.vertx.core,NamedWorkerPoolTest,testCloseWorkerPool,Magic Number,The method contains a magic number: 10,227
vert.x,io.vertx.core,NamedWorkerPoolTest,testDestroyWorkerPoolWhenVerticleUndeploys,Magic Number,The method contains a magic number: 10,244
vert.x,io.vertx.core,NamedWorkerPoolTest,testDestroyWorkerPoolWhenVerticleUndeploys,Magic Number,The method contains a magic number: 20,244
vert.x,io.vertx.core,NamedWorkerPoolTest,testDeployUsingNamedPool,Magic Number,The method contains a magic number: 10,270
vert.x,io.vertx.core,NamedWorkerPoolTest,testDeployWorkerUsingNamedPool,Magic Number,The method contains a magic number: 10,313
vert.x,io.vertx.core,NamedWorkerPoolTest,testCloseWorkerPoolsWhenVertxCloses,Empty catch clause,The method has an empty catch block.,334
vert.x,io.vertx.core,NamedWorkerPoolTest,testCloseWorkerPoolsWhenVertxCloses,Empty catch clause,The method has an empty catch block.,334
vert.x,io.vertx.core,ServiceHelperTest,loadFactories,Magic Number,The method contains a magic number: 2,58
vert.x,io.vertx.core,ServiceHelperTest,loadFactoriesWithVertxClassloader,Long Statement,The length of the statement "ClassLoader custom=new URLClassLoader(new URL[]{new File(TestUtils.MAVEN_TARGET_DIR`"classes").toURI().toURL()`new File(TestUtils.MAVEN_TARGET_DIR`"test-classes").toURI().toURL()`serviceHelperFile.toURI().toURL()}`null);" is 220.,114
vert.x,io.vertx.core,SharedServersConcurrencyTest,testConcurrency,Long Statement,The length of the statement "vertx.deployVerticle(new MonitorVerticle()).compose(__ -> vertx.deployVerticle(new RestVerticle())).compose(__ -> vertx.deployVerticle(new ApiVerticle())).onComplete(onSuccess(__ -> testComplete()));" is 199.,25
vert.x,io.vertx.core,SharedServersConcurrencyTest,testConcurrency,Magic Number,The method contains a magic number: 100,25
vert.x,io.vertx.core,TimerTest,testPeriodic1,Magic Number,The method contains a magic number: 100,38
vert.x,io.vertx.core,TimerTest,testPeriodic1,Magic Number,The method contains a magic number: 100,38
vert.x,io.vertx.core,TimerTest,testPeriodic2,Magic Number,The method contains a magic number: 100,43
vert.x,io.vertx.core,TimerTest,testPeriodic2,Magic Number,The method contains a magic number: 100,43
vert.x,io.vertx.core,TimerTest,testPeriodicWithInitialDelay1,Magic Number,The method contains a magic number: 100,48
vert.x,io.vertx.core,TimerTest,testPeriodicWithInitialDelay2,Magic Number,The method contains a magic number: 100,53
vert.x,io.vertx.core,TimerTest,testPeriodicWithInitialDelay2,Magic Number,The method contains a magic number: 200,53
vert.x,io.vertx.core,TimerTest,testTimings,Magic Number,The method contains a magic number: 2000,58
vert.x,io.vertx.core,TimerTest,testTimings,Magic Number,The method contains a magic number: 2,58
vert.x,io.vertx.core,TimerTest,testInVerticle,Magic Number,The method contains a magic number: 5,76
vert.x,io.vertx.core,TimerTest,testInVerticle,Magic Number,The method contains a magic number: 2,76
vert.x,io.vertx.core,TimerTest,testInVerticle,Magic Number,The method contains a magic number: 5,76
vert.x,io.vertx.core,TimerTest,testInVerticle,Magic Number,The method contains a magic number: 3,76
vert.x,io.vertx.core,TimerTest,testInVerticle,Magic Number,The method contains a magic number: 4,76
vert.x,io.vertx.core,TimerTest,testInVerticle,Magic Number,The method contains a magic number: 5,76
vert.x,io.vertx.core,TimerTest,periodic,Magic Number,The method contains a magic number: 10,117
vert.x,io.vertx.core,TimerTest,setEndTimer,Magic Number,The method contains a magic number: 10,156
vert.x,io.vertx.core,TimerTest,testCancelTimerWhenScheduledOnWorker,Magic Number,The method contains a magic number: 100,162
vert.x,io.vertx.core,TimerTest,testCancelTimerWhenScheduledOnWorker,Magic Number,The method contains a magic number: 200,162
vert.x,io.vertx.core,TimerTest,start,Magic Number,The method contains a magic number: 100,165
vert.x,io.vertx.core,TimerTest,start,Magic Number,The method contains a magic number: 200,165
vert.x,io.vertx.core,TimerTest,testWorkerTimer,Magic Number,The method contains a magic number: 10,178
vert.x,io.vertx.core,TimerTest,start,Magic Number,The method contains a magic number: 10,181
vert.x,io.vertx.core,TimerTest,testFailInTimer,Magic Number,The method contains a magic number: 5,192
vert.x,io.vertx.core,TimerTest,testCancellationRace,Magic Number,The method contains a magic number: 200,208
vert.x,io.vertx.core,TimerTest,testCancellationRace,Magic Number,The method contains a magic number: 5,208
vert.x,io.vertx.core,TimerTest,testCancellationRace,Magic Number,The method contains a magic number: 5,208
vert.x,io.vertx.core,TimerTest,testUndeployCancelTimer,Magic Number,The method contains a magic number: 1000,223
vert.x,io.vertx.core,TimerTest,testUndeployCancelPeriodic,Magic Number,The method contains a magic number: 1000,228
vert.x,io.vertx.core,TimerTest,testTimerOnContext,Magic Number,The method contains a magic number: 2,247
vert.x,io.vertx.core,TimerTest,testTimerOnContext,Magic Number,The method contains a magic number: 10,247
vert.x,io.vertx.core,TimerTest,testTimerOnContext,Magic Number,The method contains a magic number: 10,247
vert.x,io.vertx.core,TimerTest,testPeriodicOnContext,Magic Number,The method contains a magic number: 4,267
vert.x,io.vertx.core,TimerTest,testPeriodicOnContext,Magic Number,The method contains a magic number: 10,267
vert.x,io.vertx.core,TimerTest,testPeriodicOnContext,Magic Number,The method contains a magic number: 2,267
vert.x,io.vertx.core,TimerTest,testPeriodicOnContext,Magic Number,The method contains a magic number: 10,267
vert.x,io.vertx.core,TimerTest,testPeriodicOnContext,Magic Number,The method contains a magic number: 2,267
vert.x,io.vertx.core,TimerTest,handle,Magic Number,The method contains a magic number: 2,278
vert.x,io.vertx.core,TimerTest,handle,Magic Number,The method contains a magic number: 2,290
vert.x,io.vertx.core,TimerTest,testRaceWhenTimerCreatedOutsideEventLoop,Long Statement,The length of the statement "((VertxImpl)vertx).scheduleTimeout(((VertxImpl)vertx).getOrCreateContext()`false`1`TimeUnit.NANOSECONDS`false`ignore -> {" is 121.,303
vert.x,io.vertx.core,TimerTest,testRaceWhenTimerCreatedOutsideEventLoop,Magic Number,The method contains a magic number: 100,303
vert.x,io.vertx.core,TimerTest,testRaceWhenTimerCreatedOutsideEventLoop,Magic Number,The method contains a magic number: 1000,303
vert.x,io.vertx.core,TimerTest,testContextTimer,Magic Number,The method contains a magic number: 2,323
vert.x,io.vertx.core,TimerTest,testContextTimer,Magic Number,The method contains a magic number: 1000,323
vert.x,io.vertx.core,TimerTest,start,Magic Number,The method contains a magic number: 1000,327
vert.x,io.vertx.core,VerticleFactoryTest,testRegisterTwice,Empty catch clause,The method has an empty catch block.,54
vert.x,io.vertx.core,VerticleFactoryTest,testUnregisterTwice,Empty catch clause,The method has an empty catch block.,66
vert.x,io.vertx.core,VerticleFactoryTest,testUnregisterNoFact,Empty catch clause,The method has an empty catch block.,79
vert.x,io.vertx.core,VerticleFactoryTest,testRegisterUnregisterTwo,Magic Number,The method contains a magic number: 2,90
vert.x,io.vertx.core,VerticleFactoryTest,testOrdering,Magic Number,The method contains a magic number: 2,201
vert.x,io.vertx.core,VerticleFactoryTest,testOrdering,Magic Number,The method contains a magic number: 3,201
vert.x,io.vertx.core,VerticleFactoryTest,testOrderingFailedInCreate,Magic Number,The method contains a magic number: 2,219
vert.x,io.vertx.core,VerticleFactoryTest,testOrderingFailedInCreate,Magic Number,The method contains a magic number: 3,219
vert.x,io.vertx.core,VerticleFactoryTest,testOrderingFailedInCreate2,Magic Number,The method contains a magic number: 2,237
vert.x,io.vertx.core,VerticleFactoryTest,testOrderingFailedInCreate2,Magic Number,The method contains a magic number: 3,237
vert.x,io.vertx.core,VerticleFactoryTest,testOrderingFailedInCreateAll,Magic Number,The method contains a magic number: 2,255
vert.x,io.vertx.core,VerticleFactoryTest,testOrderingFailedInCreateAll,Magic Number,The method contains a magic number: 3,255
vert.x,io.vertx.core,VerticleFactoryTest,testClassLoader,Long Statement,The length of the statement "@Override public void createVerticle( String verticleName` ClassLoader classLoader` Promise<Callable<Verticle>> promise){" is 121.,378
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Long Method,The method has 173 lines of code.,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 2,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 20,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 20,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1234,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1234,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 65536,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1234,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1234,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 65536,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 100,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 100,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 20000,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 20000,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1000,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 2000l,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1000000,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 60,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1000,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1000000,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 100,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1000000000l,33
vert.x,io.vertx.core,VertxOptionsTest,testOptions,Magic Number,The method contains a magic number: 1000000000l,33
vert.x,io.vertx.core,VertxOptionsTest,testCopyOptions,Long Identifier,The length of the identifier blockedThreadCheckIntervalUnit is 30.,209
vert.x,io.vertx.core,VertxOptionsTest,testCopyOptions,Magic Number,The method contains a magic number: 100,209
vert.x,io.vertx.core,VertxOptionsTest,testCopyOptions,Magic Number,The method contains a magic number: 100,209
vert.x,io.vertx.core,VertxOptionsTest,testCopyOptions,Magic Number,The method contains a magic number: 51214,209
vert.x,io.vertx.core,VertxOptionsTest,testCopyOptions,Magic Number,The method contains a magic number: 100,209
vert.x,io.vertx.core,VertxOptionsTest,testDefaultJsonOptions,Long Statement,The length of the statement "assertEquals(def.getEventBusOptions().getClusterPingReplyInterval()`json.getEventBusOptions().getClusterPingReplyInterval());" is 125.,295
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Long Identifier,The length of the identifier blockedThreadCheckIntervalUnit is 30.,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Long Statement,The length of the statement "options=new VertxOptions(new JsonObject().put("eventBusOptions"`new JsonObject().put("port"`clusterPort).put("clusterPublicPort"`clusterPublicPort).put("host"`clusterHost).put("clusterPublicHost"`clusterPublicHost).put("clusterPingInterval"`clusterPingInterval).put("clusterPingReplyInterval"`clusterPingReplyInterval)).put("eventLoopPoolSize"`eventLoopPoolSize).put("internalBlockingPoolSize"`internalBlockingPoolSize).put("workerPoolSize"`workerPoolSize).put("blockedThreadCheckInterval"`blockedThreadCheckInterval).put("maxEventLoopExecuteTime"`maxEventLoopExecuteTime).put("maxWorkerExecuteTime"`maxWorkerExecuteTime).put("proxyOperationTimeout"`proxyOperationTimeout).put("haEnabled"`haEnabled).put("fileResolverCachingEnabled"`fileResolverCachingEnabled).put("quorumSize"`quorumSize).put("haGroup"`haGroup).put("warningExceptionTime"`warningExceptionTime).put("fileSystemOptions"`new JsonObject().put("classPathResolvingEnabled"`classPathResolvingEnabled).put("fileCachingEnabled"`fileResolverCachingEnabled)).put("metricsOptions"`new JsonObject().put("enabled"`metricsEnabled).put("jmxEnabled"`jmxEnabled).put("jmxDomain"`jmxDomain)).put("tracingOptions"`new JsonObject()).put("maxEventLoopExecuteTimeUnit"`maxEventLoopExecuteTimeUnit).put("maxWorkerExecuteTimeUnit"`maxWorkerExecuteTimeUnit).put("warningExceptionTimeUnit"`warningExceptionTimeUnit).put("blockedThreadCheckIntervalUnit"`blockedThreadCheckIntervalUnit).put("useDaemonThread"`useDaemonThread));" is 1466.,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 20000,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 20000,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 2,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 20,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 20,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 1000,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 2000l,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 1000000,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 60,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 1000,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 1000000,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 5000000000l,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 100,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 100,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 100,329
vert.x,io.vertx.core,VertxOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 100,329
vert.x,io.vertx.core,VertxStartFailureTest,testEventBusStartFailure,Long Statement,The length of the statement "options.getAddressResolverOptions().addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort());" is 129.,38
vert.x,io.vertx.core,VertxTest,testCloseHooksCalled,Magic Number,The method contains a magic number: 2,56
vert.x,io.vertx.core,VertxTest,testCloseHookFailure1,Magic Number,The method contains a magic number: 2,80
vert.x,io.vertx.core,VertxTest,testCloseHookFailure2,Magic Number,The method contains a magic number: 2,106
vert.x,io.vertx.core,VertxTest,testFinalizeHttpClient,Magic Number,The method contains a magic number: 8080,144
vert.x,io.vertx.core,VertxTest,testFinalizeHttpClient,Magic Number,The method contains a magic number: 8080,144
vert.x,io.vertx.core,VertxTest,testFinalizeHttpClient,Magic Number,The method contains a magic number: 10,144
vert.x,io.vertx.core,VertxTest,testFinalizeHttpClient,Magic Number,The method contains a magic number: 10,144
vert.x,io.vertx.core,VertxTest,testFinalizeHttpClient,Magic Number,The method contains a magic number: 20_000,144
vert.x,io.vertx.core,VertxTest,testFinalizeHttpClient,Magic Number,The method contains a magic number: 20_000,144
vert.x,io.vertx.core,VertxTest,testFinalizeHttpClientWithRequestNotYetSent,Magic Number,The method contains a magic number: 8080,209
vert.x,io.vertx.core,VertxTest,testFinalizeHttpClientWithRequestNotYetSent,Magic Number,The method contains a magic number: 8080,209
vert.x,io.vertx.core,VertxTest,testCascadeCloseHttpClient,Magic Number,The method contains a magic number: 8080,246
vert.x,io.vertx.core,VertxTest,testCascadeCloseHttpClient,Magic Number,The method contains a magic number: 8080,246
vert.x,io.vertx.core,VertxTest,testFinalizeNetClient,Magic Number,The method contains a magic number: 1234,271
vert.x,io.vertx.core,VertxTest,testFinalizeNetClient,Magic Number,The method contains a magic number: 1234,271
vert.x,io.vertx.core,VertxTest,testFinalizeNetClient,Magic Number,The method contains a magic number: 10,271
vert.x,io.vertx.core,VertxTest,testFinalizeNetClient,Magic Number,The method contains a magic number: 10,271
vert.x,io.vertx.core,VertxTest,testFinalizeNetClient,Magic Number,The method contains a magic number: 20_000,271
vert.x,io.vertx.core,VertxTest,testFinalizeNetClient,Magic Number,The method contains a magic number: 20_000,271
vert.x,io.vertx.core,VertxTest,testCascadeCloseNetClient,Magic Number,The method contains a magic number: 1234,339
vert.x,io.vertx.core,VertxTest,testCascadeCloseNetClient,Magic Number,The method contains a magic number: 1234,339
vert.x,io.vertx.core,VertxTest,testCascadeCloseDatagramSocket,Magic Number,The method contains a magic number: 1234,363
vert.x,io.vertx.core,VertxTest,testFinalizeSharedWorkerExecutor,Magic Number,The method contains a magic number: 2,378
vert.x,io.vertx.core,VertxTest,testFinalizeSharedWorkerExecutor,Magic Number,The method contains a magic number: 20,378
vert.x,io.vertx.core,VertxTest,testFinalizeSharedWorkerExecutor,Magic Number,The method contains a magic number: 20,378
vert.x,io.vertx.core,VertxTest,testFinalizeSharedWorkerExecutor,Magic Number,The method contains a magic number: 20,378
vert.x,io.vertx.core,VertxTest,testStickContextFinalization,Magic Number,The method contains a magic number: 10,402
vert.x,io.vertx.core,VertxTest,testStickContextFinalization,Magic Number,The method contains a magic number: 10_000,402
vert.x,io.vertx.core,VertxTest,testStickContextFinalization,Magic Number,The method contains a magic number: 20_000,402
vert.x,io.vertx.core,VertxTest,testCloseVertxShouldWaitConcurrentCloseHook,Magic Number,The method contains a magic number: 500,439
vert.x,io.vertx.core,VertxTest,testWorkerExecutorConcurrentCloseWithVertx,Magic Number,The method contains a magic number: 100,482
vert.x,io.vertx.core,VertxTest,testThreadLeak,Magic Number,The method contains a magic number: 20_000,499
vert.x,io.vertx.core.dns,AddressResolverOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 32,20
vert.x,io.vertx.core.dns,DnsClientOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 14,20
vert.x,io.vertx.core.dns,AddressResolverOptions,AddressResolverOptions,Long Identifier,The length of the field DEFAULT_CACHE_MIN_TIME_TO_LIVE is 30.,106
vert.x,io.vertx.core.dns,AddressResolverOptions,AddressResolverOptions,Long Identifier,The length of the field DEFAULT_CACHE_MAX_TIME_TO_LIVE is 30.,106
vert.x,io.vertx.core.dns,AddressResolverOptions,AddressResolverOptions,Long Identifier,The length of the field DEFAULT_CACHE_NEGATIVE_TIME_TO_LIVE is 35.,106
vert.x,io.vertx.core.dns,AddressResolverOptions,AddressResolverOptions,Long Identifier,The length of the field DEFAULT_ROUND_ROBIN_INET_ADDRESS is 32.,106
vert.x,io.vertx.core.dns,DNSTest,testDefaultDnsClient,Long Statement,The length of the statement "vertxOptions.getAddressResolverOptions().addServer(fakeServerAddress.getHostString() + ":" + fakeServerAddress.getPort());" is 122.,90
vert.x,io.vertx.core.dns,DNSTest,testUnresolvedDnsServer,Magic Number,The method contains a magic number: 53,129
vert.x,io.vertx.core.dns,DNSTest,testResolveMX,Magic Number,The method contains a magic number: 10,176
vert.x,io.vertx.core.dns,DNSTest,testResolveMX,Magic Number,The method contains a magic number: 100,176
vert.x,io.vertx.core.dns,DNSTest,testResolveSRV,Magic Number,The method contains a magic number: 10,264
vert.x,io.vertx.core.dns,DNSTest,testResolveSRV,Magic Number,The method contains a magic number: 80,264
vert.x,io.vertx.core.dns,DNSTest,testResolveSRV,Magic Number,The method contains a magic number: 100,264
vert.x,io.vertx.core.dns,DNSTest,testTimeout,Magic Number,The method contains a magic number: 10000,338
vert.x,io.vertx.core.dns,DNSTest,testTimeout,Magic Number,The method contains a magic number: 5000,338
vert.x,io.vertx.core.dns,DNSTest,prepareDns,Magic Number,The method contains a magic number: 15000,487
vert.x,io.vertx.core.dns,DNSTest,prepareDns,Long Statement,The length of the statement "return vertx.createDnsClient(new DnsClientOptions(options).setPort(addr.getPort()).setHost(addr.getAddress().getHostAddress()));" is 128.,491
vert.x,io.vertx.core.dns,HostnameResolutionTest,getAddressResolverOptions,Long Statement,The length of the statement "return new AddressResolverOptions().addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort());" is 129.,76
vert.x,io.vertx.core.dns,HostnameResolutionTest,testAsyncResolveTruncated,Long Statement,The length of the statement "dnsServer.store(question -> Collections.singleton(new FakeDNSServer.VertxResourceRecord("vertx.io"`"127.0.0.1").setTruncated(true)));" is 133.,90
vert.x,io.vertx.core.dns,HostnameResolutionTest,testAsyncResolveFail,Long Statement,The length of the statement "assertTrue("Was expecting " + failure + " to be an instanceof UnknownHostException"`failure instanceof UnknownHostException);" is 125.,103
vert.x,io.vertx.core.dns,HostnameResolutionTest,testNet,Magic Number,The method contains a magic number: 1234,117
vert.x,io.vertx.core.dns,HostnameResolutionTest,testNet,Magic Number,The method contains a magic number: 1234,117
vert.x,io.vertx.core.dns,HostnameResolutionTest,testHttp,Magic Number,The method contains a magic number: 8080,147
vert.x,io.vertx.core.dns,HostnameResolutionTest,testHttp,Magic Number,The method contains a magic number: 8080,147
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Empty catch clause,The method has an empty catch block.,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Empty catch clause,The method has an empty catch block.,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Empty catch clause,The method has an empty catch block.,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Empty catch clause,The method has an empty catch block.,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Empty catch clause,The method has an empty catch block.,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Empty catch clause,The method has an empty catch block.,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Long Method,The method has 117 lines of code.,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Magic Number,The method contains a magic number: 1000,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Magic Number,The method contains a magic number: 2,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Magic Number,The method contains a magic number: 2,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Magic Number,The method contains a magic number: 15,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testOptions,Magic Number,The method contains a magic number: 2,176
vert.x,io.vertx.core.dns,HostnameResolutionTest,testAsyncResolveConnectIsNotifiedOnChannelEventLoop,Magic Number,The method contains a magic number: 1234,318
vert.x,io.vertx.core.dns,HostnameResolutionTest,testAsyncResolveConnectIsNotifiedOnChannelEventLoop,Magic Number,The method contains a magic number: 1234,318
vert.x,io.vertx.core.dns,HostnameResolutionTest,testInvalidHostsConfig,Empty catch clause,The method has an empty catch block.,352
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveFromClasspath,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setHostsPath("hosts_config.txt")));" is 150.,362
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveFromFile,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setHostsPath(f.getAbsolutePath())));" is 151.,373
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveFromBuffer,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setHostsValue(Buffer.buffer("192.168.0.15 server.net"))));" is 173.,385
vert.x,io.vertx.core.dns,HostnameResolutionTest,testCaseInsensitiveResolveFromHosts,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setHostsPath("hosts_config.txt")));" is 150.,396
vert.x,io.vertx.core.dns,HostnameResolutionTest,testTrailingDotResolveFromHosts,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setHostsPath("hosts_config.txt")));" is 150.,407
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveMissingLocalhost,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort()).setOptResourceEnabled(false)));" is 239.,418
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveMissingLocalhost,Magic Number,The method contains a magic number: 10,418
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveMissingLocalhost,Magic Number,The method contains a magic number: 10,418
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveMissingLocalhost,Magic Number,The method contains a magic number: 1234,418
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveMissingLocalhost,Magic Number,The method contains a magic number: 10,418
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveMissingLocalhost,Magic Number,The method contains a magic number: 1234,418
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveMissingLocalhost,Magic Number,The method contains a magic number: 10,418
vert.x,io.vertx.core.dns,HostnameResolutionTest,testSearchDomain,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort()).setOptResourceEnabled(false).setNdots(2).addSearchDomain("foo.com")));" is 278.,493
vert.x,io.vertx.core.dns,HostnameResolutionTest,testSearchDomain,Magic Number,The method contains a magic number: 2,493
vert.x,io.vertx.core.dns,HostnameResolutionTest,testMultipleSearchDomain,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setHostsValue(Buffer.buffer()).setNdots(1).addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort()).setOptResourceEnabled(false).addSearchDomain("foo.com").addSearchDomain("bar.com")));" is 336.,599
vert.x,io.vertx.core.dns,HostnameResolutionTest,testSearchDomainWithNdots2,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort()).setOptResourceEnabled(false).addSearchDomain("foo.com").setNdots(2)));" is 278.,652
vert.x,io.vertx.core.dns,HostnameResolutionTest,testSearchDomainWithNdots2,Magic Number,The method contains a magic number: 2,652
vert.x,io.vertx.core.dns,HostnameResolutionTest,testSearchDomainWithNdots0,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort()).setOptResourceEnabled(false).addSearchDomain("foo.com").setNdots(0)));" is 278.,685
vert.x,io.vertx.core.dns,HostnameResolutionTest,testNetSearchDomain,Long Statement,The length of the statement "vertx=vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setHostsValue(Buffer.buffer()).setNdots(1).addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort()).setOptResourceEnabled(false).addSearchDomain("foo.com")));" is 280.,718
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 2,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testParseResolvConf,Magic Number,The method contains a magic number: 4,735
vert.x,io.vertx.core.dns,HostnameResolutionTest,testResolveAll,Long Statement,The length of the statement "assertEquals(expectedIPAddresses`res.result().stream().map(e -> e.getAddress().getHostAddress().toLowerCase(Locale.ENGLISH)).collect(Collectors.toList()));" is 155.,803
vert.x,io.vertx.core.dns,HostnameResolutionTest,testServerSelection,Long Statement,The length of the statement "FakeDNSServer server=new FakeDNSServer().store(FakeDNSServer.A_store(Collections.singletonMap("vertx.io"`"127.0.0." + index)));" is 127.,840
vert.x,io.vertx.core.dns,HostnameResolutionTest,testServerSelection,Magic Number,The method contains a magic number: 4,840
vert.x,io.vertx.core.dns,HostnameResolutionTest,testServerSelection,Magic Number,The method contains a magic number: 10,840
vert.x,io.vertx.core.dns,HostnameResolutionTest,testAddressSelectionWithRoundRobin,Magic Number,The method contains a magic number: 2,889
vert.x,io.vertx.core.dns,HostnameResolutionTest,testAddressSelection,Magic Number,The method contains a magic number: 100,899
vert.x,io.vertx.core.dns,HostnameResolutionTest,testAddressSelection,Magic Number,The method contains a magic number: 100,899
vert.x,io.vertx.core.dns,HostnameResolutionTest,testServerFailover,Long Statement,The length of the statement "FakeDNSServer server=new FakeDNSServer().store(FakeDNSServer.A_store(Collections.singletonMap("vertx.io"`"127.0.0.1"))).port(FakeDNSServer.PORT + 2);" is 149.,918
vert.x,io.vertx.core.dns,HostnameResolutionTest,testServerFailover,Magic Number,The method contains a magic number: 2,918
vert.x,io.vertx.core.dns,HostnameResolutionTest,testServerFailover,Magic Number,The method contains a magic number: 4,918
vert.x,io.vertx.core.dns,HostnameResolutionTest,testServerFailover,Magic Number,The method contains a magic number: 10,918
vert.x,io.vertx.core.eventbus,EventBusOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 100,20
vert.x,io.vertx.core.eventbus,EventBusOptionsConverter,fromJson,Long Method,The method has 255 lines of code.,20
vert.x,io.vertx.core.eventbus,EventBusOptionsConverter,fromJson,Long Statement,The length of the statement "obj.setOpenSslEngineOptions(new io.vertx.core.net.OpenSSLEngineOptions((io.vertx.core.json.JsonObject)member.getValue()));" is 122.,20
vert.x,io.vertx.core.eventbus,EventBusOptionsConverter,toJson,Complex Method,Cyclomatic complexity of the method is 20,280
vert.x,io.vertx.core.eventbus,AddressHelper,defaultAddress,Complex Conditional,The conditional expression !address.isAnyLocalAddress() && !address.isMulticastAddress() && !(address instanceof Inet6Address) is complex.,29
vert.x,io.vertx.core.eventbus,EventBusOptions,setPort,Magic Number,The method contains a magic number: 65535,257
vert.x,io.vertx.core.eventbus,EventBusOptions,setEnabledSecureTransportProtocols,Long Identifier,The length of the parameter enabledSecureTransportProtocols is 31.,485
vert.x,io.vertx.core.eventbus,EventBusOptions,setClusterPublicPort,Magic Number,The method contains a magic number: 65535,658
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalHandlerNotVisibleRemotely,Magic Number,The method contains a magic number: 2,48
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalHandlerNotVisibleRemotely,Magic Number,The method contains a magic number: 1000,48
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalHandlerClusteredSend,Magic Number,The method contains a magic number: 2,60
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalHandlerClusteredSend,Magic Number,The method contains a magic number: 2,60
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalHandlerClusteredPublish,Magic Number,The method contains a magic number: 2,73
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalHandlerClusteredPublish,Magic Number,The method contains a magic number: 2,73
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDecoderSendAsymmetric,Magic Number,The method contains a magic number: 2,85
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDecoderSendAsymmetric,Magic Number,The method contains a magic number: 100,85
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDecoderReplyAsymmetric,Magic Number,The method contains a magic number: 2,95
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDecoderReplyAsymmetric,Magic Number,The method contains a magic number: 100,95
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDecoderSendSymmetric,Magic Number,The method contains a magic number: 2,105
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDecoderSendSymmetric,Magic Number,The method contains a magic number: 100,105
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDecoderReplySymmetric,Magic Number,The method contains a magic number: 2,116
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDecoderReplySymmetric,Magic Number,The method contains a magic number: 100,116
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultDecoderSendAsymmetric,Magic Number,The method contains a magic number: 2,127
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultDecoderSendAsymmetric,Magic Number,The method contains a magic number: 100,127
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultDecoderReplyAsymmetric,Magic Number,The method contains a magic number: 2,137
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultDecoderReplyAsymmetric,Magic Number,The method contains a magic number: 100,137
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultDecoderSendSymetric,Magic Number,The method contains a magic number: 2,147
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultDecoderSendSymetric,Magic Number,The method contains a magic number: 100,147
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultDecoderReplySymetric,Magic Number,The method contains a magic number: 2,158
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultDecoderReplySymetric,Magic Number,The method contains a magic number: 100,158
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultCodecReplyExceptionSubclass,Magic Number,The method contains a magic number: 2,169
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDefaultCodecReplyExceptionSubclass,Magic Number,The method contains a magic number: 23,169
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testClusteredPong,Magic Number,The method contains a magic number: 500,188
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testClusteredPong,Magic Number,The method contains a magic number: 500,188
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testClusteredPong,Magic Number,The method contains a magic number: 2,188
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testClusteredPong,Magic Number,The method contains a magic number: 4000,188
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testConsumerHandlesCompletionAsynchronously1,Magic Number,The method contains a magic number: 2,211
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testConsumerHandlesCompletionAsynchronously2,Magic Number,The method contains a magic number: 2,226
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSubsRemoved,Magic Number,The method contains a magic number: 3,265
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSubsRemoved,Magic Number,The method contains a magic number: 9,265
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSubsRemoved,Magic Number,The method contains a magic number: 9,265
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSubsRemoved,Magic Number,The method contains a magic number: 2000,265
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSubsRemoved,Magic Number,The method contains a magic number: 2,265
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSubsRemoved,Magic Number,The method contains a magic number: 2,265
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSubsRemoved,Magic Number,The method contains a magic number: 10,265
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,sendNoContext,Magic Number,The method contains a magic number: 1000,306
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,sendNoContext,Magic Number,The method contains a magic number: 2,306
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDeliveryOptionsLocalOnly,Magic Number,The method contains a magic number: 30,339
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDeliveryOptionsLocalOnly,Magic Number,The method contains a magic number: 2,339
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDeliveryOptionsLocalOnly,Magic Number,The method contains a magic number: 30,339
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testDeliveryOptionsLocalOnly,Magic Number,The method contains a magic number: 30,339
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalOnlyDoesNotApplyToReplies,Long Statement,The length of the statement "vertices[0].eventBus().request(ADDRESS1`"ping"`new DeliveryOptions().setSendTimeout(500)).onComplete(onSuccess(msg -> testComplete()));" is 135.,364
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalOnlyDoesNotApplyToReplies,Magic Number,The method contains a magic number: 2,364
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalOnlyDoesNotApplyToReplies,Magic Number,The method contains a magic number: 500,364
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSendWriteHandler,Long Statement,The length of the statement "vertices[1].eventBus().consumer(ADDRESS1`msg -> complete()).completion().onComplete(onSuccess(v1 -> updateLatch.countDown()));" is 126.,395
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSendWriteHandler,Magic Number,The method contains a magic number: 3,395
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSendWriteHandler,Magic Number,The method contains a magic number: 2,395
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testSendWriteHandlerNoConsumer,Magic Number,The method contains a magic number: 2,429
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testPublishWriteHandler,Magic Number,The method contains a magic number: 2,442
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testPublishWriteHandler,Magic Number,The method contains a magic number: 2,442
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testPublishWriteHandlerNoConsumer,Magic Number,The method contains a magic number: 2,456
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testWriteHandlerConnectFailure,Magic Number,The method contains a magic number: 2,469
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessagePublishedFromRemote,Magic Number,The method contains a magic number: 2,523
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessagePublishedFromRemote,Magic Number,The method contains a magic number: 3,523
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessagePublishedFromRemote,Magic Number,The method contains a magic number: 4,523
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessagePublishedFromRemote,Magic Number,The method contains a magic number: 500,523
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessageSentFromRemote,Magic Number,The method contains a magic number: 2,547
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessageSentFromRemote,Magic Number,The method contains a magic number: 50,547
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessageSentFromRemote,Magic Number,The method contains a magic number: 4,547
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessageSentFromRemote,Magic Number,The method contains a magic number: 8,547
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessageSentFromRemote,Magic Number,The method contains a magic number: 2,547
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessageSentFromRemote,Magic Number,The method contains a magic number: 2,547
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testLocalConsumerNeverGetsMessageSentFromRemote,Magic Number,The method contains a magic number: 2,547
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testRejectedNotSent,Magic Number,The method contains a magic number: 2,599
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testRejectedNotReceived,Magic Number,The method contains a magic number: 2,626
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testMultiHeaders,Long Statement,The length of the statement "MultiMap expectedHeaders=MultiMap.caseInsensitiveMultiMap().add("a"`"1").add("c"`"2").add("b"`"3").add("d"`"4").add("a"`"5").add("a"`"6").add("a"`"7").add("b"`"8").add("b"`"9").add("c"`"10");" is 191.,647
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testMultiHeaders,Magic Number,The method contains a magic number: 2,647
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testMultiHeaders,Magic Number,The method contains a magic number: 4,647
vert.x,io.vertx.core.eventbus,ClusteredEventBusTest,testMultiHeaders,Magic Number,The method contains a magic number: 10,647
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testRegisterRemote1,Magic Number,The method contains a magic number: 2,81
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testRegisterRemote1,Magic Number,The method contains a magic number: 100,81
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testRegisterRemote2,Magic Number,The method contains a magic number: 2,95
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testRegisterRemote2,Magic Number,The method contains a magic number: 100,95
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testMessageBodyInterceptor,Magic Number,The method contains a magic number: 13,109
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testMessageBodyInterceptor,Magic Number,The method contains a magic number: 2,109
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testMessageBodyInterceptor,Magic Number,The method contains a magic number: 2,109
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testClusteredUnregistration,Magic Number,The method contains a magic number: 3,131
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testMessagingInStopMethod,Magic Number,The method contains a magic number: 2,174
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testMessagingInStopMethod,Magic Number,The method contains a magic number: 10,174
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testMessagingInStopMethod,Magic Number,The method contains a magic number: 2,174
vert.x,io.vertx.core.eventbus,ClusteredEventBusTestBase,testMessagingInStopMethod,Magic Number,The method contains a magic number: 2,174
vert.x,io.vertx.core.eventbus,ClusteredEventBusWithSSLTest,ClusteredEventBusWithSSLTest,Long Statement,The length of the statement "options=new EventBusOptions().setSsl(true).setTrustOptions(Trust.SERVER_JKS.get()).setKeyCertOptions(Cert.SERVER_JKS.get());" is 124.,28
vert.x,io.vertx.core.eventbus,CustomNodeSelectorTest,test,Magic Number,The method contains a magic number: 4,37
vert.x,io.vertx.core.eventbus,CustomNodeSelectorTest,test,Magic Number,The method contains a magic number: 2,37
vert.x,io.vertx.core.eventbus,CustomNodeSelectorTest,test,Magic Number,The method contains a magic number: 8,37
vert.x,io.vertx.core.eventbus,CustomNodeSelectorTest,test,Magic Number,The method contains a magic number: 4,37
vert.x,io.vertx.core.eventbus,CustomNodeSelectorTest,test,Magic Number,The method contains a magic number: 4,37
vert.x,io.vertx.core.eventbus,CustomNodeSelectorTest,test,Magic Number,The method contains a magic number: 2,37
vert.x,io.vertx.core.eventbus,CustomNodeSelectorTest,test,Magic Number,The method contains a magic number: 4,37
vert.x,io.vertx.core.eventbus,DeliveryOptionsTest,toJson,Long Statement,The length of the statement "JsonObject defaultJson=new JsonObject().put("timeout"`DeliveryOptions.DEFAULT_TIMEOUT).put("localOnly"`DeliveryOptions.DEFAULT_LOCAL_ONLY).put("tracingPolicy"`DeliveryOptions.DEFAULT_TRACING_POLICY);" is 199.,25
vert.x,io.vertx.core.eventbus,DeliveryOptionsTest,toJson,Long Statement,The length of the statement "JsonObject fullJson=new JsonObject().put("timeout"`15000).put("localOnly"`true).put("codecName"`"pimpo").put("headers"`new JsonObject().put("marseille"`"om").put("lyon"`"ol").put("amsterdam"`"ajax")).put("tracingPolicy"`"IGNORE");" is 230.,25
vert.x,io.vertx.core.eventbus,DeliveryOptionsTest,toJson,Long Statement,The length of the statement "assertEquals(fullJson`new DeliveryOptions().setSendTimeout(15000).setLocalOnly(true).setCodecName("pimpo").addHeader("marseille"`"om").addHeader("lyon"`"ol").addHeader("amsterdam"`"ajax").setTracingPolicy(TracingPolicy.IGNORE).toJson());" is 237.,25
vert.x,io.vertx.core.eventbus,DeliveryOptionsTest,toJson,Magic Number,The method contains a magic number: 15000,25
vert.x,io.vertx.core.eventbus,DeliveryOptionsTest,toJson,Magic Number,The method contains a magic number: 15000,25
vert.x,io.vertx.core.eventbus,DeliveryOptionsTest,ensureClonedHeaders,Magic Number,The method contains a magic number: 2,52
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testOutboundInterceptorNoNext,Magic Number,The method contains a magic number: 200,100
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testInboundInterceptorNoNext,Magic Number,The method contains a magic number: 200,113
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testMultipleOutboundInterceptors,Magic Number,The method contains a magic number: 10,127
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Long Statement,The length of the statement "eb.addInboundInterceptor(eb1).addOutboundInterceptor(eb1).addInboundInterceptor(eb2).addOutboundInterceptor(eb2).addInboundInterceptor(eb3).addOutboundInterceptor(eb3);" is 168.,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 2,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 2,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 2,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 4,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 2,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 4,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 6,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 2,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testRemoveInterceptor,Magic Number,The method contains a magic number: 4,149
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testOutboundInterceptorOnReply,Magic Number,The method contains a magic number: 2,202
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testInboundInterceptorOnReply,Magic Number,The method contains a magic number: 2,229
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testExceptionInOutboundInterceptor,Magic Number,The method contains a magic number: 2,258
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testExceptionInInboundInterceptor,Magic Number,The method contains a magic number: 2,284
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testInboundInterceptorContext,Magic Number,The method contains a magic number: 2,325
vert.x,io.vertx.core.eventbus,EventBusInterceptorTest,testInboundInterceptorContext,Magic Number,The method contains a magic number: 42,325
vert.x,io.vertx.core.eventbus,EventBusRegistrationRaceTest,theTest,Magic Number,The method contains a magic number: 20,70
vert.x,io.vertx.core.eventbus,EventBusRegistrationRaceTest,theTest,Magic Number,The method contains a magic number: 1000,70
vert.x,io.vertx.core.eventbus,EventBusRegistrationRaceTest,theTest,Magic Number,The method contains a magic number: 20,70
vert.x,io.vertx.core.eventbus,EventBusRegistrationRaceTest,theTest,Magic Number,The method contains a magic number: 1000,70
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendString,Magic Number,The method contains a magic number: 100,62
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyString,Magic Number,The method contains a magic number: 100,68
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishString,Magic Number,The method contains a magic number: 100,74
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendBuffer,Magic Number,The method contains a magic number: 100,110
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyBuffer,Magic Number,The method contains a magic number: 100,119
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishBuffer,Magic Number,The method contains a magic number: 100,128
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendByteArray,Magic Number,The method contains a magic number: 100,152
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyByteArray,Magic Number,The method contains a magic number: 100,161
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishByteArray,Magic Number,The method contains a magic number: 100,170
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendJsonArray,Magic Number,The method contains a magic number: 100,299
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyJsonArray,Magic Number,The method contains a magic number: 100,309
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishJsonArray,Magic Number,The method contains a magic number: 100,319
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendJsonObject,Long Statement,The length of the statement "obj.put(TestUtils.randomUnicodeString(100)`TestUtils.randomUnicodeString(100)).put(TestUtils.randomUnicodeString(100)`TestUtils.randomInt());" is 141.,329
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendJsonObject,Magic Number,The method contains a magic number: 100,329
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendJsonObject,Magic Number,The method contains a magic number: 100,329
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendJsonObject,Magic Number,The method contains a magic number: 100,329
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyJsonObject,Long Statement,The length of the statement "obj.put(TestUtils.randomUnicodeString(100)`TestUtils.randomUnicodeString(100)).put(TestUtils.randomUnicodeString(100)`TestUtils.randomInt());" is 141.,339
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyJsonObject,Magic Number,The method contains a magic number: 100,339
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyJsonObject,Magic Number,The method contains a magic number: 100,339
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyJsonObject,Magic Number,The method contains a magic number: 100,339
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishJsonObject,Long Statement,The length of the statement "obj.put(TestUtils.randomUnicodeString(100)`TestUtils.randomUnicodeString(100)).put(TestUtils.randomUnicodeString(100)`TestUtils.randomInt());" is 141.,349
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishJsonObject,Magic Number,The method contains a magic number: 100,349
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishJsonObject,Magic Number,The method contains a magic number: 100,349
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishJsonObject,Magic Number,The method contains a magic number: 100,349
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendClusterSerializable,Magic Number,The method contains a magic number: 50,359
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyClusterSerializable,Magic Number,The method contains a magic number: 50,368
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishClusterSerializable,Magic Number,The method contains a magic number: 50,377
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendSerializable,Magic Number,The method contains a magic number: 50,386
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplySerializable,Magic Number,The method contains a magic number: 50,395
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishSerializable,Magic Number,The method contains a magic number: 50,404
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendWithCodecFromSelector,Magic Number,The method contains a magic number: 15,413
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyWithCodecFromSelector,Magic Number,The method contains a magic number: 15,422
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublishWithCodecFromSelector,Magic Number,The method contains a magic number: 15,431
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyFromWorker,Magic Number,The method contains a magic number: 20,457
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReplyFromWorker,Magic Number,The method contains a magic number: 2,457
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendFromExecuteBlocking,Magic Number,The method contains a magic number: 20,481
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSendFromExecuteBlocking,Magic Number,The method contains a magic number: 2,481
vert.x,io.vertx.core.eventbus,EventBusTestBase,testNoHandlersCallbackContext,Magic Number,The method contains a magic number: 2,505
vert.x,io.vertx.core.eventbus,EventBusTestBase,testNoHandlersCallbackContext,Magic Number,The method contains a magic number: 4,505
vert.x,io.vertx.core.eventbus,EventBusTestBase,testSend,Magic Number,The method contains a magic number: 2,577
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReply,Magic Number,The method contains a magic number: 2,619
vert.x,io.vertx.core.eventbus,EventBusTestBase,testReply,Magic Number,The method contains a magic number: 1000,619
vert.x,io.vertx.core.eventbus,EventBusTestBase,testPublish,Magic Number,The method contains a magic number: 3,654
vert.x,io.vertx.core.eventbus,FaultToleranceTest,afterNodesKilled,Magic Number,The method contains a magic number: 2,107
vert.x,io.vertx.core.eventbus,FaultToleranceTest,assertEqualsEventually,Empty catch clause,The method has an empty catch block.,133
vert.x,io.vertx.core.eventbus,FaultToleranceTest,assertEqualsEventually,Magic Number,The method contains a magic number: 100,133
vert.x,io.vertx.core.eventbus,JsonEventBusTest,testChangesNotVisibleObject2,Magic Number,The method contains a magic number: 1000,49
vert.x,io.vertx.core.eventbus,JsonEventBusTest,testChangesNotVisibleObject3,Magic Number,The method contains a magic number: 1000,63
vert.x,io.vertx.core.eventbus,JsonEventBusTest,testChangesNotVisibleArray2,Magic Number,The method contains a magic number: 1000,90
vert.x,io.vertx.core.eventbus,JsonEventBusTest,testChangesNotVisibleArray3,Magic Number,The method contains a magic number: 1000,102
vert.x,io.vertx.core.eventbus,LocalEventBusTest,closeVertx,Magic Number,The method contains a magic number: 30,60
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testRegisterUnregister,Magic Number,The method contains a magic number: 100,109
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testRegisterUnregister,Magic Number,The method contains a magic number: 1000,109
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testMessageConsumerCloseHookIsClosedCorrectly,Magic Number,The method contains a magic number: 10,130
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testRegisterLocal1,Magic Number,The method contains a magic number: 100,153
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testRegisterLocal2,Magic Number,The method contains a magic number: 100,166
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testRegisterWithCompletionHandler,Magic Number,The method contains a magic number: 100,179
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendRoundRobin,Magic Number,The method contains a magic number: 100,193
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendRoundRobin,Magic Number,The method contains a magic number: 10,193
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendRoundRobin,Magic Number,The method contains a magic number: 100,193
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendRegisterSomeUnregisterOne,Magic Number,The method contains a magic number: 100,227
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendRegisterSomeUnregisterOne,Magic Number,The method contains a magic number: 2,227
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendRegisterSomeUnregisterOne,Magic Number,The method contains a magic number: 2,227
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendRegisterSameHandlerMultipleTimes,Magic Number,The method contains a magic number: 100,255
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendRegisterSameHandlerMultipleTimes,Magic Number,The method contains a magic number: 3,255
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithNoHandler,Magic Number,The method contains a magic number: 100,275
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithNoHandler,Magic Number,The method contains a magic number: 1000,275
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendMultipleAddresses,Magic Number,The method contains a magic number: 100,282
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendMultipleAddresses,Magic Number,The method contains a magic number: 2,282
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutNoReply,Magic Number,The method contains a magic number: 1000,300
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutNoReply,Magic Number,The method contains a magic number: 1000,300
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithReply,Magic Number,The method contains a magic number: 1000,312
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithReply,Magic Number,The method contains a magic number: 1000,312
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testReplyToReply,Magic Number,The method contains a magic number: 1000,327
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testReplyToReply,Magic Number,The method contains a magic number: 1000,327
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testReplyToReply,Magic Number,The method contains a magic number: 1000,327
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendReplyWithTimeout,Magic Number,The method contains a magic number: 1000,346
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendReplyWithTimeout,Magic Number,The method contains a magic number: 1000,346
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendReplyWithTimeout,Magic Number,The method contains a magic number: 1000,346
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendReplyWithTimeoutNoTimeout,Magic Number,The method contains a magic number: 1000,371
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendReplyWithTimeoutNoTimeout,Magic Number,The method contains a magic number: 1000,371
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendReplyWithTimeoutNoTimeout,Magic Number,The method contains a magic number: 1000,371
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendReplyWithTimeoutNoTimeout,Magic Number,The method contains a magic number: 1000,371
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutReply,Long Statement,The length of the statement "eb.<Integer>request(ADDRESS1`str`new DeliveryOptions().setSendTimeout(timeout)).onComplete(( AsyncResult<Message<Integer>> ar) -> {" is 131.,390
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutReply,Magic Number,The method contains a magic number: 1000,390
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutReply,Magic Number,The method contains a magic number: 23,390
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutReply,Magic Number,The method contains a magic number: 1000,390
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutReply,Magic Number,The method contains a magic number: 23,390
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoReply,Long Statement,The length of the statement "eb.<Integer>request(ADDRESS1`str`new DeliveryOptions().setSendTimeout(timeout)).onComplete(( AsyncResult<Message<Integer>> ar) -> {" is 131.,406
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoReply,Magic Number,The method contains a magic number: 1000,406
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoReply,Magic Number,The method contains a magic number: 1000,406
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoHandlers,Long Statement,The length of the statement "eb.<Integer>request(ADDRESS1`str`new DeliveryOptions().setSendTimeout(timeout)).onComplete(( AsyncResult<Message<Integer>> ar) -> {" is 131.,428
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoHandlers,Magic Number,The method contains a magic number: 1000,428
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoHandlers,Magic Number,The method contains a magic number: 1000,428
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutRecipientFailure,Long Statement,The length of the statement "eb.<Integer>request(ADDRESS1`str`new DeliveryOptions().setSendTimeout(timeout)).onComplete(( AsyncResult<Message<Integer>> ar) -> {" is 131.,445
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutRecipientFailure,Magic Number,The method contains a magic number: 1000,445
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutRecipientFailure,Magic Number,The method contains a magic number: 1000,445
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutRecipientFailure,Magic Number,The method contains a magic number: 123,445
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutRecipientFailure,Magic Number,The method contains a magic number: 1000,445
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutReplyAfterTimeout,Long Statement,The length of the statement "eb.<Integer>request(ADDRESS1`str`new DeliveryOptions().setSendTimeout(timeout)).onComplete(( AsyncResult<Message<Integer>> ar) -> {" is 131.,468
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutReplyAfterTimeout,Magic Number,The method contains a magic number: 1000,468
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutReplyAfterTimeout,Magic Number,The method contains a magic number: 1000,468
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutReplyAfterTimeout,Magic Number,The method contains a magic number: 1.5,468
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutAfterReply,Long Statement,The length of the statement "eb.<Integer>request(ADDRESS1`str`new DeliveryOptions().setSendTimeout(timeout)).onComplete(( AsyncResult<Message<Integer>> ar) -> {" is 131.,490
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutAfterReply,Magic Number,The method contains a magic number: 1000,490
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutAfterReply,Magic Number,The method contains a magic number: 1000,490
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWithTimeoutNoTimeoutAfterReply,Magic Number,The method contains a magic number: 2,490
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublish,Magic Number,The method contains a magic number: 100,553
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublishMultipleHandlers,Magic Number,The method contains a magic number: 100,564
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublishMultipleHandlers,Magic Number,The method contains a magic number: 2,564
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublishMultipleHandlers,Magic Number,The method contains a magic number: 2,564
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublishSameHandlerRegisteredTwice,Magic Number,The method contains a magic number: 1000,584
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublishSameHandlerRegisteredTwice,Magic Number,The method contains a magic number: 2,584
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublishMultipleHandlersUnregisterOne,Magic Number,The method contains a magic number: 1000,600
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublishMultipleHandlersDifferentAddresses,Magic Number,The method contains a magic number: 1000,619
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testContextsSend,Magic Number,The method contains a magic number: 2,713
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testContextsSend,Magic Number,The method contains a magic number: 2,713
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testContextsPublish,Magic Number,The method contains a magic number: 10,731
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDecoderSendAsymmetric,Magic Number,The method contains a magic number: 100,763
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDecoderReplyAsymmetric,Magic Number,The method contains a magic number: 100,771
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDecoderSendSymmetric,Magic Number,The method contains a magic number: 100,779
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDecoderReplySymmetric,Magic Number,The method contains a magic number: 100,788
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testNoRegisteredDecoder,Empty catch clause,The method has an empty catch block.,797
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testRegisterSystemDecoder,Empty catch clause,The method has an empty catch block.,807
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testUnregisterDecoder,Empty catch clause,The method has an empty catch block.,817
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testRegisterTwice,Empty catch clause,The method has an empty catch block.,830
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testCodecNullName,Empty catch clause,The method has an empty catch block.,842
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDefaultDecoderSendAsymmetric,Magic Number,The method contains a magic number: 100,852
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDefaultDecoderReplyAsymmetric,Magic Number,The method contains a magic number: 100,860
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDefaultDecoderSendSymetric,Magic Number,The method contains a magic number: 100,868
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDefaultDecoderReplySymetric,Magic Number,The method contains a magic number: 100,877
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testDefaultCodecReplyExceptionSubclass,Magic Number,The method contains a magic number: 23,916
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseResume,Magic Number,The method contains a magic number: 11,944
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseResume,Magic Number,The method contains a magic number: 10,944
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseResume,Magic Number,The method contains a magic number: 10,944
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseResume,Magic Number,The method contains a magic number: 10,944
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseResume,Magic Number,The method contains a magic number: 10,944
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Long Statement,The length of the statement "MessageConsumerImpl<String> consumer=(MessageConsumerImpl<String>)eb.<String>consumer(ADDRESS1).setMaxBufferedMessages(5);" is 122.,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 11,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 10,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 4,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 5,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 4,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 2,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 4,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 4,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPauseFetch,Magic Number,The method contains a magic number: 2,980
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSetMaxBufferedMessageDropsMessages,Magic Number,The method contains a magic number: 20,1011
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSetMaxBufferedMessageDropsMessages,Magic Number,The method contains a magic number: 9,1011
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSetMaxBufferedMessageDropsMessages,Magic Number,The method contains a magic number: 10,1011
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSetMaxBufferedMessageDropsMessages,Magic Number,The method contains a magic number: 20,1011
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testExceptionWhenDeliveringBufferedMessageWithMessageStream,Long Statement,The length of the statement "testExceptionWhenDeliveringBufferedMessage((consumer`handler) -> consumer.handler(message -> handler.handle(message.body())));" is 126.,1038
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testExceptionWhenDeliveringBufferedMessage,Magic Number,The method contains a magic number: 11,1048
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testExceptionWhenDeliveringBufferedMessage,Magic Number,The method contains a magic number: 10,1048
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testExceptionWhenDeliveringBufferedMessage,Magic Number,The method contains a magic number: 10,1048
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testExceptionWhenDeliveringBufferedMessage,Magic Number,The method contains a magic number: 10,1048
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testExceptionWhenDeliveringBufferedMessage,Magic Number,The method contains a magic number: 10,1048
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSender,Magic Number,The method contains a magic number: 100,1125
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSenderWithOptions,Magic Number,The method contains a magic number: 100,1138
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublisher,Magic Number,The method contains a magic number: 100,1151
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublisher,Magic Number,The method contains a magic number: 2,1151
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublisherWithOptions,Complex Conditional,The conditional expression message.body().equals(str) && "foo_value".equals(message.headers().get("foo")) && count.incrementAndGet() == n is complex.,1169
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublisherWithOptions,Magic Number,The method contains a magic number: 100,1169
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublisherWithOptions,Magic Number,The method contains a magic number: 2,1169
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testUpdateDeliveryOptionsOnProducer,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5e1fee59,1227
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testConsumerUnregisterDoesNotCancelTimer0,Magic Number,The method contains a magic number: 50,1276
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testImmediateUnregistration,Magic Number,The method contains a magic number: 10,1311
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testSendWriteHandler,Magic Number,The method contains a magic number: 2,1328
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testPublishWriteHandler,Magic Number,The method contains a magic number: 2,1349
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testEarlyTimeoutOfBufferedMessages,Magic Number,The method contains a magic number: 2,1398
vert.x,io.vertx.core.eventbus,LocalEventBusTest,testEarlyTimeoutOfBufferedMessages,Magic Number,The method contains a magic number: 2,1398
vert.x,io.vertx.core.eventbus,MessageQueueOnWorkerThreadTest,test,Magic Number,The method contains a magic number: 20,56
vert.x,io.vertx.core.eventbus,MessageQueueOnWorkerThreadTest,test,Magic Number,The method contains a magic number: 100,56
vert.x,io.vertx.core.eventbus,MessageQueueOnWorkerThreadTest,test,Magic Number,The method contains a magic number: 5,56
vert.x,io.vertx.core.eventbus,NodeInfoTest,testFailedFutureForUnknownNode,Magic Number,The method contains a magic number: 2,32
vert.x,io.vertx.core.eventbus,ReplyFailureErrorTest,setUp,Magic Number,The method contains a magic number: 2,23
vert.x,io.vertx.core.file,CopyOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 10,20
vert.x,io.vertx.core.file,FileSystemOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 8,20
vert.x,io.vertx.core.file,OpenOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 24,20
vert.x,io.vertx.core.file,FileSystemOptions,toString,Long Statement,The length of the statement "return "FileSystemOptions{" + "classPathResolvingEnabled=" + classPathResolvingEnabled + "` fileCachingEnabled="+ fileCachingEnabled+ "` fileCacheDir="+ fileCacheDir+ '}';" is 171.,153
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileFromClasspath,Magic Number,The method contains a magic number: 2,111
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileFromClasspathDisableCaching,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)Vertx.vertx(new VertxOptions().setFileSystemOptions(new FileSystemOptions().setFileCachingEnabled(true)));" is 141.,122
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileFromClasspathDisableCaching,Magic Number,The method contains a magic number: 2,122
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileWithSpacesFromClasspath,Magic Number,The method contains a magic number: 2,138
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileWithSpaceAtEndFromClasspath,Magic Number,The method contains a magic number: 2,149
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveDirectoryFromClasspath,Magic Number,The method contains a magic number: 2,177
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileInDirectoryFromClasspath,Magic Number,The method contains a magic number: 2,187
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveSubDirectoryFromClasspath,Magic Number,The method contains a magic number: 2,198
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileInSubDirectoryFromClasspath,Magic Number,The method contains a magic number: 2,208
vert.x,io.vertx.core.file,FileResolverTestBase,testSendFileFromClasspath,Long Statement,The length of the statement "vertx.createHttpClient(new HttpClientOptions()).request(HttpMethod.GET`8080`"localhost"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 248.,277
vert.x,io.vertx.core.file,FileResolverTestBase,testSendFileFromClasspath,Magic Number,The method contains a magic number: 2,277
vert.x,io.vertx.core.file,FileResolverTestBase,testSendFileFromClasspath,Magic Number,The method contains a magic number: 8080,277
vert.x,io.vertx.core.file,FileResolverTestBase,testSendFileFromClasspath,Magic Number,The method contains a magic number: 8080,277
vert.x,io.vertx.core.file,FileResolverTestBase,testSendFileFromClasspath,Magic Number,The method contains a magic number: 200,277
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileFromDifferentThreads,Magic Number,The method contains a magic number: 10,299
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileFromDifferentThreads,Magic Number,The method contains a magic number: 1024,299
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileFromDifferentThreads,Magic Number,The method contains a magic number: 1024,299
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveFileFromDifferentThreads,Magic Number,The method contains a magic number: 100,299
vert.x,io.vertx.core.file,FileResolverTestBase,testCaching,Long Statement,The length of the statement "VertxInternal vertx=(VertxInternal)Vertx.vertx(new VertxOptions().setFileSystemOptions(new FileSystemOptions().setFileCachingEnabled(enabled)));" is 144.,347
vert.x,io.vertx.core.file,FileResolverTestBase,testResolveAfterCloseThrowsISE,Empty catch clause,The method has an empty catch block.,383
vert.x,io.vertx.core.file,FileResolverTestBase,testReadFileInDirThenReadDirMultipleLevelsMissingResource,Empty catch clause,The method has an empty catch block.,443
vert.x,io.vertx.core.file,FileResolverTestBase,testReadFileInDirThenReadDirMultipleLevelsMissingResource,Empty catch clause,The method has an empty catch block.,443
vert.x,io.vertx.core.file,FileSystemFileResolverTest,resourcesLoader,Long Statement,The length of the statement "return new URLClassLoader(new URL[]{new File(baseDir`"files").toURI().toURL()}`Thread.currentThread().getContextClassLoader());" is 127.,28
vert.x,io.vertx.core.file,FileSystemFileResolverTest,testResolveInvalidFileName,Magic Number,The method contains a magic number: 256,40
vert.x,io.vertx.core.file,FileSystemOptionsTest,testJsonOptions,Long Statement,The length of the statement "FileSystemOptions options=new FileSystemOptions(new JsonObject().put("fileCachingEnabled"`enabled).put("classPathResolvingEnabled"`enabled));" is 141.,49
vert.x,io.vertx.core.file,FileSystemTest,testSimpleCopy,Magic Number,The method contains a magic number: 100,166
vert.x,io.vertx.core.file,FileSystemTest,testSimpleCopyFileAlreadyExists,Magic Number,The method contains a magic number: 100,179
vert.x,io.vertx.core.file,FileSystemTest,testSimpleCopyFileAlreadyExists,Magic Number,The method contains a magic number: 100,179
vert.x,io.vertx.core.file,FileSystemTest,testCopyIntoDir,Magic Number,The method contains a magic number: 100,193
vert.x,io.vertx.core.file,FileSystemTest,testCopyNonEmptyDir,Magic Number,The method contains a magic number: 100,221
vert.x,io.vertx.core.file,FileSystemTest,testRecursiveCopy,Magic Number,The method contains a magic number: 100,251
vert.x,io.vertx.core.file,FileSystemTest,testRecursiveCopy,Magic Number,The method contains a magic number: 100,251
vert.x,io.vertx.core.file,FileSystemTest,testRecursiveCopy,Magic Number,The method contains a magic number: 100,251
vert.x,io.vertx.core.file,FileSystemTest,testCopy,Long Parameter List,The method has 5 parameters. ,275
vert.x,io.vertx.core.file,FileSystemTest,testCopy,Long Statement,The length of the statement "vertx.fileSystem().copyRecursive(testDir + pathSep + source`testDir + pathSep + target`true).onComplete(createHandler(shouldPass`afterOK));" is 139.,275
vert.x,io.vertx.core.file,FileSystemTest,testCopy,Long Statement,The length of the statement "vertx.fileSystem().copy(testDir + pathSep + source`testDir + pathSep + target).onComplete(createHandler(shouldPass`afterOK));" is 125.,275
vert.x,io.vertx.core.file,FileSystemTest,testSimpleMove,Magic Number,The method contains a magic number: 100,284
vert.x,io.vertx.core.file,FileSystemTest,testSimpleMoveFileAlreadyExists,Magic Number,The method contains a magic number: 100,297
vert.x,io.vertx.core.file,FileSystemTest,testSimpleMoveFileAlreadyExists,Magic Number,The method contains a magic number: 100,297
vert.x,io.vertx.core.file,FileSystemTest,testMoveNonEmptyDir,Magic Number,The method contains a magic number: 100,338
vert.x,io.vertx.core.file,FileSystemTest,testMoveNonEmptyDir,Magic Number,The method contains a magic number: 100,338
vert.x,io.vertx.core.file,FileSystemTest,testMoveNonEmptyDir,Magic Number,The method contains a magic number: 100,338
vert.x,io.vertx.core.file,FileSystemTest,testMove,Long Statement,The length of the statement "vertx.fileSystem().move(testDir + pathSep + source`testDir + pathSep + target).onComplete(createHandler(shouldPass`afterOK));" is 125.,362
vert.x,io.vertx.core.file,FileSystemTest,testTruncate,Magic Number,The method contains a magic number: 1000,366
vert.x,io.vertx.core.file,FileSystemTest,testTruncate,Magic Number,The method contains a magic number: 534,366
vert.x,io.vertx.core.file,FileSystemTest,testTruncateExtendsFile,Magic Number,The method contains a magic number: 500,380
vert.x,io.vertx.core.file,FileSystemTest,testTruncateExtendsFile,Magic Number,The method contains a magic number: 1000,380
vert.x,io.vertx.core.file,FileSystemTest,testTruncateFileDoesNotExist,Magic Number,The method contains a magic number: 534,394
vert.x,io.vertx.core.file,FileSystemTest,testChmodNonRecursive,Magic Number,The method contains a magic number: 100,439
vert.x,io.vertx.core.file,FileSystemTest,testChmodRecursive,Magic Number,The method contains a magic number: 100,486
vert.x,io.vertx.core.file,FileSystemTest,testChmodRecursive,Magic Number,The method contains a magic number: 100,486
vert.x,io.vertx.core.file,FileSystemTest,testChmodRecursive,Magic Number,The method contains a magic number: 100,486
vert.x,io.vertx.core.file,FileSystemTest,testChownFails,Magic Number,The method contains a magic number: 100,519
vert.x,io.vertx.core.file,FileSystemTest,testChownToOwnUser,Magic Number,The method contains a magic number: 100,529
vert.x,io.vertx.core.file,FileSystemTest,testChownToOwnGroup,Magic Number,The method contains a magic number: 100,544
vert.x,io.vertx.core.file,FileSystemTest,testChmod,Long Parameter List,The method has 5 parameters. ,560
vert.x,io.vertx.core.file,FileSystemTest,testChmod,Long Statement,The length of the statement "vertx.fileSystem().chmodRecursive(testDir + pathSep + file`perms`dirPerms).onComplete(createHandler(shouldPass`afterOK));" is 121.,560
vert.x,io.vertx.core.file,FileSystemTest,testProps,Magic Number,The method contains a magic number: 1234,574
vert.x,io.vertx.core.file,FileSystemTest,testProps,Magic Number,The method contains a magic number: 1000,574
vert.x,io.vertx.core.file,FileSystemTest,testProps,Magic Number,The method contains a magic number: 1000,574
vert.x,io.vertx.core.file,FileSystemTest,testPropsFollowLink,Magic Number,The method contains a magic number: 1234,603
vert.x,io.vertx.core.file,FileSystemTest,testPropsFollowLink,Magic Number,The method contains a magic number: 1000,603
vert.x,io.vertx.core.file,FileSystemTest,testPropsFollowLink,Magic Number,The method contains a magic number: 1000,603
vert.x,io.vertx.core.file,FileSystemTest,testPropsFollowLink,Magic Number,The method contains a magic number: 1000,603
vert.x,io.vertx.core.file,FileSystemTest,testPropsFollowLink,Magic Number,The method contains a magic number: 1000,603
vert.x,io.vertx.core.file,FileSystemTest,testPropsDontFollowLink,Magic Number,The method contains a magic number: 1234,635
vert.x,io.vertx.core.file,FileSystemTest,testLink,Magic Number,The method contains a magic number: 1234,682
vert.x,io.vertx.core.file,FileSystemTest,testSymLink,Magic Number,The method contains a magic number: 1234,696
vert.x,io.vertx.core.file,FileSystemTest,testLink,Long Parameter List,The method has 5 parameters. ,715
vert.x,io.vertx.core.file,FileSystemTest,testUnlink,Magic Number,The method contains a magic number: 1234,725
vert.x,io.vertx.core.file,FileSystemTest,testReadSymLink,Magic Number,The method contains a magic number: 1234,740
vert.x,io.vertx.core.file,FileSystemTest,testSimpleDelete,Magic Number,The method contains a magic number: 100,760
vert.x,io.vertx.core.file,FileSystemTest,testDeleteNonEmptyFails,Magic Number,The method contains a magic number: 100,794
vert.x,io.vertx.core.file,FileSystemTest,testDeleteRecursive,Magic Number,The method contains a magic number: 100,806
vert.x,io.vertx.core.file,FileSystemTest,testDeleteRecursive,Magic Number,The method contains a magic number: 100,806
vert.x,io.vertx.core.file,FileSystemTest,testDeleteRecursive,Magic Number,The method contains a magic number: 100,806
vert.x,io.vertx.core.file,FileSystemTest,testDelete,Long Statement,The length of the statement "vertx.fileSystem().deleteRecursive(testDir + pathSep + fileName`recursive).onComplete(createHandler(shouldPass`afterOK));" is 121.,825
vert.x,io.vertx.core.file,FileSystemTest,testMkdirCreateParentsFileExist,Magic Number,The method contains a magic number: 1024,917
vert.x,io.vertx.core.file,FileSystemTest,testMkdir,Long Parameter List,The method has 5 parameters. ,929
vert.x,io.vertx.core.file,FileSystemTest,testReadDirSimple,Magic Number,The method contains a magic number: 10,947
vert.x,io.vertx.core.file,FileSystemTest,testReadDirSimple,Magic Number,The method contains a magic number: 100,947
vert.x,io.vertx.core.file,FileSystemTest,testReadDirWithFilter,Magic Number,The method contains a magic number: 10,976
vert.x,io.vertx.core.file,FileSystemTest,testReadDirWithFilter,Magic Number,The method contains a magic number: 100,976
vert.x,io.vertx.core.file,FileSystemTest,testReadDirWithFilter,Magic Number,The method contains a magic number: 100,976
vert.x,io.vertx.core.file,FileSystemTest,testReadFile,Magic Number,The method contains a magic number: 1000,1039
vert.x,io.vertx.core.file,FileSystemTest,testWriteFile,Magic Number,The method contains a magic number: 1000,1052
vert.x,io.vertx.core.file,FileSystemTest,testWriteAsync,Magic Number,The method contains a magic number: 1000,1073
vert.x,io.vertx.core.file,FileSystemTest,testWriteAsync,Magic Number,The method contains a magic number: 10,1073
vert.x,io.vertx.core.file,FileSystemTest,testCloseFileAfterFailure,Magic Number,The method contains a magic number: 100,1107
vert.x,io.vertx.core.file,FileSystemTest,testCloseFileAfterFailure,Magic Number,The method contains a magic number: 256,1107
vert.x,io.vertx.core.file,FileSystemTest,testReadAsync,Magic Number,The method contains a magic number: 1000,1136
vert.x,io.vertx.core.file,FileSystemTest,testReadAsync,Magic Number,The method contains a magic number: 10,1136
vert.x,io.vertx.core.file,FileSystemTest,testWriteStream,Magic Number,The method contains a magic number: 1000,1162
vert.x,io.vertx.core.file,FileSystemTest,testWriteStream,Magic Number,The method contains a magic number: 10,1162
vert.x,io.vertx.core.file,FileSystemTest,testWriteStreamAppend,Magic Number,The method contains a magic number: 1000,1192
vert.x,io.vertx.core.file,FileSystemTest,testWriteStreamAppend,Magic Number,The method contains a magic number: 10,1192
vert.x,io.vertx.core.file,FileSystemTest,testWriteStreamAppend,Magic Number,The method contains a magic number: 1000,1192
vert.x,io.vertx.core.file,FileSystemTest,testWriteStreamWithCompositeBuffer,Magic Number,The method contains a magic number: 1000,1224
vert.x,io.vertx.core.file,FileSystemTest,testWriteStreamWithCompositeBuffer,Magic Number,The method contains a magic number: 10,1224
vert.x,io.vertx.core.file,FileSystemTest,testWriteStreamWithCompositeBuffer,Magic Number,The method contains a magic number: 2,1224
vert.x,io.vertx.core.file,FileSystemTest,testWriteStreamWithCompositeBuffer,Magic Number,The method contains a magic number: 2,1224
vert.x,io.vertx.core.file,FileSystemTest,testReadStream,Magic Number,The method contains a magic number: 1000,1323
vert.x,io.vertx.core.file,FileSystemTest,testReadStream,Magic Number,The method contains a magic number: 10,1323
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamWithBufferSize,Magic Number,The method contains a magic number: 16384,1360
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPos,Magic Number,The method contains a magic number: 1000,1387
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPos,Magic Number,The method contains a magic number: 10,1387
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPos,Magic Number,The method contains a magic number: 2,1387
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPos,Magic Number,The method contains a magic number: 2,1387
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPos,Magic Number,The method contains a magic number: 2,1387
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPos,Magic Number,The method contains a magic number: 2,1387
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPos,Magic Number,The method contains a magic number: 2,1387
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadLength,Magic Number,The method contains a magic number: 1000,1412
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadLength,Magic Number,The method contains a magic number: 10,1412
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadLength,Magic Number,The method contains a magic number: 3,1412
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPosReadLengthBufferSize,Magic Number,The method contains a magic number: 1000,1438
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPosReadLengthBufferSize,Magic Number,The method contains a magic number: 10,1438
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPosReadLengthBufferSize,Magic Number,The method contains a magic number: 3,1438
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPosReadLengthBufferSize,Magic Number,The method contains a magic number: 3,1438
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamSetReadPosReadLengthBufferSize,Magic Number,The method contains a magic number: 1000,1438
vert.x,io.vertx.core.file,FileSystemTest,testReadStreamNoLock,Magic Number,The method contains a magic number: 16384,1474
vert.x,io.vertx.core.file,FileSystemTest,testPumpFileStreams,Magic Number,The method contains a magic number: 1000.3,1493
vert.x,io.vertx.core.file,FileSystemTest,testCreateFileAlreadyExists,Magic Number,The method contains a magic number: 100,1540
vert.x,io.vertx.core.file,FileSystemTest,testExists,Magic Number,The method contains a magic number: 100,1587
vert.x,io.vertx.core.file,FileSystemTest,testFSProps,Magic Number,The method contains a magic number: 1234,1599
vert.x,io.vertx.core.file,FileSystemTest,testAsyncFileCloseHandlerIsAsync,Magic Number,The method contains a magic number: 100,1671
vert.x,io.vertx.core.file,FileSystemTest,testDrainNotCalledAfterClose,Magic Number,The method contains a magic number: 1024,1686
vert.x,io.vertx.core.file,FileSystemTest,testDrainNotCalledAfterClose,Magic Number,The method contains a magic number: 1024,1686
vert.x,io.vertx.core.file,FileSystemTest,testDrainSetOnce,Magic Number,The method contains a magic number: 1024,1704
vert.x,io.vertx.core.file,FileSystemTest,testDrainSetOnce,Magic Number,The method contains a magic number: 1024,1704
vert.x,io.vertx.core.file,FileSystemTest,testDrainSetOnce,Magic Number,The method contains a magic number: 4,1704
vert.x,io.vertx.core.file,FileSystemTest,testDrainSetOnce,Magic Number,The method contains a magic number: 7,1704
vert.x,io.vertx.core.file,FileSystemTest,testResumeFileInEndHandler,Magic Number,The method contains a magic number: 10000,1731
vert.x,io.vertx.core.file,FileSystemTest,testPausedEnd,Magic Number,The method contains a magic number: 100,1749
vert.x,io.vertx.core.file,FileSystemTest,testAsyncFileConcurrency,Magic Number,The method contains a magic number: 4096,1867
vert.x,io.vertx.core.file,FileSystemTest,testAsyncFileConcurrency,Magic Number,The method contains a magic number: 100000,1867
vert.x,io.vertx.core.file,FileSystemTest,testAtomicMove,Magic Number,The method contains a magic number: 100,1898
vert.x,io.vertx.core.file,FileSystemTest,testCopyReplaceExisting,Magic Number,The method contains a magic number: 100,1924
vert.x,io.vertx.core.file,FileSystemTest,testCopyReplaceExisting,Magic Number,The method contains a magic number: 100,1924
vert.x,io.vertx.core.file,FileSystemTest,testCopyNoReplaceExisting,Magic Number,The method contains a magic number: 100,1947
vert.x,io.vertx.core.file,FileSystemTest,testCopyNoReplaceExisting,Magic Number,The method contains a magic number: 100,1947
vert.x,io.vertx.core.file,FileSystemTest,testCopyFileAttributes,Long Statement,The length of the statement ")).compose(v2 -> vertx.executeBlocking(() -> Files.getPosixFilePermissions(new File(testDir`target).toPath()`LinkOption.NOFOLLOW_LINKS))))).onComplete(onSuccess(perms -> {" is 171.,1967
vert.x,io.vertx.core.file,FileSystemTest,testCopyFileAttributes,Magic Number,The method contains a magic number: 100,1967
vert.x,io.vertx.core.file,FileSystemTest,testCopyNoFollowLinks,Long Statement,The length of the statement "fs.copy(from`to`options).compose(v -> fs.lprops(to).andThen(onSuccess(props -> assertTrue(props.isSymbolicLink()))).compose(v2 -> fs.readFile(from).compose(expected -> fs.readFile(to).andThen(onSuccess(actual -> assertEquals(expected`actual)))))).onComplete(onSuccess(v -> complete()));" is 286.,1999
vert.x,io.vertx.core.file,FileSystemTest,testCopyNoFollowLinks,Magic Number,The method contains a magic number: 100,1999
vert.x,io.vertx.core.file,FileSystemTest,testFileSize,Long Statement,The length of the statement "file.size().andThen(onSuccess(size -> assertEquals(expected`size.longValue()))).compose(v -> file.close()).onComplete(onSuccess(v -> testComplete()));" is 150.,2170
vert.x,io.vertx.core.file,FileSystemTest,testFileSize,Magic Number,The method contains a magic number: 1000,2170
vert.x,io.vertx.core.file,FileSystemTest,testFileSize,Magic Number,The method contains a magic number: 2000,2170
vert.x,io.vertx.core.file,FileSystemTest,testFileSizeBlocking,Magic Number,The method contains a magic number: 1000,2183
vert.x,io.vertx.core.file,FileSystemTest,testFileSizeBlocking,Magic Number,The method contains a magic number: 2000,2183
vert.x,io.vertx.core.file,NestedJarFileResolverTest,resourcesLoader,Magic Number,The method contains a magic number: 7,29
vert.x,io.vertx.core.file,NestedJarFileResolverTest,getResource,Magic Number,The method contains a magic number: 7,42
vert.x,io.vertx.core.file,NestedRootJarResolverTest,resourcesLoader,Complex Conditional,The conditional expression name.equals("afile.html") || name.equals("afile with spaces.html") || name.equals("afilewithspaceatend ") is complex.,29
vert.x,io.vertx.core.file,NestedRootJarResolverTest,resourcesLoader,Long Statement,The length of the statement "ZipFileResolverTest.getFiles(baseDir`nestedFiles`ZipOutputStream::new`name -> new ZipEntry("nested-inf/classes/" + name));" is 122.,29
vert.x,io.vertx.core.file,NestedRootJarResolverTest,getResource,Complex Conditional,The conditional expression name.equals("afile.html") || name.equals("afile with spaces.html") || name.equals("afilewithspaceatend ") is complex.,36
vert.x,io.vertx.core.file,NestedZipFileResolverTest,resourcesLoader,Magic Number,The method contains a magic number: 7,29
vert.x,io.vertx.core.file,NestedZipFileResolverTest,getResource,Magic Number,The method contains a magic number: 7,42
vert.x,io.vertx.core.http,GoAwayConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 8,20
vert.x,io.vertx.core.http,Http2SettingsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 14,20
vert.x,io.vertx.core.http,HttpClientOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 84,20
vert.x,io.vertx.core.http,HttpClientOptionsConverter,fromJson,Long Method,The method has 213 lines of code.,20
vert.x,io.vertx.core.http,HttpServerOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 52,20
vert.x,io.vertx.core.http,HttpServerOptionsConverter,fromJson,Long Method,The method has 136 lines of code.,20
vert.x,io.vertx.core.http,RequestOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 20,20
vert.x,io.vertx.core.http,RequestOptionsConverter,toJson,Complex Method,Cyclomatic complexity of the method is 8,76
vert.x,io.vertx.core.http,WebSocketConnectOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 11,20
vert.x,io.vertx.core.http,Http2Settings,Http2Settings,Long Identifier,The length of the field DEFAULT_MAX_CONCURRENT_STREAMS is 30.,77
vert.x,io.vertx.core.http,Http2Settings,setHeaderTableSize,Long Statement,The length of the statement "Arguments.require(headerTableSize >= Http2CodecUtil.MIN_HEADER_TABLE_SIZE`"headerTableSize must be >= " + Http2CodecUtil.MIN_HEADER_TABLE_SIZE);" is 144.,122
vert.x,io.vertx.core.http,Http2Settings,setHeaderTableSize,Long Statement,The length of the statement "Arguments.require(headerTableSize <= Http2CodecUtil.MAX_HEADER_TABLE_SIZE`"headerTableSize must be <= " + Http2CodecUtil.MAX_HEADER_TABLE_SIZE);" is 144.,122
vert.x,io.vertx.core.http,Http2Settings,setMaxConcurrentStreams,Long Statement,The length of the statement "Arguments.require(maxConcurrentStreams >= Http2CodecUtil.MIN_CONCURRENT_STREAMS`"maxConcurrentStreams must be >= " + Http2CodecUtil.MIN_CONCURRENT_STREAMS);" is 156.,162
vert.x,io.vertx.core.http,Http2Settings,setMaxConcurrentStreams,Long Statement,The length of the statement "Arguments.require(maxConcurrentStreams <= Http2CodecUtil.MAX_CONCURRENT_STREAMS`"maxConcurrentStreams must be < " + Http2CodecUtil.MAX_CONCURRENT_STREAMS);" is 155.,162
vert.x,io.vertx.core.http,Http2Settings,setInitialWindowSize,Long Statement,The length of the statement "Arguments.require(initialWindowSize >= Http2CodecUtil.MIN_INITIAL_WINDOW_SIZE`"initialWindowSize must be >= " + Http2CodecUtil.MIN_INITIAL_WINDOW_SIZE);" is 152.,184
vert.x,io.vertx.core.http,Http2Settings,setMaxFrameSize,Long Statement,The length of the statement "Arguments.require(maxFrameSize >= Http2CodecUtil.MAX_FRAME_SIZE_LOWER_BOUND`"maxFrameSize must be >= " + Http2CodecUtil.MAX_FRAME_SIZE_LOWER_BOUND);" is 148.,204
vert.x,io.vertx.core.http,Http2Settings,setMaxFrameSize,Long Statement,The length of the statement "Arguments.require(maxFrameSize <= Http2CodecUtil.MAX_FRAME_SIZE_UPPER_BOUND`"maxFrameSize must be <= " + Http2CodecUtil.MAX_FRAME_SIZE_UPPER_BOUND);" is 148.,204
vert.x,io.vertx.core.http,Http2Settings,setMaxHeaderListSize,Long Statement,The length of the statement "Arguments.require(maxHeaderListSize >= Http2CodecUtil.MIN_HEADER_LIST_SIZE`"maxHeaderListSize must be >= " + Http2CodecUtil.MIN_HEADER_LIST_SIZE);" is 146.,226
vert.x,io.vertx.core.http,Http2Settings,get,Magic Number,The method contains a magic number: 2,260
vert.x,io.vertx.core.http,Http2Settings,get,Magic Number,The method contains a magic number: 3,260
vert.x,io.vertx.core.http,Http2Settings,get,Magic Number,The method contains a magic number: 4,260
vert.x,io.vertx.core.http,Http2Settings,get,Magic Number,The method contains a magic number: 5,260
vert.x,io.vertx.core.http,Http2Settings,get,Magic Number,The method contains a magic number: 6,260
vert.x,io.vertx.core.http,Http2Settings,get,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@11168b85,260
vert.x,io.vertx.core.http,Http2Settings,set,Complex Method,Cyclomatic complexity of the method is 8,285
vert.x,io.vertx.core.http,Http2Settings,set,Magic Number,The method contains a magic number: 0xFFFF,285
vert.x,io.vertx.core.http,Http2Settings,set,Magic Number,The method contains a magic number: 0xFFFFFFFFL,285
vert.x,io.vertx.core.http,Http2Settings,set,Magic Number,The method contains a magic number: 2,285
vert.x,io.vertx.core.http,Http2Settings,set,Magic Number,The method contains a magic number: 3,285
vert.x,io.vertx.core.http,Http2Settings,set,Magic Number,The method contains a magic number: 4,285
vert.x,io.vertx.core.http,Http2Settings,set,Magic Number,The method contains a magic number: 5,285
vert.x,io.vertx.core.http,Http2Settings,set,Magic Number,The method contains a magic number: 6,285
vert.x,io.vertx.core.http,Http2Settings,set,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4d78306f,285
vert.x,io.vertx.core.http,Http2Settings,equals,Complex Method,Cyclomatic complexity of the method is 9,325
vert.x,io.vertx.core.http,Http2Settings,hashCode,Magic Number,The method contains a magic number: 32,341
vert.x,io.vertx.core.http,Http2Settings,hashCode,Magic Number,The method contains a magic number: 31,341
vert.x,io.vertx.core.http,Http2Settings,hashCode,Magic Number,The method contains a magic number: 31,341
vert.x,io.vertx.core.http,Http2Settings,hashCode,Magic Number,The method contains a magic number: 32,341
vert.x,io.vertx.core.http,Http2Settings,hashCode,Magic Number,The method contains a magic number: 31,341
vert.x,io.vertx.core.http,Http2Settings,hashCode,Magic Number,The method contains a magic number: 31,341
vert.x,io.vertx.core.http,Http2Settings,hashCode,Magic Number,The method contains a magic number: 31,341
vert.x,io.vertx.core.http,Http2Settings,hashCode,Magic Number,The method contains a magic number: 32,341
vert.x,io.vertx.core.http,HttpClientOptions,HttpClientOptions,Long Identifier,The length of the field http2ClearTextUpgradeWithPreflightRequest is 41.,286
vert.x,io.vertx.core.http,HttpClientOptions,HttpClientOptions,Long Identifier,The length of the field tryUsePerFrameWebSocketCompression is 34.,286
vert.x,io.vertx.core.http,HttpClientOptions,HttpClientOptions,Long Identifier,The length of the field tryUsePerMessageWebSocketCompression is 36.,286
vert.x,io.vertx.core.http,HttpClientOptions,HttpClientOptions,Long Identifier,The length of the field webSocketRequestServerNoContext is 31.,286
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_HTTP2_MULTIPLEXING_LIMIT is 32.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_HTTP2_CONNECTION_WINDOW_SIZE is 36.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_HTTP2_KEEP_ALIVE_TIMEOUT is 32.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_MAX_WEBSOCKET_FRAME_SIZE is 32.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_MAX_WEBSOCKET_MESSAGE_SIZE is 34.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_MAX_INITIAL_LINE_LENGTH is 31.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_HTTP2_CLEAR_TEXT_UPGRADE is 32.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field http2ClearTextUpgradeWithPreflightRequest is 41.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_HTTP2_CLEAR_TEXT_UPGRADE_WITH_PREFLIGHT_REQUEST is 55.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_DECODER_INITIAL_BUFFER_SIZE is 35.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field tryUsePerFrameWebSocketCompression is 34.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_TRY_USE_PER_FRAME_WEBSOCKET_COMPRESSION is 47.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field tryUsePerMessageWebSocketCompression is 36.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_TRY_USE_PER_MESSAGE_WEBSOCKET_COMPRESSION is 49.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_WEBSOCKET_COMPRESSION_LEVEL is 35.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_WEBSOCKET_ALLOW_CLIENT_NO_CONTEXT is 41.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field webSocketRequestServerNoContext is 31.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_WEBSOCKET_REQUEST_SERVER_NO_CONTEXT is 43.,357
vert.x,io.vertx.core.http,HttpClientOptions,init,Long Identifier,The length of the field DEFAULT_WEBSOCKET_CLOSING_TIMEOUT is 33.,357
vert.x,io.vertx.core.http,HttpClientOptions,setEnabledSecureTransportProtocols,Long Identifier,The length of the parameter enabledSecureTransportProtocols is 31.,587
vert.x,io.vertx.core.http,HttpClientOptions,isHttp2ClearTextUpgradeWithPreflightRequest,Long Identifier,The length of the field http2ClearTextUpgradeWithPreflightRequest is 41.,1154
vert.x,io.vertx.core.http,HttpClientOptions,setHttp2ClearTextUpgradeWithPreflightRequest,Long Identifier,The length of the field http2ClearTextUpgradeWithPreflightRequest is 41.,1162
vert.x,io.vertx.core.http,HttpClientOptions,setTryUsePerFrameWebSocketCompression,Long Identifier,The length of the field tryUsePerFrameWebSocketCompression is 34.,1244
vert.x,io.vertx.core.http,HttpClientOptions,getTryWebSocketDeflateFrameCompression,Long Identifier,The length of the field tryUsePerFrameWebSocketCompression is 34.,1255
vert.x,io.vertx.core.http,HttpClientOptions,setTryUsePerMessageWebSocketCompression,Long Identifier,The length of the field tryUsePerMessageWebSocketCompression is 36.,1262
vert.x,io.vertx.core.http,HttpClientOptions,getTryUsePerMessageWebSocketCompression,Long Identifier,The length of the field tryUsePerMessageWebSocketCompression is 36.,1273
vert.x,io.vertx.core.http,HttpClientOptions,setWebSocketCompressionRequestServerNoContext,Long Identifier,The length of the field webSocketRequestServerNoContext is 31.,1318
vert.x,io.vertx.core.http,HttpClientOptions,getWebSocketCompressionRequestServerNoContext,Long Identifier,The length of the field webSocketRequestServerNoContext is 31.,1330
vert.x,io.vertx.core.http,HttpConnection,shutdown,Magic Number,The method contains a magic number: 30000L,121
vert.x,io.vertx.core.http,HttpMethod,_fromNetty,Complex Method,Cyclomatic complexity of the method is 30,290
vert.x,io.vertx.core.http,HttpMethod,_fromNetty,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6cb472bf,290
vert.x,io.vertx.core.http,HttpMethod,valueOf,Complex Method,Cyclomatic complexity of the method is 32,355
vert.x,io.vertx.core.http,HttpMethod,valueOf,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@495b860f,355
vert.x,io.vertx.core.http,HttpServerOptions,HttpServerOptions,Long Identifier,The length of the field handle100ContinueAutomatically is 30.,207
vert.x,io.vertx.core.http,HttpServerOptions,HttpServerOptions,Long Identifier,The length of the field perFrameWebSocketCompressionSupported is 37.,207
vert.x,io.vertx.core.http,HttpServerOptions,HttpServerOptions,Long Identifier,The length of the field perMessageWebSocketCompressionSupported is 39.,207
vert.x,io.vertx.core.http,HttpServerOptions,HttpServerOptions,Long Identifier,The length of the field webSocketPreferredClientNoContext is 33.,207
vert.x,io.vertx.core.http,HttpServerOptions,HttpServerOptions,Long Identifier,The length of the field registerWebSocketWriteHandlers is 30.,207
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_MAX_WEBSOCKET_FRAME_SIZE is 32.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_MAX_WEBSOCKET_MESSAGE_SIZE is 34.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field handle100ContinueAutomatically is 30.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_HANDLE_100_CONTINE_AUTOMATICALLY is 40.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_MAX_INITIAL_LINE_LENGTH is 31.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_MAX_FORM_ATTRIBUTE_SIZE is 31.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_INITIAL_SETTINGS_MAX_CONCURRENT_STREAMS is 47.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_HTTP2_CONNECTION_WINDOW_SIZE is 36.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_DECOMPRESSION_SUPPORTED is 31.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_ACCEPT_UNMASKED_FRAMES is 30.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_DECODER_INITIAL_BUFFER_SIZE is 35.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field perFrameWebSocketCompressionSupported is 37.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_PER_FRAME_WEBSOCKET_COMPRESSION_SUPPORTED is 49.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field perMessageWebSocketCompressionSupported is 39.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_PER_MESSAGE_WEBSOCKET_COMPRESSION_SUPPORTED is 51.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_WEBSOCKET_COMPRESSION_LEVEL is 35.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field webSocketPreferredClientNoContext is 33.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_WEBSOCKET_PREFERRED_CLIENT_NO_CONTEXT is 45.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_WEBSOCKET_ALLOW_SERVER_NO_CONTEXT is 41.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_WEBSOCKET_CLOSING_TIMEOUT is 33.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field registerWebSocketWriteHandlers is 30.,264
vert.x,io.vertx.core.http,HttpServerOptions,init,Long Identifier,The length of the field DEFAULT_REGISTER_WEBSOCKET_WRITE_HANDLERS is 41.,264
vert.x,io.vertx.core.http,HttpServerOptions,setEnabledSecureTransportProtocols,Long Identifier,The length of the parameter enabledSecureTransportProtocols is 31.,505
vert.x,io.vertx.core.http,HttpServerOptions,isHandle100ContinueAutomatically,Long Identifier,The length of the field handle100ContinueAutomatically is 30.,701
vert.x,io.vertx.core.http,HttpServerOptions,setHandle100ContinueAutomatically,Long Identifier,The length of the parameter handle100ContinueAutomatically is 30.,708
vert.x,io.vertx.core.http,HttpServerOptions,setHandle100ContinueAutomatically,Long Identifier,The length of the field handle100ContinueAutomatically is 30.,708
vert.x,io.vertx.core.http,HttpServerOptions,setPerFrameWebSocketCompressionSupported,Long Identifier,The length of the field perFrameWebSocketCompressionSupported is 37.,913
vert.x,io.vertx.core.http,HttpServerOptions,getPerFrameWebSocketCompressionSupported,Long Identifier,The length of the field perFrameWebSocketCompressionSupported is 37.,924
vert.x,io.vertx.core.http,HttpServerOptions,setPerMessageWebSocketCompressionSupported,Long Identifier,The length of the field perMessageWebSocketCompressionSupported is 39.,933
vert.x,io.vertx.core.http,HttpServerOptions,getPerMessageWebSocketCompressionSupported,Long Identifier,The length of the field perMessageWebSocketCompressionSupported is 39.,944
vert.x,io.vertx.core.http,HttpServerOptions,setWebSocketPreferredClientNoContext,Long Identifier,The length of the field webSocketPreferredClientNoContext is 33.,991
vert.x,io.vertx.core.http,HttpServerOptions,getWebSocketPreferredClientNoContext,Long Identifier,The length of the field webSocketPreferredClientNoContext is 33.,1003
vert.x,io.vertx.core.http,HttpServerOptions,isRegisterWebSocketWriteHandlers,Long Identifier,The length of the field registerWebSocketWriteHandlers is 30.,1078
vert.x,io.vertx.core.http,HttpServerOptions,setRegisterWebSocketWriteHandlers,Long Identifier,The length of the parameter registerWebSocketWriteHandlers is 30.,1085
vert.x,io.vertx.core.http,HttpServerOptions,setRegisterWebSocketWriteHandlers,Long Identifier,The length of the field registerWebSocketWriteHandlers is 30.,1085
vert.x,io.vertx.core.http,RequestOptions,RequestOptions,Complex Method,Cyclomatic complexity of the method is 11,132
vert.x,io.vertx.core.http,RequestOptions,RequestOptions,Magic Number,The method contains a magic number: 80,132
vert.x,io.vertx.core.http,RequestOptions,setAbsoluteURI,Magic Number,The method contains a magic number: 80,374
vert.x,io.vertx.core.http,RequestOptions,setAbsoluteURI,Magic Number,The method contains a magic number: 443,374
vert.x,io.vertx.core.http,RequestOptions,setAbsoluteURI,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@16e3fbba,374
vert.x,io.vertx.core.http,StreamPriority,hashCode,Magic Number,The method contains a magic number: 31,105
vert.x,io.vertx.core.http,StreamPriority,hashCode,Magic Number,The method contains a magic number: 1231,105
vert.x,io.vertx.core.http,StreamPriority,hashCode,Magic Number,The method contains a magic number: 1237,105
vert.x,io.vertx.core.http,WebSocketConnectOptions,WebSocketConnectOptions,Long Identifier,The length of the field DEFAULT_REGISTER_WRITE_HANDLERS is 31.,62
vert.x,io.vertx.core.http,Http1xClientConnectionTest,testResetStreamRequestSent,Long Statement,The length of the statement "stream.writeHead(new HttpRequestHead(HttpMethod.GET`"/"`MultiMap.caseInsensitiveMultiMap()`"localhost:8080"`""`null)`false`Unpooled.EMPTY_BUFFER`false`new StreamPriority()`false);" is 179.,49
vert.x,io.vertx.core.http,Http1xClientConnectionTest,testServerConnectionClose,Long Statement,The length of the statement "stream.writeHead(new HttpRequestHead(HttpMethod.GET`"/"`MultiMap.caseInsensitiveMultiMap()`"localhost:8080"`""`null)`false`Unpooled.EMPTY_BUFFER`true`new StreamPriority()`false);" is 178.,82
vert.x,io.vertx.core.http,Http1xMetricsTest,testAllocatedStreamResetShouldNotCallMetricsLifecycle,Magic Number,The method contains a magic number: 2,24
vert.x,io.vertx.core.http,Http1xProxyTest,getOptions,Long Statement,The length of the statement "options.getAddressResolverOptions().setHostsValue(Buffer.buffer("" + "127.0.0.1 localhost\n" + "127.0.0.1 www1.example1.com\n"+ "127.0.0.1 www2.example1.com\n"+ "127.0.0.1 www1.example2.com\n"+ "127.0.0.1 www2.example2.com\n"));" is 228.,34
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequest,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port())));" is 158.,47
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequest,Long Statement,The length of the statement "testHttpProxyRequest(() -> client.request(new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI("/")).compose(HttpClientRequest::send)).onComplete(onSuccess(v -> {" is 191.,47
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequest2,Long Statement,The length of the statement "testHttpProxyRequest(() -> client.request(new RequestOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port())).setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI("/")).compose(HttpClientRequest::send)).onComplete(onSuccess(v -> {" is 294.,64
vert.x,io.vertx.core.http,Http1xProxyTest,testFilter,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port())));" is 158.,89
vert.x,io.vertx.core.http,Http1xProxyTest,testFilter,Long Statement,The length of the statement "testHttpProxyRequest(() -> client.request(new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI("/")).compose(HttpClientRequest::send)).onComplete(onSuccess(v -> {" is 191.,89
vert.x,io.vertx.core.http,Http1xProxyTest,testFilter,Magic Number,The method contains a magic number: 8080,89
vert.x,io.vertx.core.http,Http1xProxyTest,testNonProxyHosts,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setNonProxyHosts(nonProxyHosts).setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port())));" is 190.,133
vert.x,io.vertx.core.http,Http1xProxyTest,testNonProxyHosts,Long Statement,The length of the statement "testHttpProxyRequest(() -> client.request(new RequestOptions().setHost(host).setPort(DEFAULT_HTTP_PORT).setURI("/")).compose(HttpClientRequest::send)).onComplete(onSuccess(v -> {" is 178.,133
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequestOverrideClientSsl,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setSsl(true).setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port())));" is 171.,152
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequestOverrideClientSsl,Long Statement,The length of the statement "testHttpProxyRequest(() -> client.request(new RequestOptions().setSsl(false).setHost("localhost").setPort(8080)).compose(HttpClientRequest::send)).onComplete(onSuccess(v -> {" is 174.,152
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequestOverrideClientSsl,Magic Number,The method contains a magic number: 8080,152
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequest,Magic Number,The method contains a magic number: 200,172
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequestAuth,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port()).setUsername("user").setPassword("user")));" is 198.,189
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequestAuth,Long Statement,The length of the statement "client.request(new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI("/")).onComplete(onSuccess(req -> {" is 132.,189
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyRequestAuth,Magic Number,The method contains a magic number: 200,189
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyFtpRequest,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port())));" is 158.,219
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyFtpRequest,Magic Number,The method contains a magic number: 200,219
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpSocksProxyRequest,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost("localhost").setPort(proxy.port())));" is 160.,244
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpSocksProxyRequest,Long Statement,The length of the statement "client.request(new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI("/")).onComplete(onSuccess(req -> {" is 132.,244
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpSocksProxyRequest,Magic Number,The method contains a magic number: 200,244
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpSocksProxyRequestAuth,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost("localhost").setPort(proxy.port()).setUsername("user").setPassword("user")));" is 200.,269
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpSocksProxyRequestAuth,Long Statement,The length of the statement "client.request(new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI("/")).onComplete(onSuccess(req -> {" is 132.,269
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpSocksProxyRequestAuth,Magic Number,The method contains a magic number: 200,269
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyAuthPooling1,Long Statement,The length of the statement "ProxyOptions req1=new ProxyOptions().setUsername("user1").setPassword("user1").setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port());" is 146.,324
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyAuthPooling1,Long Statement,The length of the statement "ProxyOptions req2=new ProxyOptions().setUsername("user2").setPassword("user2").setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port());" is 146.,324
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyAuthPooling2,Long Statement,The length of the statement "ProxyOptions req1=new ProxyOptions().setUsername("user1").setPassword("user1").setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port());" is 146.,343
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyAuthPooling2,Long Statement,The length of the statement "ProxyOptions req2=new ProxyOptions().setUsername("user1").setPassword("user1").setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port());" is 146.,343
vert.x,io.vertx.core.http,Http1xProxyTest,testHttpProxyAuthPooling2,Magic Number,The method contains a magic number: 2,343
vert.x,io.vertx.core.http,Http1xProxyTest,testSocksProxyAuthPooling1,Long Statement,The length of the statement "ProxyOptions req1=new ProxyOptions().setUsername("user1").setPassword("user1").setType(ProxyType.SOCKS5).setHost("localhost").setPort(proxy.port());" is 148.,390
vert.x,io.vertx.core.http,Http1xProxyTest,testSocksProxyAuthPooling1,Long Statement,The length of the statement "ProxyOptions req2=new ProxyOptions().setUsername("user2").setPassword("user2").setType(ProxyType.SOCKS5).setHost("localhost").setPort(proxy.port());" is 148.,390
vert.x,io.vertx.core.http,Http1xProxyTest,testSocksProxyAuthPooling2,Long Statement,The length of the statement "ProxyOptions req1=new ProxyOptions().setUsername("user1").setPassword("user1").setType(ProxyType.SOCKS5).setHost("localhost").setPort(proxy.port());" is 148.,409
vert.x,io.vertx.core.http,Http1xProxyTest,testSocksProxyAuthPooling2,Long Statement,The length of the statement "ProxyOptions req2=new ProxyOptions().setUsername("user1").setPassword("user1").setType(ProxyType.SOCKS5).setHost("localhost").setPort(proxy.port());" is 148.,409
vert.x,io.vertx.core.http,Http1xProxyTest,testSocksProxyAuthPooling2,Magic Number,The method contains a magic number: 2,409
vert.x,io.vertx.core.http,Http1xProxyTest,testPooling,Long Statement,The length of the statement "client.request(new RequestOptions(baseOptions).setProxyOptions(i == 0 ? request1 : request2)).compose(HttpClientRequest::send).compose(HttpClientResponse::body).onComplete(onSuccess(res2 -> {" is 191.,429
vert.x,io.vertx.core.http,Http1xProxyTest,testPooling,Magic Number,The method contains a magic number: 2,429
vert.x,io.vertx.core.http,Http1xProxyTest,testPooling,Magic Number,The method contains a magic number: 2,429
vert.x,io.vertx.core.http,Http1xProxyTest,testPooling,Magic Number,The method contains a magic number: 2,429
vert.x,io.vertx.core.http,Http1xProxyTest,testPooling,Magic Number,The method contains a magic number: 2,429
vert.x,io.vertx.core.http,Http1xProxyTest,testPooling,Magic Number,The method contains a magic number: 40,429
vert.x,io.vertx.core.http,Http1xProxyTest,testWssHttpProxy,Long Statement,The length of the statement "testWebSocket(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())`new HttpClientOptions().setSsl(true).setTrustOptions(Cert.SERVER_JKS.get()).setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost(DEFAULT_HTTP_HOST).setPort(proxy.port()))`true);" is 285.,476
vert.x,io.vertx.core.http,Http1xProxyTest,testWsHttpProxy,Long Statement,The length of the statement "testWebSocket(createBaseServerOptions()`new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost(DEFAULT_HTTP_HOST).setPort(proxy.port()))`true);" is 179.,489
vert.x,io.vertx.core.http,Http1xProxyTest,testWssSocks5Proxy,Long Statement,The length of the statement "testWebSocket(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())`new HttpClientOptions().setSsl(true).setTrustOptions(Cert.SERVER_JKS.get()).setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost(DEFAULT_HTTP_HOST).setPort(proxy.port()))`true);" is 287.,499
vert.x,io.vertx.core.http,Http1xProxyTest,testWsSocks5Proxy,Long Statement,The length of the statement "testWebSocket(createBaseServerOptions()`new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost(DEFAULT_HTTP_HOST).setPort(proxy.port()))`true);" is 181.,512
vert.x,io.vertx.core.http,Http1xProxyTest,testWsNonProxyHosts,Long Statement,The length of the statement "testWebSocket(createBaseServerOptions()`new HttpClientOptions().addNonProxyHost("localhost").setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost(DEFAULT_HTTP_HOST).setPort(proxy.port()))`false);" is 209.,522
vert.x,io.vertx.core.http,Http1xTest,getOptions,Long Statement,The length of the statement "options.getAddressResolverOptions().setHostsValue(Buffer.buffer("" + "127.0.0.1 localhost\n" + "127.0.0.1 host0\n"+ "127.0.0.1 host1\n"+ "127.0.0.1 host2\n"));" is 159.,69
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Long Method,The method has 161 lines of code.,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Long Statement,The length of the statement "JksOptions keyStoreOptions=new JksOptions().setPath(TestUtils.randomAlphaString(100)).setPassword(TestUtils.randomAlphaString(100));" is 132.,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Long Statement,The length of the statement "JksOptions trustStoreOptions=new JksOptions().setPath(TestUtils.randomAlphaString(100)).setPassword(TestUtils.randomAlphaString(100));" is 134.,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 123,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 123,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 23,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 2,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 256,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 2,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 10,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 10,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 5,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 60000,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 2,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 100,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 256,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 256,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 10,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 10,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 10,80
vert.x,io.vertx.core.http,Http1xTest,testClientOptions,Magic Number,The method contains a magic number: 10,80
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Long Method,The method has 112 lines of code.,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Long Statement,The length of the statement "JksOptions keyStoreOptions=new JksOptions().setPath(TestUtils.randomAlphaString(100)).setPassword(TestUtils.randomAlphaString(100));" is 132.,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Long Statement,The length of the statement "JksOptions trustStoreOptions=new JksOptions().setPath(TestUtils.randomAlphaString(100)).setPassword(TestUtils.randomAlphaString(100));" is 134.,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Long Statement,The length of the statement "assertEquals(new Http2Settings().setMaxConcurrentStreams(HttpServerOptions.DEFAULT_INITIAL_SETTINGS_MAX_CONCURRENT_STREAMS)`options.getInitialSettings());" is 154.,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 123,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 123,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 23,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 2,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 256,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 2,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 10,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 10,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 100,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 100,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 100,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 100,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 65536,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 80,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 1234,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 1234,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 65536,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 100,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 256,282
vert.x,io.vertx.core.http,Http1xTest,testServerOptions,Magic Number,The method contains a magic number: 256,282
vert.x,io.vertx.core.http,Http1xTest,testCopyClientOptions,Magic Number,The method contains a magic number: 128,424
vert.x,io.vertx.core.http,Http1xTest,testCopyClientOptions,Magic Number,The method contains a magic number: 100,424
vert.x,io.vertx.core.http,Http1xTest,testCopyClientOptions,Magic Number,The method contains a magic number: 100,424
vert.x,io.vertx.core.http,Http1xTest,testCopyClientOptions,Magic Number,The method contains a magic number: 100,424
vert.x,io.vertx.core.http,Http1xTest,testCopyClientOptions,Magic Number,The method contains a magic number: 3,424
vert.x,io.vertx.core.http,Http1xTest,testCopyClientOptions,Magic Number,The method contains a magic number: 10,424
vert.x,io.vertx.core.http,Http1xTest,checkCopyHttpClientOptions,Long Statement,The length of the statement "assertEquals(((PemTrustOptions)options.getTrustOptions()).getCertValues()`((PemTrustOptions)copy.getTrustOptions()).getCertValues());" is 133.,517
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 128,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 3,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Magic Number,The method contains a magic number: 10,575
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsJson,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1a944a41,575
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Long Identifier,The length of the identifier is100ContinueHandledAutomatically is 33.,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 128,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 1234,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 10,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 10000,752
vert.x,io.vertx.core.http,Http1xTest,testCopyServerOptions,Magic Number,The method contains a magic number: 3,752
vert.x,io.vertx.core.http,Http1xTest,checkCopyHttpServerOptions,Long Statement,The length of the statement "assertEquals(((PemTrustOptions)options.getTrustOptions()).getCertValues()`((PemTrustOptions)copy.getTrustOptions()).getCertValues());" is 133.,825
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Long Identifier,The length of the identifier is100ContinueHandledAutomatically is 33.,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 128,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 1234,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 10,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 10000,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 10000,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 10000,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Magic Number,The method contains a magic number: 3,877
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsJson,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@55faf226,877
vert.x,io.vertx.core.http,Http1xTest,testTimedOutWaiterDoesNotConnect,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(buff -> {" is 186.,1038
vert.x,io.vertx.core.http,Http1xTest,testTimedOutWaiterDoesNotConnect,Magic Number,The method contains a magic number: 300,1038
vert.x,io.vertx.core.http,Http1xTest,testTimedOutWaiterDoesNotConnect,Magic Number,The method contains a magic number: 6,1038
vert.x,io.vertx.core.http,Http1xTest,testTimedOutWaiterDoesNotConnect,Magic Number,The method contains a magic number: 20,1038
vert.x,io.vertx.core.http,Http1xTest,testTimedOutWaiterDoesNotConnect,Magic Number,The method contains a magic number: 2,1038
vert.x,io.vertx.core.http,Http1xTest,testTimedOutWaiterDoesNotConnect,Magic Number,The method contains a magic number: 200,1038
vert.x,io.vertx.core.http,Http1xTest,testTimedOutWaiterDoesNotConnect,Magic Number,The method contains a magic number: 2,1038
vert.x,io.vertx.core.http,Http1xTest,testTimedOutWaiterDoesNotConnect,Magic Number,The method contains a magic number: 2,1038
vert.x,io.vertx.core.http,Http1xTest,testPipeliningOrder,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(PUT).putHeader("count"`String.valueOf(theCount))).compose(req -> req.send(Buffer.buffer("This is content " + theCount)).andThen(onSuccess(resp -> assertEquals(theCount`Integer.parseInt(resp.headers().get("count"))))).compose(resp -> resp.body().andThen(onSuccess(buff -> assertEquals("This is content " + theCount`buff.toString()))))).onComplete(onSuccess(v -> complete()));" is 434.,1108
vert.x,io.vertx.core.http,Http1xTest,testPipeliningOrder,Magic Number,The method contains a magic number: 100,1108
vert.x,io.vertx.core.http,Http1xTest,testPipeliningOrder,Magic Number,The method contains a magic number: 10,1108
vert.x,io.vertx.core.http,Http1xTest,testPipeliningOrder,Magic Number,The method contains a magic number: 500,1108
vert.x,io.vertx.core.http,Http1xTest,testPipeliningLimit,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setKeepAlive(true).setPipelining(true).setPipeliningLimit(limit).setMaxPoolSize(1));" is 138.,1159
vert.x,io.vertx.core.http,Http1xTest,testPipeliningLimit,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI("/somepath")).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 134.,1159
vert.x,io.vertx.core.http,Http1xTest,testPipeliningLimit,Magic Number,The method contains a magic number: 25,1159
vert.x,io.vertx.core.http,Http1xTest,testPipeliningLimit,Magic Number,The method contains a magic number: 4,1159
vert.x,io.vertx.core.http,Http1xTest,testPipeliningLimit,Magic Number,The method contains a magic number: 100,1159
vert.x,io.vertx.core.http,Http1xTest,testPipeliningLimit,Magic Number,The method contains a magic number: 20,1159
vert.x,io.vertx.core.http,Http1xTest,testPipeliningLimit,Magic Number,The method contains a magic number: 200,1159
vert.x,io.vertx.core.http,Http1xTest,testCloseServerConnectionWithPendingMessages,Magic Number,The method contains a magic number: 10,1213
vert.x,io.vertx.core.http,Http1xTest,testCloseServerConnectionWithPendingMessages,Magic Number,The method contains a magic number: 5,1213
vert.x,io.vertx.core.http,Http1xTest,testCloseServerConnectionWithPendingMessages,Magic Number,The method contains a magic number: 100,1213
vert.x,io.vertx.core.http,Http1xTest,testCloseServerConnectionWithPendingMessages,Magic Number,The method contains a magic number: 2,1213
vert.x,io.vertx.core.http,Http1xTest,testPipeliningFailure,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setKeepAlive(true).setPipelining(true).setPipeliningLimit(n).setMaxPoolSize(1));" is 134.,1241
vert.x,io.vertx.core.http,Http1xTest,testPipeliningFailure,Magic Number,The method contains a magic number: 5,1241
vert.x,io.vertx.core.http,Http1xTest,testPipeliningFailure,Magic Number,The method contains a magic number: 2,1241
vert.x,io.vertx.core.http,Http1xTest,testPipelineStress,Magic Number,The method contains a magic number: 4,1285
vert.x,io.vertx.core.http,Http1xTest,testPipelineStress,Magic Number,The method contains a magic number: 16,1285
vert.x,io.vertx.core.http,Http1xTest,testPipelineStress,Magic Number,The method contains a magic number: 16,1285
vert.x,io.vertx.core.http,Http1xTest,testPipelineStress,Magic Number,The method contains a magic number: 1000,1285
vert.x,io.vertx.core.http,Http1xTest,testPipelineStress,Magic Number,The method contains a magic number: 32,1285
vert.x,io.vertx.core.http,Http1xTest,testPipeliningPauseRequest,Magic Number,The method contains a magic number: 10,1364
vert.x,io.vertx.core.http,Http1xTest,testPipeliningPauseRequest,Magic Number,The method contains a magic number: 30,1364
vert.x,io.vertx.core.http,Http1xTest,testPipeliningPauseRequest,Magic Number,The method contains a magic number: 16,1364
vert.x,io.vertx.core.http,Http1xTest,testServerPipeliningConnectionConcurrency,Magic Number,The method contains a magic number: 5,1398
vert.x,io.vertx.core.http,Http1xTest,testServerPipeliningConnectionConcurrency,Magic Number,The method contains a magic number: 20,1398
vert.x,io.vertx.core.http,Http1xTest,testKeepAlive,Magic Number,The method contains a magic number: 5,1429
vert.x,io.vertx.core.http,Http1xTest,testKeepAlive,Magic Number,The method contains a magic number: 10,1429
vert.x,io.vertx.core.http,Http1xTest,testKeepAlive,Magic Number,The method contains a magic number: 5,1429
vert.x,io.vertx.core.http,Http1xTest,testNoKeepAlive,Magic Number,The method contains a magic number: 5,1434
vert.x,io.vertx.core.http,Http1xTest,testNoKeepAlive,Magic Number,The method contains a magic number: 10,1434
vert.x,io.vertx.core.http,Http1xTest,testNoKeepAlive,Magic Number,The method contains a magic number: 10,1434
vert.x,io.vertx.core.http,Http1xTest,testKeepAlive,Long Statement,The length of the statement "client=vertx.createHttpClient(createBaseClientOptions().setKeepAlive(keepAlive).setPipelining(false).setMaxPoolSize(poolSize));" is 127.,1439
vert.x,io.vertx.core.http,Http1xTest,testKeepAlive,Magic Number,The method contains a magic number: 100,1439
vert.x,io.vertx.core.http,Http1xTest,testKeepAlive,Magic Number,The method contains a magic number: 200,1439
vert.x,io.vertx.core.http,Http1xTest,testPooling,Long Statement,The length of the statement "client=vertx.createHttpClient(createBaseClientOptions().setKeepAlive(keepAlive).setPipelining(pipelining).setMaxPoolSize(maxPoolSize));" is 135.,1513
vert.x,io.vertx.core.http,Http1xTest,testPooling,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI(path)).compose(req -> req.putHeader("count"`String.valueOf(theCount)).send().andThen(onSuccess(resp -> {" is 161.,1513
vert.x,io.vertx.core.http,Http1xTest,testPooling,Magic Number,The method contains a magic number: 100,1513
vert.x,io.vertx.core.http,Http1xTest,testPooling,Magic Number,The method contains a magic number: 10,1513
vert.x,io.vertx.core.http,Http1xTest,testPooling,Magic Number,The method contains a magic number: 200,1513
vert.x,io.vertx.core.http,Http1xTest,testPoolingNoKeepAliveAndPipelining,Empty catch clause,The method has an empty catch block.,1554
vert.x,io.vertx.core.http,Http1xTest,testMaxWaitQueueSizeIsRespected,Magic Number,The method contains a magic number: 2,1563
vert.x,io.vertx.core.http,Http1xTest,testRequestTimeoutExtendedWhenResponseChunksReceived,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setTimeout(timeout)).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> testComplete()));" is 238.,1592
vert.x,io.vertx.core.http,Http1xTest,testRequestTimeoutExtendedWhenResponseChunksReceived,Magic Number,The method contains a magic number: 2000,1592
vert.x,io.vertx.core.http,Http1xTest,testRequestTimeoutExtendedWhenResponseChunksReceived,Magic Number,The method contains a magic number: 100,1592
vert.x,io.vertx.core.http,Http1xTest,testRequestTimeoutExtendedWhenResponseChunksReceived,Magic Number,The method contains a magic number: 2,1592
vert.x,io.vertx.core.http,Http1xTest,testRequestTimeoutExtendedWhenResponseChunksReceived,Magic Number,The method contains a magic number: 200,1592
vert.x,io.vertx.core.http,Http1xTest,testServerWebSocketIdleTimeout,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST));" is 129.,1622
vert.x,io.vertx.core.http,Http1xTest,testSharedServersRoundRobin,Long Statement,The length of the statement "assertEquals(IntStream.range(0`requestCount.size()).mapToObj(i -> numRequests / numServers).collect(Collectors.toList())`new ArrayList<>(requestCount.values()));" is 161.,1655
vert.x,io.vertx.core.http,Http1xTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 2,1655
vert.x,io.vertx.core.http,Http1xTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 100,1655
vert.x,io.vertx.core.http,Http1xTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 30,1655
vert.x,io.vertx.core.http,Http1xTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 30,1655
vert.x,io.vertx.core.http,Http1xTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 10,1655
vert.x,io.vertx.core.http,Http1xTest,testSharedServersRoundRobinWithOtherServerRunningOnDifferentPort,Magic Number,The method contains a magic number: 8081,1736
vert.x,io.vertx.core.http,Http1xTest,testSharedServersRoundRobinButFirstStartAndStopServer,Magic Number,The method contains a magic number: 500,1744
vert.x,io.vertx.core.http,Http1xTest,testDefaultHttpVersion,Long Statement,The length of the statement "client.request(requestOptions).compose(HttpClientRequest::send).compose(HttpClientResponse::body).onComplete(onSuccess(v -> testComplete()));" is 141.,1756
vert.x,io.vertx.core.http,Http1xTest,testHttp10ResponseNonKeepAliveConnectionClosed,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> complete()));" is 194.,1905
vert.x,io.vertx.core.http,Http1xTest,testHttp10ResponseNonKeepAliveConnectionClosed,Magic Number,The method contains a magic number: 3,1905
vert.x,io.vertx.core.http,Http1xTest,testHttp10ResponseNonKeepAliveConnectionClosed,Magic Number,The method contains a magic number: 3,1905
vert.x,io.vertx.core.http,Http1xTest,testHttp10ResponseNonKeepAliveConnectionClosed,Magic Number,The method contains a magic number: 200,1905
vert.x,io.vertx.core.http,Http1xTest,requestAbsNoPort,Long Statement,The length of the statement "client.request(new RequestOptions().setAbsoluteURI("http://www.google.com")).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> testComplete()));" is 156.,1937
vert.x,io.vertx.core.http,Http1xTest,testRequestsTimeoutInQueue,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setTimeout(500)).compose(HttpClientRequest::send).onComplete(onFailure(t -> assertTrue(t instanceof TimeoutException)));" is 170.,1945
vert.x,io.vertx.core.http,Http1xTest,testRequestsTimeoutInQueue,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setTimeout(3000)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 131.,1945
vert.x,io.vertx.core.http,Http1xTest,testRequestsTimeoutInQueue,Magic Number,The method contains a magic number: 1000,1945
vert.x,io.vertx.core.http,Http1xTest,testRequestsTimeoutInQueue,Magic Number,The method contains a magic number: 5,1945
vert.x,io.vertx.core.http,Http1xTest,testRequestsTimeoutInQueue,Magic Number,The method contains a magic number: 500,1945
vert.x,io.vertx.core.http,Http1xTest,testRequestsTimeoutInQueue,Magic Number,The method contains a magic number: 3000,1945
vert.x,io.vertx.core.http,Http1xTest,testRequestsTimeoutInQueue,Magic Number,The method contains a magic number: 200,1945
vert.x,io.vertx.core.http,Http1xTest,testServerOptionsCopiedBeforeUse,Magic Number,The method contains a magic number: 200,1979
vert.x,io.vertx.core.http,Http1xTest,testClientOptionsCopiedBeforeUse,Magic Number,The method contains a magic number: 200,1999
vert.x,io.vertx.core.http,Http1xTest,testRequestExceptionHandlerContext,Magic Number,The method contains a magic number: 2,2019
vert.x,io.vertx.core.http,Http1xTest,testContexts,Long Method,The method has 136 lines of code.,2062
vert.x,io.vertx.core.http,Http1xTest,testContexts,Long Statement,The length of the statement "List<EventLoopContext> contexts=Stream.generate(() -> ((VertxInternal)vertx).createEventLoopContext()).limit(numReqs).collect(Collectors.toList());" is 147.,2062
vert.x,io.vertx.core.http,Http1xTest,testContexts,Magic Number,The method contains a magic number: 4,2062
vert.x,io.vertx.core.http,Http1xTest,testContexts,Magic Number,The method contains a magic number: 1024,2062
vert.x,io.vertx.core.http,Http1xTest,testContexts,Magic Number,The method contains a magic number: 16,2062
vert.x,io.vertx.core.http,Http1xTest,testContexts,Magic Number,The method contains a magic number: 200,2062
vert.x,io.vertx.core.http,Http1xTest,testContexts,Magic Number,The method contains a magic number: 40,2062
vert.x,io.vertx.core.http,Http1xTest,testTwoServersSameAddressDifferentContext,Magic Number,The method contains a magic number: 2,2208
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 64,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 1024,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 1024,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 64,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 1024,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 1024,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 8192,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 8192,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 8192,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeClientResponse,Magic Number,The method contains a magic number: 64,2221
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeServerRequestFromAnotherThread,Magic Number,The method contains a magic number: 64,2266
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeServerRequestFromAnotherThread,Magic Number,The method contains a magic number: 1024,2266
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeServerRequestFromAnotherThread,Magic Number,The method contains a magic number: 1024,2266
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeServerRequestFromAnotherThread,Magic Number,The method contains a magic number: 64,2266
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeServerRequestFromAnotherThread,Magic Number,The method contains a magic number: 1024,2266
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeServerRequestFromAnotherThread,Magic Number,The method contains a magic number: 1024,2266
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeServerRequestFromAnotherThread,Magic Number,The method contains a magic number: 100,2266
vert.x,io.vertx.core.http,Http1xTest,testPauseResumeServerRequestFromAnotherThread,Magic Number,The method contains a magic number: 8192,2266
vert.x,io.vertx.core.http,Http1xTest,send,Magic Number,The method contains a magic number: 8192,2303
vert.x,io.vertx.core.http,Http1xTest,send,Magic Number,The method contains a magic number: 8192,2303
vert.x,io.vertx.core.http,Http1xTest,testEndServerResponseResumeTheConnection,Magic Number,The method contains a magic number: 2,2314
vert.x,io.vertx.core.http,Http1xTest,testEndServerResponseResumeTheConnection,Magic Number,The method contains a magic number: 200,2314
vert.x,io.vertx.core.http,Http1xTest,testEndServerResponseResumeTheConnection,Magic Number,The method contains a magic number: 200,2314
vert.x,io.vertx.core.http,Http1xTest,testEndServerRequestResumeTheConnection,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(PUT)).compose(req -> req.send(Buffer.buffer("1")).andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> complete()));" is 247.,2341
vert.x,io.vertx.core.http,Http1xTest,testEndServerRequestResumeTheConnection,Magic Number,The method contains a magic number: 2,2341
vert.x,io.vertx.core.http,Http1xTest,testEndServerRequestResumeTheConnection,Magic Number,The method contains a magic number: 2,2341
vert.x,io.vertx.core.http,Http1xTest,testEndServerRequestResumeTheConnection,Magic Number,The method contains a magic number: 200,2341
vert.x,io.vertx.core.http,Http1xTest,testMultipleRecursiveCallsAndPipelining,Magic Number,The method contains a magic number: 100,2364
vert.x,io.vertx.core.http,Http1xTest,testMultipleRecursiveCallsAndPipelining,Magic Number,The method contains a magic number: 5,2364
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 2,2422
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 5,2422
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 5,2422
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 2,2422
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 200,2422
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 2,2422
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 2,2422
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 200,2422
vert.x,io.vertx.core.http,Http1xTest,testTwoServersDifferentEventLoopsCloseOne,Magic Number,The method contains a magic number: 3,2422
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 256,2480
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 1024,2480
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 512,2480
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 1024,2480
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 128,2480
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 1024,2480
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 129,2480
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 1024,2480
vert.x,io.vertx.core.http,Http1xTest,testSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 200,2480
vert.x,io.vertx.core.http,Http1xTest,testServerMaxInitialLineLengthOption,Magic Number,The method contains a magic number: 5018,2508
vert.x,io.vertx.core.http,Http1xTest,testServerMaxInitialLineLength,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setMaxInitialLineLength(maxInitialLength)).requestHandler(req -> {" is 122.,2514
vert.x,io.vertx.core.http,Http1xTest,testServerMaxInitialLineLength,Long Statement,The length of the statement "vertx.createHttpClient().request(new RequestOptions(requestOptions).setURI("/?t=" + longParam)).compose(req -> req.send().compose(resp -> {" is 139.,2514
vert.x,io.vertx.core.http,Http1xTest,testServerMaxInitialLineLength,Magic Number,The method contains a magic number: 5000,2514
vert.x,io.vertx.core.http,Http1xTest,testServerMaxInitialLineLength,Magic Number,The method contains a magic number: 200,2514
vert.x,io.vertx.core.http,Http1xTest,testServerMaxInitialLineLength,Magic Number,The method contains a magic number: 414,2514
vert.x,io.vertx.core.http,Http1xTest,testServerInvalidHttpMessage,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI("/?ab c=1")).onComplete(onSuccess(req -> req.send().onComplete(onSuccess(resp -> {" is 139.,2540
vert.x,io.vertx.core.http,Http1xTest,testServerInvalidHttpMessage,Magic Number,The method contains a magic number: 400,2540
vert.x,io.vertx.core.http,Http1xTest,testClientMaxInitialLineLengthOption,Long Statement,The length of the statement "so.write("" + "HTTP/1.1 200 OK\r\n" + "Transfer-Encoding: chunked\r\n"+ "\r\n"+ "A; name=\"" + longParam + "\"\r\n"+ "0123456789\r\n"+ "0\r\n"+ "\r\n");" is 152.,2561
vert.x,io.vertx.core.http,Http1xTest,testClientMaxInitialLineLengthOption,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI("/?t=" + longParam)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 141.,2561
vert.x,io.vertx.core.http,Http1xTest,testClientMaxInitialLineLengthOption,Magic Number,The method contains a magic number: 5000,2561
vert.x,io.vertx.core.http,Http1xTest,testClientMaxInitialLineLengthOption,Magic Number,The method contains a magic number: 6000,2561
vert.x,io.vertx.core.http,Http1xTest,testClientMaxHeaderSizeOption,Magic Number,The method contains a magic number: 9000,2599
vert.x,io.vertx.core.http,Http1xTest,testClientMaxHeaderSizeOption,Magic Number,The method contains a magic number: 10000,2599
vert.x,io.vertx.core.http,Http1xTest,testClientMaxHeaderSizeOption,Magic Number,The method contains a magic number: 200,2599
vert.x,io.vertx.core.http,Http1xTest,testServerMaxHeaderSizeOption,Magic Number,The method contains a magic number: 10000,2629
vert.x,io.vertx.core.http,Http1xTest,testServerMaxHeaderSize,Magic Number,The method contains a magic number: 9000,2635
vert.x,io.vertx.core.http,Http1xTest,testServerMaxHeaderSize,Magic Number,The method contains a magic number: 200,2635
vert.x,io.vertx.core.http,Http1xTest,testServerMaxHeaderSize,Magic Number,The method contains a magic number: 431,2635
vert.x,io.vertx.core.http,Http1xTest,testPipelinedInvalidHttpResponse,Magic Number,The method contains a magic number: 2,2666
vert.x,io.vertx.core.http,Http1xTest,testPipelinedInvalidHttpResponse,Magic Number,The method contains a magic number: 40,2666
vert.x,io.vertx.core.http,Http1xTest,testPipelinedInvalidHttpResponse,Magic Number,The method contains a magic number: 2,2666
vert.x,io.vertx.core.http,Http1xTest,testPipelinedInvalidHttpResponse,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@40047d68,2666
vert.x,io.vertx.core.http,Http1xTest,testConnectionCloseHttp_1_0_NoClose,Long Statement,The length of the statement "socket.write("HTTP/1.0 200 OK\r\n" + "Content-Type: text/plain\r\n" + "Content-Length: 4\r\n"+ "Connection: keep-alive\r\n"+ "\r\n"+ "xxx\n");" is 142.,2719
vert.x,io.vertx.core.http,Http1xTest,testConnectionCloseHttp_1_0_Close,Long Statement,The length of the statement "socket.write("HTTP/1.0 200 OK\r\n" + "Content-Type: text/plain\r\n" + "Content-Length: 4\r\n"+ "Connection: keep-alive\r\n"+ "\n"+ "xxx\n");" is 140.,2738
vert.x,io.vertx.core.http,Http1xTest,testConnectionCloseHttp_1_1_NoClose,Long Statement,The length of the statement "socket.write("HTTP/1.1 200 OK\r\n" + "Content-Type: text/plain\r\n" + "Content-Length: 1\r\n"+ "Connection: close\r\n"+ "\r\n"+ "\n");" is 134.,2758
vert.x,io.vertx.core.http,Http1xTest,testConnectionCloseHttp_1_1_Close,Long Statement,The length of the statement "socket.write("HTTP/1.1 200 OK\r\n" + "Content-Type: text/plain\r\n" + "Content-Length: 1\r\n"+ "Connection: close\r\n"+ "\r\n"+ "\n");" is 134.,2774
vert.x,io.vertx.core.http,Http1xTest,testConnectionClose,Long Statement,The length of the statement "HttpClientOptions clientOptions=new HttpClientOptions().setMaxPoolSize(poolSize).setDefaultHost("localhost").setKeepAlive(true).setPipelining(false);" is 149.,2791
vert.x,io.vertx.core.http,Http1xTest,testConnectionClose,Magic Number,The method contains a magic number: 5,2791
vert.x,io.vertx.core.http,Http1xTest,testConnectionClose,Magic Number,The method contains a magic number: 2,2791
vert.x,io.vertx.core.http,Http1xTest,testDoNotReuseConnectionWhenResponseEndsBeforeRequest,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI("/2")).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 127.,2843
vert.x,io.vertx.core.http,Http1xTest,testDoNotReuseConnectionWhenResponseEndsBeforeRequest,Magic Number,The method contains a magic number: 100,2843
vert.x,io.vertx.core.http,Http1xTest,testRecyclePipelinedConnection,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI(uri)).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> respLatch.countDown()));" is 237.,2887
vert.x,io.vertx.core.http,Http1xTest,testRecyclePipelinedConnection,Magic Number,The method contains a magic number: 2,2887
vert.x,io.vertx.core.http,Http1xTest,testRecyclePipelinedConnection,Magic Number,The method contains a magic number: 2,2887
vert.x,io.vertx.core.http,Http1xTest,testRecyclePipelinedConnection,Magic Number,The method contains a magic number: 200,2887
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionExceptionHandler,Magic Number,The method contains a magic number: 40,2924
vert.x,io.vertx.core.http,Http1xTest,testServerConnectionExceptionHandler,Magic Number,The method contains a magic number: 10000,2942
vert.x,io.vertx.core.http,Http1xTest,testServerExceptionHandler,Magic Number,The method contains a magic number: 10000,2968
vert.x,io.vertx.core.http,Http1xTest,testRandomPorts,Magic Number,The method contains a magic number: 10,2988
vert.x,io.vertx.core.http,Http1xTest,testContentDecompression,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(PUT).putHeader("Content-Encoding"`"gzip")).compose(req -> req.send(Buffer.buffer(dataGzipped))).onComplete(onSuccess(v -> testComplete()));" is 199.,3015
vert.x,io.vertx.core.http,Http1xTest,testContentDecompression,Magic Number,The method contains a magic number: 1000,3015
vert.x,io.vertx.core.http,Http1xTest,testResetClientRequestNotYetSent,Long Statement,The length of the statement "client=vertx.createHttpClient(createBaseClientOptions().setMaxPoolSize(1).setKeepAlive(keepAlive).setPipelining(pipelined));" is 124.,3055
vert.x,io.vertx.core.http,Http1xTest,testResetClientRequestNotYetSent,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI("some-uri")).compose(HttpClientRequest::send).onComplete(resp -> {" is 123.,3055
vert.x,io.vertx.core.http,Http1xTest,testResetClientRequestNotYetSent,Magic Number,The method contains a magic number: 2,3055
vert.x,io.vertx.core.http,Http1xTest,testResetKeepAliveClientRequest,Magic Number,The method contains a magic number: 3,3106
vert.x,io.vertx.core.http,Http1xTest,testResetPipelinedClientRequest,Long Statement,The length of the statement "if (total.toString().equals("GET /somepath HTTP/1.1\r\n" + "host: localhost:8080\r\n" + "\r\n"+ "POST /somepath HTTP/1.1\r\n"+ "host: localhost:8080\r\n"+ "\r\n")) {" is 165.,3166
vert.x,io.vertx.core.http,Http1xTest,testResetPipelinedClientRequest,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI("/somepath").setMethod(HttpMethod.POST)).onComplete(onSuccess(req2 -> {" is 128.,3166
vert.x,io.vertx.core.http,Http1xTest,testResetPipelinedClientRequest,Magic Number,The method contains a magic number: 3,3166
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetPersistentClientRequest,Magic Number,The method contains a magic number: 2,3241
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetPersistentClientRequest,Magic Number,The method contains a magic number: 200,3241
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetPersistentClientRequest,Magic Number,The method contains a magic number: 200,3241
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetPersistentClientRequest,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@493360f9,3241
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetPersistentClientResponse,Magic Number,The method contains a magic number: 2,3342
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetPersistentClientResponse,Magic Number,The method contains a magic number: 200,3342
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetPersistentClientResponse,Magic Number,The method contains a magic number: 200,3342
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetPersistentClientResponse,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@71cdeddc,3342
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetBeforeResponseReceived,Magic Number,The method contains a magic number: 2,3456
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetBeforeResponseReceived,Magic Number,The method contains a magic number: 200,3456
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetBeforeResponseReceived,Magic Number,The method contains a magic number: 200,3456
vert.x,io.vertx.core.http,Http1xTest,testCloseTheConnectionAfterResetBeforeResponseReceived,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@73a44a01,3456
vert.x,io.vertx.core.http,Http1xTest,testInvalidTrailerInHttpServerRequest,Magic Number,The method contains a magic number: 2000,3580
vert.x,io.vertx.core.http,Http1xTest,testInvalidTrailerInHttpServerRequest,Magic Number,The method contains a magic number: 2,3580
vert.x,io.vertx.core.http,Http1xTest,testInvalidChunkInHttpServerRequest,Magic Number,The method contains a magic number: 2,3594
vert.x,io.vertx.core.http,Http1xTest,testHttpServerRequestDecodeError,Magic Number,The method contains a magic number: 2,3604
vert.x,io.vertx.core.http,Http1xTest,testInvalidChunkInHttpClientResponse,Magic Number,The method contains a magic number: 2,3629
vert.x,io.vertx.core.http,Http1xTest,testInvalidTrailersInHttpClientResponse,Magic Number,The method contains a magic number: 2000,3659
vert.x,io.vertx.core.http,Http1xTest,testInvalidTrailersInHttpClientResponse,Magic Number,The method contains a magic number: 2,3659
vert.x,io.vertx.core.http,Http1xTest,testRequestTimeoutIsNotDelayedAfterResponseIsReceived,Magic Number,The method contains a magic number: 6,3768
vert.x,io.vertx.core.http,Http1xTest,testRequestTimeoutIsNotDelayedAfterResponseIsReceived,Magic Number,The method contains a magic number: 500,3768
vert.x,io.vertx.core.http,Http1xTest,testRequestTimeoutIsNotDelayedAfterResponseIsReceived,Magic Number,The method contains a magic number: 150,3768
vert.x,io.vertx.core.http,Http1xTest,start,Magic Number,The method contains a magic number: 500,3777
vert.x,io.vertx.core.http,Http1xTest,start,Magic Number,The method contains a magic number: 150,3777
vert.x,io.vertx.core.http,Http1xTest,testPerHostPooling,Long Statement,The length of the statement "testPerXXXPooling((i) -> client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost("host" + i).setURI("/somepath")).onSuccess(req -> req.putHeader("key"`"host" + i))`req -> req.getHeader("key"));" is 208.,3802
vert.x,io.vertx.core.http,Http1xTest,testPerPeerPooling,Long Statement,The length of the statement "testPerXXXPooling((i) -> client.request(new RequestOptions().setServer(SocketAddress.inetSocketAddress(DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST)).setPort(8080).setHost("host" + i).setURI("/somepath"))`req -> req.authority().toString());" is 231.,3816
vert.x,io.vertx.core.http,Http1xTest,testPerPeerPooling,Magic Number,The method contains a magic number: 8080,3816
vert.x,io.vertx.core.http,Http1xTest,testPerPeerPoolingWithProxy,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setMaxPoolSize(1).setKeepAlive(true).setPipelining(false).setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT)));" is 227.,3830
vert.x,io.vertx.core.http,Http1xTest,testPerPeerPoolingWithProxy,Long Statement,The length of the statement "testPerXXXPooling((i) -> client.request(new RequestOptions().setPort(80).setHost("host" + i).setURI("/somepath"))`req -> req.authority().toString());" is 149.,3830
vert.x,io.vertx.core.http,Http1xTest,testPerPeerPoolingWithProxy,Magic Number,The method contains a magic number: 80,3830
vert.x,io.vertx.core.http,Http1xTest,testPerXXXPooling,Magic Number,The method contains a magic number: 2,3846
vert.x,io.vertx.core.http,Http1xTest,testPerXXXPooling,Magic Number,The method contains a magic number: 3,3846
vert.x,io.vertx.core.http,Http1xTest,testPerXXXPooling,Magic Number,The method contains a magic number: 5,3846
vert.x,io.vertx.core.http,Http1xTest,testPerXXXPooling,Magic Number,The method contains a magic number: 200,3846
vert.x,io.vertx.core.http,Http1xTest,testSendFileFailsWhenClientClosesConnection,Magic Number,The method contains a magic number: 10,3884
vert.x,io.vertx.core.http,Http1xTest,testSendFileFailsWhenClientClosesConnection,Magic Number,The method contains a magic number: 1024,3884
vert.x,io.vertx.core.http,Http1xTest,testSendFileFailsWhenClientClosesConnection,Magic Number,The method contains a magic number: 1024,3884
vert.x,io.vertx.core.http,Http1xTest,checkEmptyHttpResponse,Magic Number,The method contains a magic number: 4,3908
vert.x,io.vertx.core.http,Http1xTest,checkEmptyHttpResponse,Magic Number,The method contains a magic number: 9,3908
vert.x,io.vertx.core.http,Http1xTest,checkEmptyHttpResponse,Magic Number,The method contains a magic number: 4,3908
vert.x,io.vertx.core.http,Http1xTest,checkEmptyHttpResponse,Magic Number,The method contains a magic number: 20,3908
vert.x,io.vertx.core.http,Http1xTest,testPartialH2CAmbiguousRequest,Magic Number,The method contains a magic number: 1000,3977
vert.x,io.vertx.core.http,Http1xTest,testIdleTimeoutWithPartialH2CRequest,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setIdleTimeout(1));" is 127.,3995
vert.x,io.vertx.core.http,Http1xTest,testTLSDisablesH2CHandlers,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())).connectionHandler(conn -> {" is 138.,4015
vert.x,io.vertx.core.http,Http1xTest,testIdleTimeoutInfiniteSkipOfControlCharactersState,Magic Number,The method contains a magic number: 0xD,4046
vert.x,io.vertx.core.http,Http1xTest,testCompressedResponseWithConnectionCloseAndNoCompressionHeader,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.putHeader("Connection"`"close").send().compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 154.,4067
vert.x,io.vertx.core.http,Http1xTest,testCompressedResponseWithConnectionCloseAndNoCompressionHeader,Magic Number,The method contains a magic number: 2048,4067
vert.x,io.vertx.core.http,Http1xTest,testKeepAliveTimeoutHeader,Magic Number,The method contains a magic number: 30,4088
vert.x,io.vertx.core.http,Http1xTest,testKeepAliveTimeoutHeaderReusePrevious,Magic Number,The method contains a magic number: 30,4099
vert.x,io.vertx.core.http,Http1xTest,testKeepAliveTimeoutHeaderReusePrevious,Magic Number,The method contains a magic number: 2,4099
vert.x,io.vertx.core.http,Http1xTest,testKeepAliveTimeoutHeaderOverwritePrevious,Magic Number,The method contains a magic number: 15,4112
vert.x,io.vertx.core.http,Http1xTest,testKeepAliveTimeoutHeaderOverwritePrevious,Magic Number,The method contains a magic number: 3,4112
vert.x,io.vertx.core.http,Http1xTest,testKeepAliveTimeoutHeaderOverwritePrevious,Magic Number,The method contains a magic number: 30,4112
vert.x,io.vertx.core.http,Http1xTest,testKeepAliveTimeoutHeaderOverwritePrevious,Magic Number,The method contains a magic number: 2,4112
vert.x,io.vertx.core.http,Http1xTest,testPausedHttpServerRequestPauseTheConnectionAtRequestEnd,Magic Number,The method contains a magic number: 20,4129
vert.x,io.vertx.core.http,Http1xTest,testPausedHttpServerRequestPauseTheConnectionAtRequestEnd,Magic Number,The method contains a magic number: 10,4129
vert.x,io.vertx.core.http,Http1xTest,testHttpClientResponsePause,Magic Number,The method contains a magic number: 10,4183
vert.x,io.vertx.core.http,Http1xTest,testPoolLIFOPolicy,Magic Number,The method contains a magic number: 2,4205
vert.x,io.vertx.core.http,Http1xTest,testPoolLIFOPolicy,Magic Number,The method contains a magic number: 3,4205
vert.x,io.vertx.core.http,Http1xTest,testPoolLIFOPolicy,Magic Number,The method contains a magic number: 2,4205
vert.x,io.vertx.core.http,Http1xTest,testPoolLIFOPolicy,Magic Number,The method contains a magic number: 2,4205
vert.x,io.vertx.core.http,Http1xTest,testPoolLIFOPolicy,Magic Number,The method contains a magic number: 2,4205
vert.x,io.vertx.core.http,Http1xTest,testHttpClientResponseThrowsExceptionInHandler,Magic Number,The method contains a magic number: 50,4277
vert.x,io.vertx.core.http,Http1xTest,testConnectionCloseDuringShouldCallHandleExceptionOnlyOnce,Magic Number,The method contains a magic number: 10000,4309
vert.x,io.vertx.core.http,Http1xTest,testConnectionCloseDuringShouldCallHandleExceptionOnlyOnce,Magic Number,The method contains a magic number: 100,4309
vert.x,io.vertx.core.http,Http1xTest,testDeferredRequestEnd,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(PUT)).compose(req -> req.send(expected).andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 229.,4341
vert.x,io.vertx.core.http,Http1xTest,testDeferredRequestEnd,Magic Number,The method contains a magic number: 10,4341
vert.x,io.vertx.core.http,Http1xTest,testDeferredRequestEnd,Magic Number,The method contains a magic number: 1024,4341
vert.x,io.vertx.core.http,Http1xTest,testDeferredRequestEnd,Magic Number,The method contains a magic number: 200,4341
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithResponseSent,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(PUT)).compose(req -> req.send(TestUtils.randomAlphaString(1024)).andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 254.,4368
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithResponseSent,Magic Number,The method contains a magic number: 10,4368
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithResponseSent,Magic Number,The method contains a magic number: 2,4368
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithResponseSent,Magic Number,The method contains a magic number: 1000,4368
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithResponseSent,Magic Number,The method contains a magic number: 1024,4368
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithResponseSent,Magic Number,The method contains a magic number: 200,4368
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithPendingResponse,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(PUT)).compose(req -> req.send(TestUtils.randomAlphaString(1024)).andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 254.,4410
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithPendingResponse,Magic Number,The method contains a magic number: 10,4410
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithPendingResponse,Magic Number,The method contains a magic number: 100,4410
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithPendingResponse,Magic Number,The method contains a magic number: 1024,4410
vert.x,io.vertx.core.http,Http1xTest,testPipelinedWithPendingResponse,Magic Number,The method contains a magic number: 200,4410
vert.x,io.vertx.core.http,Http1xTest,testPipelinedPostRequestStartedByResponseSent,Magic Number,The method contains a magic number: 1024,4445
vert.x,io.vertx.core.http,Http1xTest,testPipelinedPostRequestStartedByResponseSent,Magic Number,The method contains a magic number: 1024,4445
vert.x,io.vertx.core.http,Http1xTest,testPipelinedPostRequestStartedByResponseSent,Magic Number,The method contains a magic number: 500,4445
vert.x,io.vertx.core.http,Http1xTest,testPipelinedPostRequestStartedByResponseSent,Magic Number,The method contains a magic number: 1024,4445
vert.x,io.vertx.core.http,Http1xTest,testBeginPipelinedRequestByResponseSentOnRequestCompletion,Magic Number,The method contains a magic number: 100,4494
vert.x,io.vertx.core.http,Http1xTest,testBeginPipelinedRequestByResponseSentOnRequestCompletion,Magic Number,The method contains a magic number: 1024,4494
vert.x,io.vertx.core.http,Http1xTest,testBeginPipelinedRequestByResponseSentBeforeRequestCompletion,Magic Number,The method contains a magic number: 100,4521
vert.x,io.vertx.core.http,Http1xTest,testBeginPipelinedRequestByResponseSentBeforeRequestCompletion,Magic Number,The method contains a magic number: 100,4521
vert.x,io.vertx.core.http,Http1xTest,testBeginPipelinedRequestByResponseSentBeforeRequestCompletion,Magic Number,The method contains a magic number: 1024,4521
vert.x,io.vertx.core.http,Http1xTest,testPipeliningQueueDelayed,Magic Number,The method contains a magic number: 3,4550
vert.x,io.vertx.core.http,Http1xTest,testPipeliningQueueDelayed,Magic Number,The method contains a magic number: 300,4550
vert.x,io.vertx.core.http,Http1xTest,testSetChunkedToFalse,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.setChunked(false).send().compose(HttpClientResponse::end)).onComplete(onSuccess(v -> testComplete()));" is 152.,4628
vert.x,io.vertx.core.http,Http1xTest,testHttpServerRequestShouldCallExceptionHandlerWhenTheClosedHandlerIsCalled,Magic Number,The method contains a magic number: 1000,4641
vert.x,io.vertx.core.http,Http1xTest,testHttpClientRequestShouldCallExceptionHandlerWhenTheClosedHandlerIsCalled,Magic Number,The method contains a magic number: 1000,4668
vert.x,io.vertx.core.http,Http1xTest,testHeaderNameValidation,Empty catch clause,The method has an empty catch block.,4700
vert.x,io.vertx.core.http,Http1xTest,invalidCharsForHeaders,Long Statement,The length of the statement "return Arrays.asList("\u0000"`"\u0001"`"\u0002"`"\u0003"`"\u0004"`"\u0005"`"\u0006"`"\u0007"`"\u0008"`"\u000b"`"\u000c"`"\u000e"`"\u000f"`"\u0010"`"\u0011"`"\u0012"`"\u0013"`"\u0014"`"\u0015"`"\u0016"`"\u0017"`"\u0018"`"\u0019"`"\u001a"`"\u001b"`"\u001c"`"\u001d"`"\u001e"`"\u001f"`"\u007f");" is 292.,4712
vert.x,io.vertx.core.http,Http1xTest,testHeaderValueValidation,Empty catch clause,The method has an empty catch block.,4723
vert.x,io.vertx.core.http,Http1xTest,testHeaderNameStartsOrEndsWithControlChars,Long Statement,The length of the statement "chars.addAll(Arrays.asList("\""`"("`")"`"`"`"/"`";"`"<"`">"`"="`"?"`"@"`"["`"]"`"\\"`"{"`"}"`"\u0080"`"\u0090"`"\u00a0"`"\u00b0"`"\u00c0"`"\u00d0"`"\u00e0"`"\u00f0"`"\u00ff"));" is 176.,4741
vert.x,io.vertx.core.http,Http1xTest,testHeaderNameStartsOrEndsWithControlChars,Long Statement,The length of the statement "so.write("GET /some/path HTTP/1.1\r\n" + "Host: vertx.io\r\n" + (position ? invalid : "") + "Transfer-encoding"+ (position ? "" : invalid)+ ": chunked\r\n\r\n");" is 161.,4741
vert.x,io.vertx.core.http,Http1xTest,testInvalidHttpResponseHeader,Magic Number,The method contains a magic number: 2,4807
vert.x,io.vertx.core.http,Http1xTest,testClosingVertxCloseSharedServers,Magic Number,The method contains a magic number: 2,4885
vert.x,io.vertx.core.http,Http1xTest,testRandomSharedPortInVerticle,Magic Number,The method contains a magic number: 3,4907
vert.x,io.vertx.core.http,Http1xTest,testRandomSharedPortsInVerticle,Magic Number,The method contains a magic number: 3,4912
vert.x,io.vertx.core.http,Http1xTest,testRandomSharedPortsInVerticle,Magic Number,The method contains a magic number: 2,4912
vert.x,io.vertx.core.http,Http1xTest,testRandomSharedPortsInVerticle,Magic Number,The method contains a magic number: 2,4912
vert.x,io.vertx.core.http,Http1xTest,testRandomPortsInVerticle1,Magic Number,The method contains a magic number: 3,4917
vert.x,io.vertx.core.http,Http1xTest,testRandomPortsInVerticle1,Magic Number,The method contains a magic number: 3,4917
vert.x,io.vertx.core.http,Http1xTest,testRandomPortsInVerticle2,Magic Number,The method contains a magic number: 3,4922
vert.x,io.vertx.core.http,Http1xTest,testRandomPortsInVerticle2,Magic Number,The method contains a magic number: 6,4922
vert.x,io.vertx.core.http,Http1xTest,testHttpServerWithIdleTimeoutSendChunkedFile,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setIdleTimeout(1000).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)).requestHandler(req -> {" is 143.,4967
vert.x,io.vertx.core.http,Http1xTest,testHttpServerWithIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 64,4967
vert.x,io.vertx.core.http,Http1xTest,testHttpServerWithIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 1024,4967
vert.x,io.vertx.core.http,Http1xTest,testHttpServerWithIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 1024,4967
vert.x,io.vertx.core.http,Http1xTest,testHttpServerWithIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 1000,4967
vert.x,io.vertx.core.http,Http1xTest,testHttpServerWithIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 1000,4967
vert.x,io.vertx.core.http,Http1xTest,testSendFilePipelined,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 122.,5004
vert.x,io.vertx.core.http,Http1xTest,testSendFilePipelined,Magic Number,The method contains a magic number: 4,5004
vert.x,io.vertx.core.http,Http1xTest,testSendFilePipelined,Magic Number,The method contains a magic number: 16,5004
vert.x,io.vertx.core.http,Http1xTest,testSendFilePipelined,Magic Number,The method contains a magic number: 1024,5004
vert.x,io.vertx.core.http,Http1xTest,testSendFileWithConnectionCloseHeader,Long Statement,The length of the statement "sendFile("test-send-file.html"`content`false`() -> client.request(requestOptions).map(req -> req.putHeader(HttpHeaders.CONNECTION`"close")));" is 141.,5026
vert.x,io.vertx.core.http,Http1xTest,testSendFileWithConnectionCloseHeader,Magic Number,The method contains a magic number: 1024,5026
vert.x,io.vertx.core.http,Http1xTest,testSendFileWithConnectionCloseHeader,Magic Number,The method contains a magic number: 1024,5026
vert.x,io.vertx.core.http,Http1xTest,testSendFileWithConnectionCloseHeader,Magic Number,The method contains a magic number: 2,5026
vert.x,io.vertx.core.http,Http1xTest,testResponseEndHandlersConnectionClose,Magic Number,The method contains a magic number: 2,5033
vert.x,io.vertx.core.http,Http1xTest,testResponseEndHandlersConnectionClose,Magic Number,The method contains a magic number: 200,5033
vert.x,io.vertx.core.http,Http1xTest,testUnsolicitedHttpResponse,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(body -> complete()));" is 134.,5052
vert.x,io.vertx.core.http,Http1xTest,testUnsolicitedHttpResponse,Magic Number,The method contains a magic number: 2,5052
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionGracefulShutdown,Magic Number,The method contains a magic number: 2,5087
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionGracefulShutdown,Magic Number,The method contains a magic number: 3,5087
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionGracefulShutdown,Magic Number,The method contains a magic number: 3,5087
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionGracefulShutdownWhenRequestCompletedAfterResponse,Magic Number,The method contains a magic number: 2,5125
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionShutdownTimedOut,Magic Number,The method contains a magic number: 3,5153
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionShutdownTimedOut,Magic Number,The method contains a magic number: 2,5153
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionShutdownTimedOut,Magic Number,The method contains a magic number: 500L,5153
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionShutdownTimedOut,Magic Number,The method contains a magic number: 500L,5153
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionShutdownTimedOut,Magic Number,The method contains a magic number: 500L,5153
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionShutdownNow,Magic Number,The method contains a magic number: 2,5189
vert.x,io.vertx.core.http,Http1xTest,testClientConnectionShutdownNow,Magic Number,The method contains a magic number: 2000L,5189
vert.x,io.vertx.core.http,Http1xTest,testClientNetSocketPooling,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(HttpMethod.CONNECT).setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(DEFAULT_TEST_URI)).onComplete(onSuccess(req -> {" is 175.,5211
vert.x,io.vertx.core.http,Http1xTest,testClientNetSocketPooling,Magic Number,The method contains a magic number: 5,5211
vert.x,io.vertx.core.http,Http1xTest,testClientNetSocketPooling,Magic Number,The method contains a magic number: 6,5211
vert.x,io.vertx.core.http,Http1xTest,testClientNetSocketPooling,Magic Number,The method contains a magic number: 200,5211
vert.x,io.vertx.core.http,Http1xTest,testHttpUpgrade,Long Statement,The length of the statement "testHttpConnect(new RequestOptions(requestOptions).setMethod(HttpMethod.GET).addHeader(HttpHeaders.CONNECTION`"UpGrAdE")`101);" is 126.,5246
vert.x,io.vertx.core.http,Http1xTest,testHttpUpgrade,Magic Number,The method contains a magic number: 101,5246
vert.x,io.vertx.core.http,Http1xTest,testServerResponseReset,Magic Number,The method contains a magic number: 2,5251
vert.x,io.vertx.core.http,Http1xTest,testNetSocketUpgradeSuccess,Long Statement,The length of the statement "RequestOptions request=new RequestOptions(requestOptions).setMethod(HttpMethod.GET).addHeader(HttpHeaders.CONNECTION`HttpHeaders.UPGRADE);" is 138.,5276
vert.x,io.vertx.core.http,Http1xTest,testNetSocketUpgradeSuccess,Magic Number,The method contains a magic number: 101,5276
vert.x,io.vertx.core.http,Http1xTest,testClientEventLoopSize,Magic Number,The method contains a magic number: 4,5319
vert.x,io.vertx.core.http,Http1xTest,testClientEventLoopSize,Magic Number,The method contains a magic number: 2,5319
vert.x,io.vertx.core.http,Http1xTest,testClientEventLoopSize,Magic Number,The method contains a magic number: 2,5319
vert.x,io.vertx.core.http,Http1xTest,testClientCloseWaiters,Magic Number,The method contains a magic number: 4,5361
vert.x,io.vertx.core.http,Http1xTest,testShutdown,Magic Number,The method contains a magic number: 4,5393
vert.x,io.vertx.core.http,Http1xTest,testShutdown,Magic Number,The method contains a magic number: 10,5393
vert.x,io.vertx.core.http,Http1xTLSTest,testClearClientRequestOptionsSetSSL,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(4043).setURI(DEFAULT_TEST_URI).setSsl(true);" is 123.,62
vert.x,io.vertx.core.http,Http1xTLSTest,testClearClientRequestOptionsSetSSL,Magic Number,The method contains a magic number: 4043,62
vert.x,io.vertx.core.http,Http1xTLSTest,testSSLClientRequestOptionsSetSSL,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(4043).setURI(DEFAULT_TEST_URI).setSsl(true);" is 123.,69
vert.x,io.vertx.core.http,Http1xTLSTest,testSSLClientRequestOptionsSetSSL,Magic Number,The method contains a magic number: 4043,69
vert.x,io.vertx.core.http,Http1xTLSTest,testClearClientRequestOptionsSetClear,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setHost(DEFAULT_HTTP_HOST).setURI(DEFAULT_TEST_URI).setPort(4043).setSsl(false);" is 124.,76
vert.x,io.vertx.core.http,Http1xTLSTest,testClearClientRequestOptionsSetClear,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).clientSSL(false).serverSSL(false).requestOptions(options).pass();" is 128.,76
vert.x,io.vertx.core.http,Http1xTLSTest,testClearClientRequestOptionsSetClear,Magic Number,The method contains a magic number: 4043,76
vert.x,io.vertx.core.http,Http1xTLSTest,testSSLClientRequestOptionsSetClear,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setHost(DEFAULT_HTTP_HOST).setURI(DEFAULT_TEST_URI).setPort(4043).setSsl(false);" is 124.,83
vert.x,io.vertx.core.http,Http1xTLSTest,testSSLClientRequestOptionsSetClear,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).clientSSL(true).serverSSL(false).requestOptions(options).pass();" is 127.,83
vert.x,io.vertx.core.http,Http1xTLSTest,testSSLClientRequestOptionsSetClear,Magic Number,The method contains a magic number: 4043,83
vert.x,io.vertx.core.http,Http1xTLSTest,testClearClientRequestAbsSetSSL,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).clientSSL(false).requestProvider(c -> c.request(new RequestOptions().setMethod(HttpMethod.POST).setAbsoluteURI(absoluteURI))).pass();" is 196.,92
vert.x,io.vertx.core.http,Http1xTLSTest,testSSLClientRequestAbsSetSSL,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).clientSSL(true).requestProvider(c -> c.request(new RequestOptions().setMethod(HttpMethod.POST).setAbsoluteURI(absoluteURI))).pass();" is 195.,99
vert.x,io.vertx.core.http,Http1xTLSTest,testClearClientRequestAbsSetClear,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).clientSSL(false).serverSSL(false).requestProvider(c -> c.request(new RequestOptions().setMethod(HttpMethod.POST).setAbsoluteURI(absoluteURI))).pass();" is 213.,106
vert.x,io.vertx.core.http,Http1xTLSTest,testSSLClientRequestAbsSetClear,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).clientSSL(true).serverSSL(false).requestProvider(c -> c.request(new RequestOptions().setMethod(HttpMethod.POST).setAbsoluteURI(absoluteURI))).pass();" is 212.,113
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectToSSL,Long Statement,The length of the statement "HttpServer redirectServer=vertx.createHttpServer(new HttpServerOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT)).requestHandler(req -> {" is 151.,122
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectToSSL,Long Statement,The length of the statement "req.response().setStatusCode(303).putHeader("location"`"https://" + DEFAULT_HTTP_HOST + ":4043/"+ DEFAULT_TEST_URI).end();" is 122.,122
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectToSSL,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setHost(DEFAULT_HTTP_HOST).setURI(DEFAULT_TEST_URI).setPort(DEFAULT_HTTP_PORT);" is 123.,122
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectToSSL,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).clientSSL(false).serverSSL(true).requestOptions(options).followRedirects(true).pass();" is 149.,122
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectToSSL,Magic Number,The method contains a magic number: 303,122
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectFromSSL,Long Statement,The length of the statement "HttpServer redirectServer=vertx.createHttpServer(new HttpServerOptions().setSsl(true).setKeyStoreOptions(Cert.SERVER_JKS.get()).setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT)).requestHandler(req -> {" is 206.,144
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectFromSSL,Long Statement,The length of the statement "req.response().setStatusCode(303).putHeader("location"`"http://" + DEFAULT_HTTP_HOST + ":4043/"+ DEFAULT_TEST_URI).end();" is 121.,144
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectFromSSL,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setHost(DEFAULT_HTTP_HOST).setURI(DEFAULT_TEST_URI).setPort(4043).setSsl(false);" is 124.,144
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectFromSSL,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.NONE`Trust.NONE).clientSSL(true).serverSSL(false).requestOptions(options).followRedirects(true).pass();" is 143.,144
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectFromSSL,Magic Number,The method contains a magic number: 303,144
vert.x,io.vertx.core.http,Http1xTLSTest,testRedirectFromSSL,Magic Number,The method contains a magic number: 4043,144
vert.x,io.vertx.core.http,Http1xTLSTest,testAppendToHttpChunks,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setSsl(true).setKeyStoreOptions(Cert.SERVER_JKS.get()).setHost(DEFAULT_HTTPS_HOST).setPort(DEFAULT_HTTPS_PORT)).requestHandler(req -> {" is 189.,168
vert.x,io.vertx.core.http,Http1xTLSTest,testSharedServer,Long Statement,The length of the statement "HttpClientOptions options=new HttpClientOptions().setEnabledSecureTransportProtocols(Collections.singleton("TLSv1.2")).setMaxPoolSize(num).setSsl(true).setTrustAll(true);" is 170.,199
vert.x,io.vertx.core.http,Http1xTLSTest,testSharedServer,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setSsl(true).setKeyStoreOptions(Cert.SERVER_JKS.get()).setHost(DEFAULT_HTTPS_HOST).setPort(DEFAULT_HTTPS_PORT)).requestHandler(req -> {" is 189.,199
vert.x,io.vertx.core.http,Http1xTLSTest,start,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setSsl(true).setKeyStoreOptions(Cert.SERVER_JKS.get()).setHost(DEFAULT_HTTPS_HOST).setPort(DEFAULT_HTTPS_PORT)).requestHandler(req -> {" is 189.,220
vert.x,io.vertx.core.http,Http2ClientTest,testClientSettings,Magic Number,The method contains a magic number: 2,77
vert.x,io.vertx.core.http,Http2ClientTest,testClientSettings,Magic Number,The method contains a magic number: 7,77
vert.x,io.vertx.core.http,Http2ClientTest,testClientSettings,Magic Number,The method contains a magic number: 7,77
vert.x,io.vertx.core.http,Http2ClientTest,testClientSettings,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@10289620,77
vert.x,io.vertx.core.http,Http2ClientTest,testInvalidSettings,Empty catch clause,The method has an empty catch block.,140
vert.x,io.vertx.core.http,Http2ClientTest,testInvalidSettings,Empty catch clause,The method has an empty catch block.,140
vert.x,io.vertx.core.http,Http2ClientTest,testInvalidSettings,Magic Number,The method contains a magic number: 7,140
vert.x,io.vertx.core.http,Http2ClientTest,testServerSettings,Magic Number,The method contains a magic number: 2,159
vert.x,io.vertx.core.http,Http2ClientTest,testServerSettings,Magic Number,The method contains a magic number: 7,159
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setInitialSettings(new Http2Settings().setMaxConcurrentStreams(10)));" is 125.,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 10,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 5,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 10,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 30,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 10,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 2,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 10,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 5,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 10,195
vert.x,io.vertx.core.http,Http2ClientTest,testReduceMaxConcurrentStreams,Magic Number,The method contains a magic number: 5,195
vert.x,io.vertx.core.http,Http2ClientTest,testGet,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,237
vert.x,io.vertx.core.http,Http2ClientTest,testGet,Long Statement,The length of the statement "@Override public void onGoAwayRead( ChannelHandlerContext ctx` int lastStreamId` long errorCode` ByteBuf debugData) throws Http2Exception {" is 139.,237
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,240
vert.x,io.vertx.core.http,Http2ClientTest,testHeaders,Long Statement,The length of the statement "assertEquals(new HashSet<>(Arrays.asList("foo_request"`"bar_request"`"juu_request"))`new HashSet<>(req.headers().names()));" is 123.,273
vert.x,io.vertx.core.http,Http2ClientTest,testHeaders,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTPS_PORT).setHost(DEFAULT_HTTPS_HOST).setURI("/somepath")).onComplete(onSuccess(req -> {" is 142.,273
vert.x,io.vertx.core.http,Http2ClientTest,testHeaders,Long Statement,The length of the statement "req.putHeader("Foo_request"`"foo_request_value").putHeader("bar_request"`"bar_request_value").putHeader("juu_request"`Arrays.<String>asList("juu_request_value_1"`"juu_request_value_2"));" is 186.,273
vert.x,io.vertx.core.http,Http2ClientTest,testHeaders,Long Statement,The length of the statement "assertEquals(new HashSet<>(Arrays.asList("content-type"`"content-length"`"foo_response"`"bar_response"`"juu_response"))`new HashSet<>(resp.headers().names()));" is 159.,273
vert.x,io.vertx.core.http,Http2ClientTest,testHeaders,Magic Number,The method contains a magic number: 2,273
vert.x,io.vertx.core.http,Http2ClientTest,testHeaders,Magic Number,The method contains a magic number: 200,273
vert.x,io.vertx.core.http,Http2ClientTest,testHeaders,Magic Number,The method contains a magic number: 2,273
vert.x,io.vertx.core.http,Http2ClientTest,testResponseBody,Magic Number,The method contains a magic number: 100,330
vert.x,io.vertx.core.http,Http2ClientTest,testOverrideAuthority,Long Statement,The length of the statement "client.request(new RequestOptions().setServer(testAddress).setPort(4444).setHost("localhost")).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> testComplete()));" is 174.,364
vert.x,io.vertx.core.http,Http2ClientTest,testOverrideAuthority,Magic Number,The method contains a magic number: 4444,364
vert.x,io.vertx.core.http,Http2ClientTest,testOverrideAuthority,Magic Number,The method contains a magic number: 4444,364
vert.x,io.vertx.core.http,Http2ClientTest,testTrailers,Magic Number,The method contains a magic number: 2,381
vert.x,io.vertx.core.http,Http2ClientTest,testBodyEndHandler,Magic Number,The method contains a magic number: 128,411
vert.x,io.vertx.core.http,Http2ClientTest,testBodyEndHandler,Magic Number,The method contains a magic number: 1024,411
vert.x,io.vertx.core.http,Http2ClientTest,testPost,Magic Number,The method contains a magic number: 100,434
vert.x,io.vertx.core.http,Http2ClientTest,testClientRequestWriteability,Magic Number,The method contains a magic number: 100,474
vert.x,io.vertx.core.http,Http2ClientTest,testClientResponsePauseResume,Magic Number,The method contains a magic number: 1024,541
vert.x,io.vertx.core.http,Http2ClientTest,testQueueingRequests,Magic Number,The method contains a magic number: 100,595
vert.x,io.vertx.core.http,Http2ClientTest,testQueueingRequestsMaxConcurrentStream,Magic Number,The method contains a magic number: 100,600
vert.x,io.vertx.core.http,Http2ClientTest,testQueueingRequestsMaxConcurrentStream,Magic Number,The method contains a magic number: 10L,600
vert.x,io.vertx.core.http,Http2ClientTest,testQueueingRequests,Magic Number,The method contains a magic number: 100,605
vert.x,io.vertx.core.http,Http2ClientTest,testQueueingRequests,Magic Number,The method contains a magic number: 0xFFFFFFFFL,605
vert.x,io.vertx.core.http,Http2ClientTest,testReuseConnection,Magic Number,The method contains a magic number: 2,640
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionFailed,Magic Number,The method contains a magic number: 4044,671
vert.x,io.vertx.core.http,Http2ClientTest,testServerResetClientStreamDuringRequest,Magic Number,The method contains a magic number: 1024,700
vert.x,io.vertx.core.http,Http2ClientTest,testServerResetClientStreamDuringRequest,Magic Number,The method contains a magic number: 8,700
vert.x,io.vertx.core.http,Http2ClientTest,testServerResetClientStreamDuringRequest,Magic Number,The method contains a magic number: 8,700
vert.x,io.vertx.core.http,Http2ClientTest,testServerResetClientStreamDuringResponse,Magic Number,The method contains a magic number: 2,726
vert.x,io.vertx.core.http,Http2ClientTest,testServerResetClientStreamDuringResponse,Magic Number,The method contains a magic number: 1024,726
vert.x,io.vertx.core.http,Http2ClientTest,testServerResetClientStreamDuringResponse,Magic Number,The method contains a magic number: 8,726
vert.x,io.vertx.core.http,Http2ClientTest,testServerResetClientStreamDuringResponse,Magic Number,The method contains a magic number: 8,726
vert.x,io.vertx.core.http,Http2ClientTest,testClientResetServerStream,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,780
vert.x,io.vertx.core.http,Http2ClientTest,testClientResetServerStream,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,780
vert.x,io.vertx.core.http,Http2ClientTest,testClientResetServerStream,Magic Number,The method contains a magic number: 4,780
vert.x,io.vertx.core.http,Http2ClientTest,testClientResetServerStream,Magic Number,The method contains a magic number: 10L,780
vert.x,io.vertx.core.http,Http2ClientTest,testClientResetServerStream,Magic Number,The method contains a magic number: 10,780
vert.x,io.vertx.core.http,Http2ClientTest,testClientResetServerStream,Magic Number,The method contains a magic number: 10,780
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,783
vert.x,io.vertx.core.http,Http2ClientTest,onDataRead,Long Parameter List,The method has 5 parameters. ,788
vert.x,io.vertx.core.http,Http2ClientTest,onDataRead,Magic Number,The method contains a magic number: 4,788
vert.x,io.vertx.core.http,Http2ClientTest,onRstStreamRead,Magic Number,The method contains a magic number: 10L,794
vert.x,io.vertx.core.http,Http2ClientTest,testPushPromise,Magic Number,The method contains a magic number: 2,820
vert.x,io.vertx.core.http,Http2ClientTest,testPushPromise,Magic Number,The method contains a magic number: 200,820
vert.x,io.vertx.core.http,Http2ClientTest,testResetPendingPushPromise,Long Statement,The length of the statement "client=vertx.createHttpClient(clientOptions.setInitialSettings(new io.vertx.core.http.Http2Settings().setMaxConcurrentStreams(0L)));" is 132.,897
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionHandler,Magic Number,The method contains a magic number: 2,938
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionHandler,Magic Number,The method contains a magic number: 2,938
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionShutdownInConnectionHandler,Magic Number,The method contains a magic number: 2,967
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionShutdownInConnectionHandler,Magic Number,The method contains a magic number: 2,967
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionShutdownInConnectionHandler,Magic Number,The method contains a magic number: 3,967
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionShutdownInConnectionHandler,Magic Number,The method contains a magic number: 5,967
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionShutdownInConnectionHandler,Magic Number,The method contains a magic number: 2,967
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionShutdownInConnectionHandler,Magic Number,The method contains a magic number: 200,967
vert.x,io.vertx.core.http,Http2ClientTest,testServerShutdownConnection,Long Statement,The length of the statement "assertEquals("Was expecting HttpClosedException instead of " + err.getClass().getName() + " / "+ err.getMessage()`HttpClosedException.class`err.getClass());" is 156.,1014
vert.x,io.vertx.core.http,Http2ClientTest,testServerShutdownConnection,Magic Number,The method contains a magic number: 2,1014
vert.x,io.vertx.core.http,Http2ClientTest,testReceivingGoAwayDiscardsTheConnection,Magic Number,The method contains a magic number: 5000,1038
vert.x,io.vertx.core.http,Http2ClientTest,testReceivingGoAwayDiscardsTheConnection,Magic Number,The method contains a magic number: 2,1038
vert.x,io.vertx.core.http,Http2ClientTest,testReceivingGoAwayDiscardsTheConnection,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@42ce0874,1038
vert.x,io.vertx.core.http,Http2ClientTest,testSendingGoAwayDiscardsTheConnection,Magic Number,The method contains a magic number: 5000,1074
vert.x,io.vertx.core.http,Http2ClientTest,testSendingGoAwayDiscardsTheConnection,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5c73befc,1074
vert.x,io.vertx.core.http,Http2ClientTest,createHttpConnectionHandler,Long Statement,The length of the statement "public Handler( Http2ConnectionDecoder decoder` Http2ConnectionEncoder encoder` io.netty.handler.codec.http2.Http2Settings initialSettings){" is 140.,1107
vert.x,io.vertx.core.http,Http2ClientTest,createHttpConnectionHandler,Long Statement,The length of the statement "@Override protected Handler build( Http2ConnectionDecoder decoder` Http2ConnectionEncoder encoder` io.netty.handler.codec.http2.Http2Settings initialSettings) throws Exception {" is 177.,1107
vert.x,io.vertx.core.http,Http2ClientTest,createH2Server,Long Statement,The length of the statement "SslContext sslContext=SslContextBuilder.forServer(Cert.SERVER_JKS.get().getKeyManagerFactory(vertx)).applicationProtocolConfig(new ApplicationProtocolConfig(ApplicationProtocolConfig.Protocol.ALPN`ApplicationProtocolConfig.SelectorFailureBehavior.NO_ADVERTISE`ApplicationProtocolConfig.SelectedListenerFailureBehavior.ACCEPT`HttpVersion.HTTP_2.alpnName()`HttpVersion.HTTP_1_1.alpnName())).build();" is 397.,1131
vert.x,io.vertx.core.http,Http2ClientTest,initChannel,Long Statement,The length of the statement "SslContext sslContext=SslContextBuilder.forServer(Cert.SERVER_JKS.get().getKeyManagerFactory(vertx)).applicationProtocolConfig(new ApplicationProtocolConfig(ApplicationProtocolConfig.Protocol.ALPN`ApplicationProtocolConfig.SelectorFailureBehavior.NO_ADVERTISE`ApplicationProtocolConfig.SelectedListenerFailureBehavior.ACCEPT`HttpVersion.HTTP_2.alpnName()`HttpVersion.HTTP_1_1.alpnName())).build();" is 397.,1138
vert.x,io.vertx.core.http,Http2ClientTest,createH2CServer,Long Statement,The length of the statement "@Override public void onSettingsRead( ChannelHandlerContext ctx` io.netty.handler.codec.http2.Http2Settings settings) throws Http2Exception {" is 141.,1169
vert.x,io.vertx.core.http,Http2ClientTest,initChannel,Long Statement,The length of the statement "@Override public void onSettingsRead( ChannelHandlerContext ctx` io.netty.handler.codec.http2.Http2Settings settings) throws Http2Exception {" is 141.,1174
vert.x,io.vertx.core.http,Http2ClientTest,testStreamError,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,1218
vert.x,io.vertx.core.http,Http2ClientTest,testStreamError,Long Statement,The length of the statement "ctx.channel().write(BufferInternal.buffer(new byte[]{0x00`0x00`0x12`0x00`0x08`0x00`0x00`0x00`(byte)(streamId & 0xFF)`0x1F`0x68`0x65`0x6c`0x6c`0x6f`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00}).getByteBuf());" is 223.,1218
vert.x,io.vertx.core.http,Http2ClientTest,testStreamError,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(HttpMethod.PUT).setHost(DEFAULT_HTTPS_HOST).setPort(DEFAULT_HTTPS_PORT).setURI(DEFAULT_TEST_URI)).onComplete(onSuccess(req -> {" is 173.,1218
vert.x,io.vertx.core.http,Http2ClientTest,testStreamError,Magic Number,The method contains a magic number: 3,1218
vert.x,io.vertx.core.http,Http2ClientTest,testStreamError,Magic Number,The method contains a magic number: 0xFF,1218
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,1222
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Statement,The length of the statement "ctx.channel().write(BufferInternal.buffer(new byte[]{0x00`0x00`0x12`0x00`0x08`0x00`0x00`0x00`(byte)(streamId & 0xFF)`0x1F`0x68`0x65`0x6c`0x6c`0x6f`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00}).getByteBuf());" is 223.,1222
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Magic Number,The method contains a magic number: 0xFF,1222
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionDecodeError,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,1281
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionDecodeError,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(HttpMethod.PUT).setHost(DEFAULT_HTTPS_HOST).setPort(DEFAULT_HTTPS_PORT).setURI(DEFAULT_TEST_URI)).onComplete(onSuccess(req -> {" is 173.,1281
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionDecodeError,Magic Number,The method contains a magic number: 3,1281
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionDecodeError,Magic Number,The method contains a magic number: 10,1281
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,1285
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Magic Number,The method contains a magic number: 10,1285
vert.x,io.vertx.core.http,Http2ClientTest,testInvalidServerResponse,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,1334
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,1337
vert.x,io.vertx.core.http,Http2ClientTest,testResponseCompression,Magic Number,The method contains a magic number: 1000,1377
vert.x,io.vertx.core.http,Http2ClientTest,test100Continue,Magic Number,The method contains a magic number: 2,1404
vert.x,io.vertx.core.http,Http2ClientTest,test100Continue,Magic Number,The method contains a magic number: 3,1404
vert.x,io.vertx.core.http,Http2ClientTest,test100Continue,Magic Number,The method contains a magic number: 4,1404
vert.x,io.vertx.core.http,Http2ClientTest,testNetSocketConnect,Magic Number,The method contains a magic number: 4,1443
vert.x,io.vertx.core.http,Http2ClientTest,testNetSocketConnect,Magic Number,The method contains a magic number: 2,1443
vert.x,io.vertx.core.http,Http2ClientTest,testNetSocketConnect,Magic Number,The method contains a magic number: 3,1443
vert.x,io.vertx.core.http,Http2ClientTest,testNetSocketConnect,Magic Number,The method contains a magic number: 200,1443
vert.x,io.vertx.core.http,Http2ClientTest,testNetSocketConnect,Magic Number,The method contains a magic number: 2,1443
vert.x,io.vertx.core.http,Http2ClientTest,testNetSocketConnect,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@dd61331,1443
vert.x,io.vertx.core.http,Http2ClientTest,testServerCloseNetSocket,Magic Number,The method contains a magic number: 2,1506
vert.x,io.vertx.core.http,Http2ClientTest,testServerCloseNetSocket,Magic Number,The method contains a magic number: 2,1506
vert.x,io.vertx.core.http,Http2ClientTest,testServerCloseNetSocket,Magic Number,The method contains a magic number: 3,1506
vert.x,io.vertx.core.http,Http2ClientTest,testServerCloseNetSocket,Magic Number,The method contains a magic number: 200,1506
vert.x,io.vertx.core.http,Http2ClientTest,testServerCloseNetSocket,Magic Number,The method contains a magic number: 2,1506
vert.x,io.vertx.core.http,Http2ClientTest,testServerCloseNetSocket,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@591b0d3d,1506
vert.x,io.vertx.core.http,Http2ClientTest,testServerCloseNetSocket,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6b2433c2,1506
vert.x,io.vertx.core.http,Http2ClientTest,testSendHeadersCompletionHandler,Magic Number,The method contains a magic number: 2,1567
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 500,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 500,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 10,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 253,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 12,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 134,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 12,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 134,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 2,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 10,1592
vert.x,io.vertx.core.http,Http2ClientTest,testUnknownFrame,Magic Number,The method contains a magic number: 253,1592
vert.x,io.vertx.core.http,Http2ClientTest,testClearText,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,1651
vert.x,io.vertx.core.http,Http2ClientTest,testClearText,Long Statement,The length of the statement "client=vertx.createHttpClient(clientOptions.setUseAlpn(false).setSsl(false).setHttp2ClearTextUpgrade(withUpgrade).setHttp2ClearTextUpgradeWithPreflightRequest(withPreflightRequest));" is 182.,1651
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,1655
vert.x,io.vertx.core.http,Http2ClientTest,testRejectClearTextUpgrade,Long Statement,The length of the statement "assertTrue("Was not expecting pipeline handler " + entry.getValue().getClass()`entry.getKey().equals("codec") || entry.getKey().equals("handler"));" is 147.,1691
vert.x,io.vertx.core.http,Http2ClientTest,testRejectClearTextUpgrade,Magic Number,The method contains a magic number: 5,1691
vert.x,io.vertx.core.http,Http2ClientTest,testRejectClearTextUpgrade,Magic Number,The method contains a magic number: 5,1691
vert.x,io.vertx.core.http,Http2ClientTest,testRejectClearTextUpgrade,Magic Number,The method contains a magic number: 200,1691
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimeoutClearTextUpgrade,Long Statement,The length of the statement "testIdleTimeout(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTPS_HOST)`clientOptions.setDefaultPort(DEFAULT_HTTP_PORT).setUseAlpn(false).setSsl(false).setHttp2ClearTextUpgrade(true));" is 207.,1764
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimeoutClearTextDirect,Long Statement,The length of the statement "testIdleTimeout(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTPS_HOST)`clientOptions.setDefaultPort(DEFAULT_HTTP_PORT).setUseAlpn(false).setSsl(false).setHttp2ClearTextUpgrade(false));" is 208.,1770
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimeout,Magic Number,The method contains a magic number: 3,1776
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimeout,Magic Number,The method contains a magic number: 2,1776
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimoutNoConnections,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(resp -> {" is 122.,1808
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimoutNoConnections,Magic Number,The method contains a magic number: 4,1808
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimoutNoConnections,Magic Number,The method contains a magic number: 5,1808
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimoutNoConnections,Magic Number,The method contains a magic number: 2,1808
vert.x,io.vertx.core.http,Http2ClientTest,testIdleTimoutNoConnections,Magic Number,The method contains a magic number: 1000,1808
vert.x,io.vertx.core.http,Http2ClientTest,testDisableIdleTimeoutClearTextUpgrade,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setIdleTimeout(2).setProtocolVersion(HttpVersion.HTTP_2).setDefaultPort(8080).setDefaultHost("localhost"));" is 161.,1837
vert.x,io.vertx.core.http,Http2ClientTest,testDisableIdleTimeoutClearTextUpgrade,Long Statement,The length of the statement "client.request(HttpMethod.GET`"/somepath").compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(body1 -> {" is 135.,1837
vert.x,io.vertx.core.http,Http2ClientTest,testDisableIdleTimeoutClearTextUpgrade,Long Statement,The length of the statement "client.request(HttpMethod.GET`"/somepath").compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(body2 -> {" is 135.,1837
vert.x,io.vertx.core.http,Http2ClientTest,testDisableIdleTimeoutClearTextUpgrade,Magic Number,The method contains a magic number: 8080,1837
vert.x,io.vertx.core.http,Http2ClientTest,testDisableIdleTimeoutClearTextUpgrade,Magic Number,The method contains a magic number: 2,1837
vert.x,io.vertx.core.http,Http2ClientTest,testDisableIdleTimeoutClearTextUpgrade,Magic Number,The method contains a magic number: 8080,1837
vert.x,io.vertx.core.http,Http2ClientTest,testDisableIdleTimeoutClearTextUpgrade,Magic Number,The method contains a magic number: 10,1837
vert.x,io.vertx.core.http,Http2ClientTest,testSendPing,Magic Number,The method contains a magic number: 2,1867
vert.x,io.vertx.core.http,Http2ClientTest,testSendPing,Magic Number,The method contains a magic number: 8,1867
vert.x,io.vertx.core.http,Http2ClientTest,testReceivePing,Magic Number,The method contains a magic number: 8,1892
vert.x,io.vertx.core.http,Http2ClientTest,testMaxConcurrencySingleConnection,Magic Number,The method contains a magic number: 5,1913
vert.x,io.vertx.core.http,Http2ClientTest,testMaxConcurrencyMultipleConnections,Magic Number,The method contains a magic number: 2,1918
vert.x,io.vertx.core.http,Http2ClientTest,testMaxConcurrency,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions(clientOptions).setHttp2MaxPoolSize(poolSize).setHttp2MultiplexingLimit(maxConcurrency));" is 140.,1923
vert.x,io.vertx.core.http,Http2ClientTest,testMaxConcurrency,Magic Number,The method contains a magic number: 300,1923
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionWindowSize,Long Statement,The length of the statement "@Override public void onWindowUpdateRead( ChannelHandlerContext ctx` int streamId` int windowSizeIncrement) throws Http2Exception {" is 131.,1975
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1975
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1975
vert.x,io.vertx.core.http,Http2ClientTest,testConnectionWindowSize,Magic Number,The method contains a magic number: 2,1975
vert.x,io.vertx.core.http,Http2ClientTest,onWindowUpdateRead,Magic Number,The method contains a magic number: 65535,1978
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Long Statement,The length of the statement "@Override public void onWindowUpdateRead( ChannelHandlerContext ctx` int streamId` int windowSizeIncrement) throws Http2Exception {" is 131.,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 10000,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 10000,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1993
vert.x,io.vertx.core.http,Http2ClientTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,1993
vert.x,io.vertx.core.http,Http2ClientTest,onWindowUpdateRead,Magic Number,The method contains a magic number: 65535,1996
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriority,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2046
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriority,Long Statement,The length of the statement "encoder.writeHeaders(ctx`streamId`new DefaultHttp2Headers().status("200")`responseStreamPriority.getDependency()`responseStreamPriority.getWeight()`responseStreamPriority.isExclusive()`0`true`ctx.newPromise());" is 210.,2046
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriority,Magic Number,The method contains a magic number: 123,2046
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriority,Magic Number,The method contains a magic number: 45,2046
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriority,Magic Number,The method contains a magic number: 153,2046
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriority,Magic Number,The method contains a magic number: 75,2046
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriority,Magic Number,The method contains a magic number: 2,2046
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2052
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Statement,The length of the statement "encoder.writeHeaders(ctx`streamId`new DefaultHttp2Headers().status("200")`responseStreamPriority.getDependency()`responseStreamPriority.getWeight()`responseStreamPriority.isExclusive()`0`true`ctx.newPromise());" is 210.,2052
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Long Statement,The length of the statement "@Override public void onPriorityRead( ChannelHandlerContext ctx` int streamId` int streamDependency` short weight` boolean exclusive) throws Http2Exception {" is 157.,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Long Statement,The length of the statement "encoder.writeHeaders(ctx`streamId`new DefaultHttp2Headers().status("200")`responseStreamPriority.getDependency()`responseStreamPriority.getWeight()`responseStreamPriority.isExclusive()`0`false`ctx.newPromise());" is 211.,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Long Statement,The length of the statement "encoder.writePriority(ctx`streamId`responseStreamPriority2.getDependency()`responseStreamPriority2.getWeight()`responseStreamPriority2.isExclusive()`ctx.newPromise());" is 167.,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTPS_PORT).setHost(DEFAULT_HTTPS_HOST).setURI("/somepath")).onComplete(onSuccess(req -> {" is 142.,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 123,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 45,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 223,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 145,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 153,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 75,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 253,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 175,2085
vert.x,io.vertx.core.http,Http2ClientTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 5,2085
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2093
vert.x,io.vertx.core.http,Http2ClientTest,onPriorityRead,Long Parameter List,The method has 5 parameters. ,2103
vert.x,io.vertx.core.http,Http2ClientTest,onDataRead,Long Parameter List,The method has 5 parameters. ,2112
vert.x,io.vertx.core.http,Http2ClientTest,onDataRead,Long Statement,The length of the statement "encoder.writeHeaders(ctx`streamId`new DefaultHttp2Headers().status("200")`responseStreamPriority.getDependency()`responseStreamPriority.getWeight()`responseStreamPriority.isExclusive()`0`false`ctx.newPromise());" is 211.,2112
vert.x,io.vertx.core.http,Http2ClientTest,onDataRead,Long Statement,The length of the statement "encoder.writePriority(ctx`streamId`responseStreamPriority2.getDependency()`responseStreamPriority2.getWeight()`responseStreamPriority2.isExclusive()`ctx.newPromise());" is 167.,2112
vert.x,io.vertx.core.http,Http2ClientTest,testClientStreamPriorityNoChange,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2164
vert.x,io.vertx.core.http,Http2ClientTest,testClientStreamPriorityNoChange,Long Statement,The length of the statement "@Override public void onPriorityRead( ChannelHandlerContext ctx` int streamId` int streamDependency` short weight` boolean exclusive) throws Http2Exception {" is 157.,2164
vert.x,io.vertx.core.http,Http2ClientTest,testClientStreamPriorityNoChange,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,2164
vert.x,io.vertx.core.http,Http2ClientTest,testClientStreamPriorityNoChange,Long Statement,The length of the statement "client.request(new RequestOptions().setHost(DEFAULT_HTTPS_HOST).setPort(DEFAULT_HTTPS_PORT).setURI("/somepath")).onComplete(onSuccess(req -> {" is 142.,2164
vert.x,io.vertx.core.http,Http2ClientTest,testClientStreamPriorityNoChange,Magic Number,The method contains a magic number: 123,2164
vert.x,io.vertx.core.http,Http2ClientTest,testClientStreamPriorityNoChange,Magic Number,The method contains a magic number: 45,2164
vert.x,io.vertx.core.http,Http2ClientTest,testClientStreamPriorityNoChange,Magic Number,The method contains a magic number: 2,2164
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2171
vert.x,io.vertx.core.http,Http2ClientTest,onPriorityRead,Long Parameter List,The method has 5 parameters. ,2183
vert.x,io.vertx.core.http,Http2ClientTest,onDataRead,Long Parameter List,The method has 5 parameters. ,2187
vert.x,io.vertx.core.http,Http2ClientTest,testServerStreamPriorityNoChange,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2222
vert.x,io.vertx.core.http,Http2ClientTest,testServerStreamPriorityNoChange,Long Statement,The length of the statement "encoder.writeHeaders(ctx`streamId`new DefaultHttp2Headers().status("200")`streamPriority.getDependency()`streamPriority.getWeight()`streamPriority.isExclusive()`0`false`ctx.newPromise());" is 187.,2222
vert.x,io.vertx.core.http,Http2ClientTest,testServerStreamPriorityNoChange,Long Statement,The length of the statement "encoder.writePriority(ctx`streamId`streamPriority.getDependency()`streamPriority.getWeight()`streamPriority.isExclusive()`ctx.newPromise());" is 140.,2222
vert.x,io.vertx.core.http,Http2ClientTest,testServerStreamPriorityNoChange,Long Statement,The length of the statement "@Override public void onPriorityRead( ChannelHandlerContext ctx` int streamId` int streamDependency` short weight` boolean exclusive) throws Http2Exception {" is 157.,2222
vert.x,io.vertx.core.http,Http2ClientTest,testServerStreamPriorityNoChange,Magic Number,The method contains a magic number: 123,2222
vert.x,io.vertx.core.http,Http2ClientTest,testServerStreamPriorityNoChange,Magic Number,The method contains a magic number: 45,2222
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2228
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Statement,The length of the statement "encoder.writeHeaders(ctx`streamId`new DefaultHttp2Headers().status("200")`streamPriority.getDependency()`streamPriority.getWeight()`streamPriority.isExclusive()`0`false`ctx.newPromise());" is 187.,2228
vert.x,io.vertx.core.http,Http2ClientTest,onHeadersRead,Long Statement,The length of the statement "encoder.writePriority(ctx`streamId`streamPriority.getDependency()`streamPriority.getWeight()`streamPriority.isExclusive()`ctx.newPromise());" is 140.,2228
vert.x,io.vertx.core.http,Http2ClientTest,onPriorityRead,Long Parameter List,The method has 5 parameters. ,2235
vert.x,io.vertx.core.http,Http2ClientTest,testClearTestDirectServerCloseBeforeSettingsRead,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setProtocolVersion(HttpVersion.HTTP_2).setHttp2ClearTextUpgrade(false));" is 126.,2260
vert.x,io.vertx.core.http,Http2MetricsTest,params,Long Statement,The length of the statement "params.add(new Object[]{Http2TestBase.createHttp2ClientOptions()`Http2TestBase.createHttp2ServerOptions(HttpTestBase.DEFAULT_HTTP_PORT`HttpTestBase.DEFAULT_HTTP_HOST)});" is 169.,26
vert.x,io.vertx.core.http,Http2MetricsTest,params,Long Statement,The length of the statement "params.add(new Object[]{new HttpClientOptions().setProtocolVersion(HttpVersion.HTTP_2).setHttp2ClearTextUpgrade(true)`new HttpServerOptions().setPort(HttpTestBase.DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST)});" is 224.,26
vert.x,io.vertx.core.http,Http2MetricsTest,params,Long Statement,The length of the statement "params.add(new Object[]{new HttpClientOptions().setProtocolVersion(HttpVersion.HTTP_2).setHttp2ClearTextUpgrade(false)`new HttpServerOptions().setPort(HttpTestBase.DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST)});" is 225.,26
vert.x,io.vertx.core.http,Http2MetricsTest,testPushPromise,Magic Number,The method contains a magic number: 2,58
vert.x,io.vertx.core.http,Http2MetricsTest,testPushPromise,Magic Number,The method contains a magic number: 10,58
vert.x,io.vertx.core.http,Http2MetricsTest,testPushPromise,Magic Number,The method contains a magic number: 1000,58
vert.x,io.vertx.core.http,Http2MetricsTest,testPushPromise,Magic Number,The method contains a magic number: 1000,58
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionHandler,Magic Number,The method contains a magic number: 2,260
vert.x,io.vertx.core.http,Http2ServerTest,testServerSettings,Magic Number,The method contains a magic number: 2,309
vert.x,io.vertx.core.http,Http2ServerTest,testServerSettings,Magic Number,The method contains a magic number: 7,309
vert.x,io.vertx.core.http,Http2ServerTest,testServerSettings,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2ae1e404,309
vert.x,io.vertx.core.http,Http2ServerTest,onSettingsRead,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2ae1e404,341
vert.x,io.vertx.core.http,Http2ServerTest,testClientSettings,Magic Number,The method contains a magic number: 7,368
vert.x,io.vertx.core.http,Http2ServerTest,testClientSettings,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@179335f2,368
vert.x,io.vertx.core.http,Http2ServerTest,testGet,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,419
vert.x,io.vertx.core.http,Http2ServerTest,testGet,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,419
vert.x,io.vertx.core.http,Http2ServerTest,testGet,Magic Number,The method contains a magic number: 1000,419
vert.x,io.vertx.core.http,Http2ServerTest,testGet,Magic Number,The method contains a magic number: 2,419
vert.x,io.vertx.core.http,Http2ServerTest,testGet,Magic Number,The method contains a magic number: 2,419
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,458
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Magic Number,The method contains a magic number: 2,458
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,472
vert.x,io.vertx.core.http,Http2ServerTest,testStatusMessage,Magic Number,The method contains a magic number: 404,496
vert.x,io.vertx.core.http,Http2ServerTest,testURI,Long Statement,The length of the statement "Http2Headers headers=new DefaultHttp2Headers().method("GET").scheme("http").authority("whatever.com").path("/some/path?foo=foo_value&bar=bar_value_1&bar=bar_value_2");" is 167.,517
vert.x,io.vertx.core.http,Http2ServerTest,testURI,Magic Number,The method contains a magic number: 2,517
vert.x,io.vertx.core.http,Http2ServerTest,testHeadersEndHandler,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,552
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,572
vert.x,io.vertx.core.http,Http2ServerTest,testPost,Long Statement,The length of the statement "request.encoder.writeHeaders(request.context`id`POST("/").set("content-type"`"text/plain")`0`false`request.context.newPromise());" is 129.,616
vert.x,io.vertx.core.http,Http2ServerTest,testPost,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`((BufferInternal)expectedContent).getByteBuf()`0`true`request.context.newPromise());" is 129.,616
vert.x,io.vertx.core.http,Http2ServerTest,testPost,Magic Number,The method contains a magic number: 1000,616
vert.x,io.vertx.core.http,Http2ServerTest,testPostFileUpload,Long Statement,The length of the statement "String body="--a4e41223-a527-49b6-ac1c-315d76be757e\r\n" + "Content-Disposition: form-data; name=\"file\"; filename=\"tmp-0.txt\"\r\n" + "Content-Type: image/gif; charset=utf-8\r\n"+ "Content-Length: 12\r\n"+ "\r\n"+ "some-content\r\n"+ "--a4e41223-a527-49b6-ac1c-315d76be757e--\r\n";" is 284.,646
vert.x,io.vertx.core.http,Http2ServerTest,testPostFileUpload,Long Statement,The length of the statement "request.encoder.writeHeaders(request.context`id`POST("/form").set("content-type"`contentType).set("content-length"`contentLength)`0`false`request.context.newPromise());" is 168.,646
vert.x,io.vertx.core.http,Http2ServerTest,testPostFileUpload,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`BufferInternal.buffer(body).getByteBuf()`0`true`request.context.newPromise());" is 123.,646
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPauseResume,Long Statement,The length of the statement "request.encoder.writeHeaders(request.context`id`POST("/form").set("content-type"`"text/plain")`0`false`request.context.newPromise());" is 133.,721
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPauseResume,Magic Number,The method contains a magic number: 1000,721
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPauseResume,Magic Number,The method contains a magic number: 100,721
vert.x,io.vertx.core.http,Http2ServerTest,testStreamWritability,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,788
vert.x,io.vertx.core.http,Http2ServerTest,testStreamWritability,Magic Number,The method contains a magic number: 1024,788
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,827
vert.x,io.vertx.core.http,Http2ServerTest,testTrailers,Magic Number,The method contains a magic number: 2,865
vert.x,io.vertx.core.http,Http2ServerTest,testTrailers,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@16e0a0d8,865
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,881
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Magic Number,The method contains a magic number: 2,881
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@16e0a0d8,881
vert.x,io.vertx.core.http,Http2ServerTest,testServerResetClientStream1,Magic Number,The method contains a magic number: 8,918
vert.x,io.vertx.core.http,Http2ServerTest,testServerResetClientStream1,Magic Number,The method contains a magic number: 8,918
vert.x,io.vertx.core.http,Http2ServerTest,testServerResetClientStream2,Magic Number,The method contains a magic number: 8,931
vert.x,io.vertx.core.http,Http2ServerTest,testServerResetClientStream2,Magic Number,The method contains a magic number: 8,931
vert.x,io.vertx.core.http,Http2ServerTest,testServerResetClientStream3,Magic Number,The method contains a magic number: 8,945
vert.x,io.vertx.core.http,Http2ServerTest,testServerResetClientStream3,Magic Number,The method contains a magic number: 8,945
vert.x,io.vertx.core.http,Http2ServerTest,testClientResetServerStream,Magic Number,The method contains a magic number: 10L,982
vert.x,io.vertx.core.http,Http2ServerTest,testClientResetServerStream,Magic Number,The method contains a magic number: 10L,982
vert.x,io.vertx.core.http,Http2ServerTest,testClientResetServerStream,Magic Number,The method contains a magic number: 10,982
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionClose,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,1026
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,1045
vert.x,io.vertx.core.http,Http2ServerTest,testPushPromiseHeaders,Long Statement,The length of the statement "resp.push(HttpMethod.GET`"/wibble"`HttpHeaders.set("foo"`"foo_value").set("bar"`Arrays.<CharSequence>asList("bar_value_1"`"bar_value_2"))).onComplete(handler);" is 159.,1067
vert.x,io.vertx.core.http,Http2ServerTest,testPushPromiseHeaders,Long Statement,The length of the statement "assertEquals(Arrays.asList("bar_value_1"`"bar_value_2")`headers.getAll("bar").stream().map(CharSequence::toString).collect(Collectors.toList()));" is 145.,1067
vert.x,io.vertx.core.http,Http2ServerTest,testPushPromise,Long Statement,The length of the statement "@Override public void onPushPromiseRead( ChannelHandlerContext ctx` int streamId` int promisedStreamId` Http2Headers headers` int padding) throws Http2Exception {" is 162.,1110
vert.x,io.vertx.core.http,Http2ServerTest,testPushPromise,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,1110
vert.x,io.vertx.core.http,Http2ServerTest,onPushPromiseRead,Long Parameter List,The method has 5 parameters. ,1132
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,1137
vert.x,io.vertx.core.http,Http2ServerTest,testResetActivePushPromise,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,1156
vert.x,io.vertx.core.http,Http2ServerTest,testResetActivePushPromise,Magic Number,The method contains a magic number: 8,1156
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,1183
vert.x,io.vertx.core.http,Http2ServerTest,testQueuePushPromise,Long Statement,The length of the statement "@Override public void onPushPromiseRead( ChannelHandlerContext ctx` int streamId` int promisedStreamId` Http2Headers headers` int padding) throws Http2Exception {" is 162.,1195
vert.x,io.vertx.core.http,Http2ServerTest,testQueuePushPromise,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,1195
vert.x,io.vertx.core.http,Http2ServerTest,testQueuePushPromise,Magic Number,The method contains a magic number: 10,1195
vert.x,io.vertx.core.http,Http2ServerTest,testQueuePushPromise,Magic Number,The method contains a magic number: 10,1195
vert.x,io.vertx.core.http,Http2ServerTest,testQueuePushPromise,Magic Number,The method contains a magic number: 3,1195
vert.x,io.vertx.core.http,Http2ServerTest,onPushPromiseRead,Long Parameter List,The method has 5 parameters. ,1225
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,1230
vert.x,io.vertx.core.http,Http2ServerTest,testResetPendingPushPromise,Long Statement,The length of the statement "@Override public void onPushPromiseRead( ChannelHandlerContext ctx` int streamId` int promisedStreamId` Http2Headers headers` int padding) throws Http2Exception {" is 162.,1247
vert.x,io.vertx.core.http,Http2ServerTest,onPushPromiseRead,Long Parameter List,The method has 5 parameters. ,1264
vert.x,io.vertx.core.http,Http2ServerTest,testInvalidAuthority,Long Statement,The length of the statement "testMalformedRequestHeaders(new DefaultHttp2Headers().method("GET").scheme("http").authority("foo@" + DEFAULT_HTTPS_HOST_AND_PORT).path("/"));" is 142.,1290
vert.x,io.vertx.core.http,Http2ServerTest,testInvalidHost,Long Statement,The length of the statement "testMalformedRequestHeaders(new DefaultHttp2Headers().method("GET").scheme("http").authority(DEFAULT_HTTPS_HOST_AND_PORT).path("/").set("host"`"something-else"));" is 162.,1295
vert.x,io.vertx.core.http,Http2ServerTest,testConnectInvalidPath,Long Statement,The length of the statement "testMalformedRequestHeaders(new DefaultHttp2Headers().method("CONNECT").path("/").authority(DEFAULT_HTTPS_HOST_AND_PORT));" is 122.,1300
vert.x,io.vertx.core.http,Http2ServerTest,testConnectInvalidScheme,Long Statement,The length of the statement "testMalformedRequestHeaders(new DefaultHttp2Headers().method("CONNECT").scheme("http").authority(DEFAULT_HTTPS_HOST_AND_PORT));" is 127.,1305
vert.x,io.vertx.core.http,Http2ServerTest,testConnectInvalidAuthority,Long Statement,The length of the statement "testMalformedRequestHeaders(new DefaultHttp2Headers().method("CONNECT").authority("foo@" + DEFAULT_HTTPS_HOST_AND_PORT));" is 121.,1310
vert.x,io.vertx.core.http,Http2ServerTest,testHandlerFailure,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`BufferInternal.buffer("hello").getByteBuf()`0`true`request.context.newPromise());" is 126.,1378
vert.x,io.vertx.core.http,Http2ServerTest,testSendFile,Magic Number,The method contains a magic number: 1000,1411
vert.x,io.vertx.core.http,Http2ServerTest,testSendFile,Magic Number,The method contains a magic number: 1000,1411
vert.x,io.vertx.core.http,Http2ServerTest,testSendFileRange,Magic Number,The method contains a magic number: 1000,1418
vert.x,io.vertx.core.http,Http2ServerTest,testSendFileRange,Magic Number,The method contains a magic number: 1000,1418
vert.x,io.vertx.core.http,Http2ServerTest,testSendFileRange,Magic Number,The method contains a magic number: 200,1418
vert.x,io.vertx.core.http,Http2ServerTest,testSendFileRange,Magic Number,The method contains a magic number: 1000,1418
vert.x,io.vertx.core.http,Http2ServerTest,testSendFileRange,Magic Number,The method contains a magic number: 700,1418
vert.x,io.vertx.core.http,Http2ServerTest,testSendFileRange,Magic Number,The method contains a magic number: 1000,1418
vert.x,io.vertx.core.http,Http2ServerTest,testSendFile,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,1434
vert.x,io.vertx.core.http,Http2ServerTest,testSendFile,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,1434
vert.x,io.vertx.core.http,Http2ServerTest,testSendFile,Magic Number,The method contains a magic number: 2,1434
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,1457
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,1464
vert.x,io.vertx.core.http,Http2ServerTest,testStreamError,Long Statement,The length of the statement "request.channel.write(BufferInternal.buffer(new byte[]{0x00`0x00`0x12`0x00`0x08`0x00`0x00`0x00`(byte)(id & 0xFF)`0x1F`0x68`0x65`0x6c`0x6c`0x6f`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00}).getByteBuf());" is 219.,1481
vert.x,io.vertx.core.http,Http2ServerTest,testStreamError,Magic Number,The method contains a magic number: 2,1481
vert.x,io.vertx.core.http,Http2ServerTest,testStreamError,Magic Number,The method contains a magic number: 0xFF,1481
vert.x,io.vertx.core.http,Http2ServerTest,testPromiseStreamError,Long Statement,The length of the statement "@Override public void onPushPromiseRead( ChannelHandlerContext ctx` int streamId` int promisedStreamId` Http2Headers headers` int padding) throws Http2Exception {" is 162.,1534
vert.x,io.vertx.core.http,Http2ServerTest,testPromiseStreamError,Magic Number,The method contains a magic number: 2,1534
vert.x,io.vertx.core.http,Http2ServerTest,onPushPromiseRead,Long Parameter List,The method has 5 parameters. ,1564
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionDecodeError,Magic Number,The method contains a magic number: 3,1582
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionDecodeError,Magic Number,The method contains a magic number: 10,1582
vert.x,io.vertx.core.http,Http2ServerTest,testServerSendGoAwayNoError,Magic Number,The method contains a magic number: 2,1638
vert.x,io.vertx.core.http,Http2ServerTest,testServerSendGoAwayNoError,Magic Number,The method contains a magic number: 300,1638
vert.x,io.vertx.core.http,Http2ServerTest,testServerSendGoAwayInteralError,Magic Number,The method contains a magic number: 3,1684
vert.x,io.vertx.core.http,Http2ServerTest,testServerSendGoAwayInteralError,Magic Number,The method contains a magic number: 5,1684
vert.x,io.vertx.core.http,Http2ServerTest,testServerSendGoAwayInteralError,Magic Number,The method contains a magic number: 2,1684
vert.x,io.vertx.core.http,Http2ServerTest,testServerSendGoAwayInteralError,Magic Number,The method contains a magic number: 2,1684
vert.x,io.vertx.core.http,Http2ServerTest,testShutdownWithTimeout,Magic Number,The method contains a magic number: 2,1728
vert.x,io.vertx.core.http,Http2ServerTest,testShutdownWithTimeout,Magic Number,The method contains a magic number: 4,1728
vert.x,io.vertx.core.http,Http2ServerTest,testShutdownWithTimeout,Magic Number,The method contains a magic number: 300,1728
vert.x,io.vertx.core.http,Http2ServerTest,testShutdown,Magic Number,The method contains a magic number: 2,1768
vert.x,io.vertx.core.http,Http2ServerTest,testShutdown,Magic Number,The method contains a magic number: 2,1768
vert.x,io.vertx.core.http,Http2ServerTest,testShutdown,Magic Number,The method contains a magic number: 300,1768
vert.x,io.vertx.core.http,Http2ServerTest,testServerSendGoAway,Long Statement,The length of the statement "@Override public void onGoAwayRead( ChannelHandlerContext ctx` int lastStreamId` long errorCode` ByteBuf debugData) throws Http2Exception {" is 139.,1805
vert.x,io.vertx.core.http,Http2ServerTest,testServerClose,Long Statement,The length of the statement "@Override public void onGoAwayRead( ChannelHandlerContext ctx` int lastStreamId` long errorCode` ByteBuf debugData) throws Http2Exception {" is 139.,1831
vert.x,io.vertx.core.http,Http2ServerTest,testServerClose,Magic Number,The method contains a magic number: 2,1831
vert.x,io.vertx.core.http,Http2ServerTest,testClientSendGoAwayNoError,Magic Number,The method contains a magic number: 100,1873
vert.x,io.vertx.core.http,Http2ServerTest,testClientSendGoAwayInternalError,Magic Number,The method contains a magic number: 2,1917
vert.x,io.vertx.core.http,Http2ServerTest,testClientSendGoAwayInternalError,Magic Number,The method contains a magic number: 3,1917
vert.x,io.vertx.core.http,Http2ServerTest,testShutdownOverride,Magic Number,The method contains a magic number: 10000,1959
vert.x,io.vertx.core.http,Http2ServerTest,testShutdownOverride,Magic Number,The method contains a magic number: 300,1959
vert.x,io.vertx.core.http,Http2ServerTest,testShutdownOverride,Magic Number,The method contains a magic number: 300,1959
vert.x,io.vertx.core.http,Http2ServerTest,testShutdownOverride,Magic Number,The method contains a magic number: 1200,1959
vert.x,io.vertx.core.http,Http2ServerTest,testRequestResponseLifecycle,Magic Number,The method contains a magic number: 2,1989
vert.x,io.vertx.core.http,Http2ServerTest,testRequestResponseLifecycle,Magic Number,The method contains a magic number: 100,1989
vert.x,io.vertx.core.http,Http2ServerTest,testRequestResponseLifecycle,Magic Number,The method contains a magic number: 100,1989
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionDisabled,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2044
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionDisabled,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,2044
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionDisabled,Long Statement,The length of the statement "request.encoder.writeHeaders(request.context`id`GET("/").add("accept-encoding"`"gzip")`0`true`request.context.newPromise());" is 124.,2044
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionDisabled,Magic Number,The method contains a magic number: 2,2044
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionDisabled,Magic Number,The method contains a magic number: 1000,2044
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2055
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,2062
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionEnabled,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2080
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionEnabled,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,2080
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionEnabled,Long Statement,The length of the statement "request.encoder.writeHeaders(request.context`id`GET("/").add("accept-encoding"`"gzip")`0`true`request.context.newPromise());" is 124.,2080
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionEnabled,Magic Number,The method contains a magic number: 2,2080
vert.x,io.vertx.core.http,Http2ServerTest,testResponseCompressionEnabled,Magic Number,The method contains a magic number: 1000,2080
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2093
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,2100
vert.x,io.vertx.core.http,Http2ServerTest,testRequestCompressionEnabled,Long Statement,The length of the statement "request.encoder.writeHeaders(request.context`id`POST("/").add("content-encoding"`"gzip")`0`false`request.context.newPromise());" is 127.,2135
vert.x,io.vertx.core.http,Http2ServerTest,testRequestCompressionEnabled,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`BufferInternal.buffer(expectedGzipped).getByteBuf()`0`true`request.context.newPromise());" is 134.,2135
vert.x,io.vertx.core.http,Http2ServerTest,testRequestCompressionEnabled,Magic Number,The method contains a magic number: 1000,2135
vert.x,io.vertx.core.http,Http2ServerTest,test100Continue,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5c103be5,2192
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2199
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5c103be5,2199
vert.x,io.vertx.core.http,Http2ServerTest,test100ContinueRejectedManually,Magic Number,The method contains a magic number: 405,2230
vert.x,io.vertx.core.http,Http2ServerTest,test100ContinueRejectedManually,Magic Number,The method contains a magic number: 100,2230
vert.x,io.vertx.core.http,Http2ServerTest,test100ContinueRejectedManually,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@79f435a7,2230
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2244
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Magic Number,The method contains a magic number: 100,2244
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@79f435a7,2244
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketConnect,Magic Number,The method contains a magic number: 4,2269
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketConnect,Magic Number,The method contains a magic number: 2,2269
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketConnect,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7746a3ce,2269
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2303
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`BufferInternal.buffer("some-data").getByteBuf()`0`false`request.context.newPromise());" is 131.,2303
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,2313
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`BufferInternal.buffer("last-data").getByteBuf()`0`true`request.context.newPromise());" is 130.,2313
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFile,Magic Number,The method contains a magic number: 1000,2339
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFile,Magic Number,The method contains a magic number: 1000,2339
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFileRange,Magic Number,The method contains a magic number: 1000,2347
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFileRange,Magic Number,The method contains a magic number: 1000,2347
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFileRange,Magic Number,The method contains a magic number: 200,2347
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFileRange,Magic Number,The method contains a magic number: 1000,2347
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFileRange,Magic Number,The method contains a magic number: 700,2347
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFileRange,Magic Number,The method contains a magic number: 1000,2347
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFile,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2357
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketSendFile,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,2357
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2370
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,2378
vert.x,io.vertx.core.http,Http2ServerTest,testServerCloseNetSocket,Magic Number,The method contains a magic number: 2,2399
vert.x,io.vertx.core.http,Http2ServerTest,testServerCloseNetSocket,Magic Number,The method contains a magic number: 2,2399
vert.x,io.vertx.core.http,Http2ServerTest,testServerCloseNetSocket,Magic Number,The method contains a magic number: 3,2399
vert.x,io.vertx.core.http,Http2ServerTest,testServerCloseNetSocket,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@64b33b9e,2399
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2438
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`BufferInternal.buffer("some-data").getByteBuf()`0`false`request.context.newPromise());" is 131.,2438
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,2448
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`BufferInternal.buffer("last-data").getByteBuf()`0`true`request.context.newPromise());" is 130.,2448
vert.x,io.vertx.core.http,Http2ServerTest,testNetSocketHandleReset,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2469
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2495
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Long Statement,The length of the statement "@Override public void onUnknownFrame( ChannelHandlerContext ctx` byte frameType` int streamId` Http2Flags flags` ByteBuf payload){" is 130.,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Long Statement,The length of the statement "request.encoder.writeFrame(request.context`(byte)10`id`new Http2Flags((short)253)`((BufferInternal)expectedSend).getByteBuf()`request.context.newPromise());" is 156.,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 500,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 500,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 10,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 253,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 12,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 134,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 12,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 134,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 2,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 10,2522
vert.x,io.vertx.core.http,Http2ServerTest,testUnknownFrame,Magic Number,The method contains a magic number: 253,2522
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2544
vert.x,io.vertx.core.http,Http2ServerTest,onUnknownFrame,Long Parameter List,The method has 5 parameters. ,2551
vert.x,io.vertx.core.http,Http2ServerTest,onUnknownFrame,Magic Number,The method contains a magic number: 12,2551
vert.x,io.vertx.core.http,Http2ServerTest,onUnknownFrame,Magic Number,The method contains a magic number: 134,2551
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,2564
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Magic Number,The method contains a magic number: 2,2564
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextPut,Magic Number,The method contains a magic number: 20,2590
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextWithCompression,Magic Number,The method contains a magic number: 8192,2596
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearText,Long Statement,The length of the statement "server=vertx.createHttpServer(serverOptions.setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setUseAlpn(false).setSsl(false).setInitialSettings(new io.vertx.core.http.Http2Settings().setMaxConcurrentStreams(20000))).connectionHandler(conn -> serverConnectionCount.incrementAndGet());" is 288.,2602
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearText,Long Statement,The length of the statement "client=vertx.createHttpClient(clientOptions.setUseAlpn(false).setSsl(false).setInitialSettings(new io.vertx.core.http.Http2Settings().setMaxConcurrentStreams(10000)));" is 167.,2602
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearText,Magic Number,The method contains a magic number: 20000,2602
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearText,Magic Number,The method contains a magic number: 10000,2602
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearText,Magic Number,The method contains a magic number: 10,2602
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearText,Magic Number,The method contains a magic number: 10000,2602
vert.x,io.vertx.core.http,Http2ServerTest,testPushPromiseClearText,Long Statement,The length of the statement "server=vertx.createHttpServer(serverOptions.setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setUseAlpn(false).setSsl(false));" is 131.,2672
vert.x,io.vertx.core.http,Http2ServerTest,testPushPromiseClearText,Magic Number,The method contains a magic number: 2,2672
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextInvalidConnectionHeader,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI("/somepath")).onComplete(onSuccess(req -> {" is 140.,2706
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextInvalidConnectionHeader,Long Statement,The length of the statement "req.putHeader("Upgrade"`"h2c").putHeader("Connection"`"Upgrade").putHeader("HTTP2-Settings"`"").send().onComplete(handler);" is 123.,2706
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextMalformedSettings,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI("/somepath")).onComplete(onSuccess(req -> {" is 140.,2722
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextMalformedSettings,Long Statement,The length of the statement "req.putHeader("Upgrade"`"h2c").putHeader("Connection"`"Upgrade").putHeader("HTTP2-Settings"`"incorrect-settings").send().onComplete(handler);" is 141.,2722
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextInvalidSettings,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI("/somepath")).onComplete(onSuccess(req -> {" is 140.,2738
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextInvalidSettings,Long Statement,The length of the statement "req.putHeader("Upgrade"`"h2c").putHeader("Connection"`"Upgrade").putHeader("HTTP2-Settings"`s).send().onComplete(handler);" is 122.,2738
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextInvalidSettings,Magic Number,The method contains a magic number: 5,2738
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextInvalidSettings,Magic Number,The method contains a magic number: 0xFFFFFF,2738
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextMissingSettings,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI("/somepath")).onComplete(onSuccess(req -> {" is 140.,2757
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextWorkerContext,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI("/somepath")).onComplete(onSuccess(req -> {" is 140.,2772
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextWorkerContext,Long Statement,The length of the statement "req.putHeader("Upgrade"`"h2c").putHeader("Connection"`"Upgrade").putHeader("HTTP2-Settings"`HttpUtils.encodeSettings(new io.vertx.core.http.Http2Settings())).send().onComplete(handler);" is 185.,2772
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeFailure,Long Statement,The length of the statement "server=vertx.createHttpServer(serverOptions.setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setUseAlpn(false).setSsl(false));" is 131.,2788
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeFailure,Magic Number,The method contains a magic number: 400,2788
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextPartialFailure,Long Statement,The length of the statement "server=vertx.createHttpServer(serverOptions.setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setUseAlpn(false).setSsl(false));" is 131.,2805
vert.x,io.vertx.core.http,Http2ServerTest,testUpgradeToClearTextPartialFailure,Long Statement,The length of the statement "req.putHeader("Upgrade"`"h2c").putHeader("Connection"`"Upgrade`HTTP2-Settings").putHeader("HTTP2-Settings"`HttpUtils.encodeSettings(new io.vertx.core.http.Http2Settings())).setChunked(true);" is 190.,2805
vert.x,io.vertx.core.http,Http2ServerTest,testIdleTimeout,Magic Number,The method contains a magic number: 5,2836
vert.x,io.vertx.core.http,Http2ServerTest,testIdleTimeout,Magic Number,The method contains a magic number: 2000,2836
vert.x,io.vertx.core.http,Http2ServerTest,testSendPing,Magic Number,The method contains a magic number: 2,2874
vert.x,io.vertx.core.http,Http2ServerTest,testSendPing,Magic Number,The method contains a magic number: 8,2874
vert.x,io.vertx.core.http,Http2ServerTest,testReceivePing,Magic Number,The method contains a magic number: 8,2905
vert.x,io.vertx.core.http,Http2ServerTest,testPriorKnowledge,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,2926
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,2954
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionWindowSize,Long Statement,The length of the statement "server=vertx.createHttpServer(createHttp2ServerOptions(DEFAULT_HTTPS_PORT`DEFAULT_HTTPS_HOST).setHttp2ConnectionWindowSize(65535 + 65535));" is 139.,2969
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionWindowSize,Long Statement,The length of the statement "@Override public void onWindowUpdateRead( ChannelHandlerContext ctx` int streamId` int windowSizeIncrement) throws Http2Exception {" is 131.,2969
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2969
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2969
vert.x,io.vertx.core.http,Http2ServerTest,testConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2969
vert.x,io.vertx.core.http,Http2ServerTest,onWindowUpdateRead,Magic Number,The method contains a magic number: 65535,2980
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Long Statement,The length of the statement "@Override public void onWindowUpdateRead( ChannelHandlerContext ctx` int streamId` int windowSizeIncrement) throws Http2Exception {" is 131.,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 10000,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 10000,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2993
vert.x,io.vertx.core.http,Http2ServerTest,testUpdateConnectionWindowSize,Magic Number,The method contains a magic number: 65535,2993
vert.x,io.vertx.core.http,Http2ServerTest,onWindowUpdateRead,Magic Number,The method contains a magic number: 65535,3008
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Long Statement,The length of the statement "request.encoder.writeHeaders(request.context`id`GET("/")`requestStreamPriority.getDependency()`requestStreamPriority.getWeight()`requestStreamPriority.isExclusive()`0`true`request.context.newPromise());" is 202.,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Long Statement,The length of the statement "@Override public void onPriorityRead( ChannelHandlerContext ctx` int streamId` int streamDependency` short weight` boolean exclusive) throws Http2Exception {" is 157.,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Magic Number,The method contains a magic number: 123,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Magic Number,The method contains a magic number: 45,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Magic Number,The method contains a magic number: 153,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Magic Number,The method contains a magic number: 75,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Magic Number,The method contains a magic number: 4,3115
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriority,Magic Number,The method contains a magic number: 200,3115
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,3135
vert.x,io.vertx.core.http,Http2ServerTest,onPriorityRead,Long Parameter List,The method has 5 parameters. ,3146
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,3157
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 123,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 45,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 223,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 145,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 153,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 75,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 253,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 175,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 6,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Magic Number,The method contains a magic number: 200,3172
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityChange,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@39a1fbfe,3172
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,3209
vert.x,io.vertx.core.http,Http2ServerTest,onPriorityRead,Long Parameter List,The method has 5 parameters. ,3222
vert.x,io.vertx.core.http,Http2ServerTest,onPriorityRead,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@39a1fbfe,3222
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,3245
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Long Statement,The length of the statement "request.encoder.writeHeaders(request.context`id`GET("/")`requestStreamPriority.getDependency()`requestStreamPriority.getWeight()`requestStreamPriority.isExclusive()`0`false`request.context.newPromise());" is 203.,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Long Statement,The length of the statement "request.encoder.writePriority(request.context`id`requestStreamPriority.getDependency()`requestStreamPriority.getWeight()`requestStreamPriority.isExclusive()`request.context.newPromise());" is 187.,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Long Statement,The length of the statement "request.encoder.writeData(request.context`id`BufferInternal.buffer("hello").getByteBuf()`0`true`request.context.newPromise());" is 126.,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endStream) throws Http2Exception {" is 210.,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Long Statement,The length of the statement "@Override public void onPriorityRead( ChannelHandlerContext ctx` int streamId` int streamDependency` short weight` boolean exclusive) throws Http2Exception {" is 157.,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Magic Number,The method contains a magic number: 123,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Magic Number,The method contains a magic number: 45,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Magic Number,The method contains a magic number: 153,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Magic Number,The method contains a magic number: 75,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Magic Number,The method contains a magic number: 4,3260
vert.x,io.vertx.core.http,Http2ServerTest,testStreamPriorityNoChange,Magic Number,The method contains a magic number: 200,3260
vert.x,io.vertx.core.http,Http2ServerTest,onHeadersRead,Long Parameter List,The method has 8 parameters. ,3292
vert.x,io.vertx.core.http,Http2ServerTest,onPriorityRead,Long Parameter List,The method has 5 parameters. ,3304
vert.x,io.vertx.core.http,Http2ServerTest,onDataRead,Long Parameter List,The method has 5 parameters. ,3314
vert.x,io.vertx.core.http,Http2SettingsTest,testSettingsMin,Empty catch clause,The method has an empty catch block.,31
vert.x,io.vertx.core.http,Http2SettingsTest,testSettingsMin,Magic Number,The method contains a magic number: 6,31
vert.x,io.vertx.core.http,Http2SettingsTest,testSettingsMin,Magic Number,The method contains a magic number: 6,31
vert.x,io.vertx.core.http,Http2SettingsTest,testSettinsMax,Empty catch clause,The method has an empty catch block.,47
vert.x,io.vertx.core.http,Http2SettingsTest,testSettinsMax,Magic Number,The method contains a magic number: 6,47
vert.x,io.vertx.core.http,Http2SettingsTest,testSettinsMax,Magic Number,The method contains a magic number: 6,47
vert.x,io.vertx.core.http,Http2SettingsTest,toNettySettings,Magic Number,The method contains a magic number: 7,63
vert.x,io.vertx.core.http,Http2SettingsTest,toNettySettings,Magic Number,The method contains a magic number: 0xFFFF,63
vert.x,io.vertx.core.http,Http2SettingsTest,toNettySettings,Magic Number,The method contains a magic number: 0xFFFF,63
vert.x,io.vertx.core.http,Http2SettingsTest,toNettySettings,Magic Number,The method contains a magic number: 0xFFFFFFFFL,63
vert.x,io.vertx.core.http,Http2SettingsTest,toNettySettings,Magic Number,The method contains a magic number: 0xFFFF,63
vert.x,io.vertx.core.http,Http2SettingsTest,toNettySettings,Magic Number,The method contains a magic number: 0xFFFF,63
vert.x,io.vertx.core.http,Http2SettingsTest,testEqualsHashCode,Magic Number,The method contains a magic number: 1024,124
vert.x,io.vertx.core.http,Http2SettingsTest,testEqualsHashCode,Magic Number,The method contains a magic number: 1024,124
vert.x,io.vertx.core.http,Http2SettingsTest,testEqualsHashCode,Magic Number,The method contains a magic number: 2048,124
vert.x,io.vertx.core.http,Http2Test,testServerResponseWriteBufferFromOtherThread,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 186.,63
vert.x,io.vertx.core.http,Http2Test,testServerResponseWriteBufferFromOtherThread,Magic Number,The method contains a magic number: 200,63
vert.x,io.vertx.core.http,Http2Test,testServerResponseEndFromOtherThread,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> testComplete()));" is 198.,82
vert.x,io.vertx.core.http,Http2Test,testServerResponseEndFromOtherThread,Magic Number,The method contains a magic number: 200,82
vert.x,io.vertx.core.http,Http2Test,testServerResponseEndWithTrailersFromOtherThread,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(resp -> resp.end().andThen(onSuccess(v -> {" is 172.,98
vert.x,io.vertx.core.http,Http2Test,testServerResponseEndWithTrailersFromOtherThread,Magic Number,The method contains a magic number: 200,98
vert.x,io.vertx.core.http,Http2Test,testServerResponseResetFromOtherThread,Magic Number,The method contains a magic number: 2,117
vert.x,io.vertx.core.http,Http2Test,testClientRequestWriteFromOtherThread,Magic Number,The method contains a magic number: 200,151
vert.x,io.vertx.core.http,Http2Test,testServerOpenSSL,Long Statement,The length of the statement "HttpServerOptions opts=new HttpServerOptions().setPort(DEFAULT_HTTPS_PORT).setHost(DEFAULT_HTTPS_HOST).setUseAlpn(true).setSsl(true).addEnabledCipherSuite("TLS_RSA_WITH_AES_128_CBC_SHA").setPemKeyCertOptions(Cert.SERVER_PEM.get()).setSslEngineOptions(new OpenSSLEngineOptions());" is 279.,186
vert.x,io.vertx.core.http,Http2Test,testServerOpenSSL,Magic Number,The method contains a magic number: 200,186
vert.x,io.vertx.core.http,Http2Test,testServerStreamPausedWhenConnectionIsPaused,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI("/1")).compose(req -> req.send().compose(HttpClientResponse::end)).onComplete(onSuccess(v -> complete()));" is 163.,213
vert.x,io.vertx.core.http,Http2Test,testServerStreamPausedWhenConnectionIsPaused,Magic Number,The method contains a magic number: 512,213
vert.x,io.vertx.core.http,Http2Test,testServerStreamPausedWhenConnectionIsPaused,Magic Number,The method contains a magic number: 20,213
vert.x,io.vertx.core.http,Http2Test,testClientStreamPausedWhenConnectionIsPaused,Magic Number,The method contains a magic number: 2,266
vert.x,io.vertx.core.http,Http2Test,testClientStreamPausedWhenConnectionIsPaused,Magic Number,The method contains a magic number: 512,266
vert.x,io.vertx.core.http,Http2Test,testClientStreamPausedWhenConnectionIsPaused,Magic Number,The method contains a magic number: 512,266
vert.x,io.vertx.core.http,Http2Test,testResetClientRequestNotYetSent,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setInitialSettings(new Http2Settings().setMaxConcurrentStreams(1)));" is 124.,335
vert.x,io.vertx.core.http,Http2Test,testClientDoesNotSupportAlpn,Magic Number,The method contains a magic number: 2,375
vert.x,io.vertx.core.http,Http2Test,testServerDoesNotSupportAlpn,Magic Number,The method contains a magic number: 2,395
vert.x,io.vertx.core.http,Http2Test,testServePendingRequests,Magic Number,The method contains a magic number: 10,423
vert.x,io.vertx.core.http,Http2Test,testInitialMaxConcurrentStreamZero,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setInitialSettings(new Http2Settings().setMaxConcurrentStreams(0)));" is 124.,448
vert.x,io.vertx.core.http,Http2Test,testInitialMaxConcurrentStreamZero,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setTimeout(10000)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> complete()));" is 144.,448
vert.x,io.vertx.core.http,Http2Test,testInitialMaxConcurrentStreamZero,Magic Number,The method contains a magic number: 2,448
vert.x,io.vertx.core.http,Http2Test,testInitialMaxConcurrentStreamZero,Magic Number,The method contains a magic number: 500,448
vert.x,io.vertx.core.http,Http2Test,testInitialMaxConcurrentStreamZero,Magic Number,The method contains a magic number: 10,448
vert.x,io.vertx.core.http,Http2Test,testInitialMaxConcurrentStreamZero,Magic Number,The method contains a magic number: 10,448
vert.x,io.vertx.core.http,Http2Test,testInitialMaxConcurrentStreamZero,Magic Number,The method contains a magic number: 10000,448
vert.x,io.vertx.core.http,Http2Test,testMaxHaderListSize,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setInitialSettings(new Http2Settings().setMaxHeaderListSize(Integer.MAX_VALUE)));" is 137.,475
vert.x,io.vertx.core.http,Http2Test,testMaxHaderListSize,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setTimeout(10000)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 132.,475
vert.x,io.vertx.core.http,Http2Test,testMaxHaderListSize,Magic Number,The method contains a magic number: 10000,475
vert.x,io.vertx.core.http,Http2Test,testContentLengthNotRequired,Magic Number,The method contains a magic number: 2,492
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependency,Long Statement,The length of the statement "req.response().setStreamPriority(new StreamPriority().setDependency(responseStreamDependency).setWeight(responseStreamWeight).setExclusive(false));" is 147.,515
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependency,Long Statement,The length of the statement "req.setStreamPriority(new StreamPriority().setDependency(requestStreamDependency).setWeight(requestStreamWeight).setExclusive(false)).send().onComplete(onSuccess(resp -> {" is 171.,515
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependency,Magic Number,The method contains a magic number: 56,515
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependency,Magic Number,The method contains a magic number: 43,515
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependency,Magic Number,The method contains a magic number: 98,515
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependency,Magic Number,The method contains a magic number: 55,515
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependency,Magic Number,The method contains a magic number: 2,515
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Long Statement,The length of the statement "req.response().setStreamPriority(new StreamPriority().setDependency(responseStreamDependency).setWeight(responseStreamWeight).setExclusive(false));" is 147.,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Long Statement,The length of the statement "req.response().setStreamPriority(new StreamPriority().setDependency(responseStreamDependency2).setWeight(responseStreamWeight2).setExclusive(false));" is 149.,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Long Statement,The length of the statement "req.setStreamPriority(new StreamPriority().setDependency(requestStreamDependency).setWeight(requestStreamWeight).setExclusive(false)).response().onComplete(onSuccess(resp -> {" is 175.,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Long Statement,The length of the statement "req.setStreamPriority(new StreamPriority().setDependency(requestStreamDependency2).setWeight(requestStreamWeight2).setExclusive(false));" is 136.,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 56,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 43,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 157,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 143,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 98,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 55,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 198,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 155,550
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyChange,Magic Number,The method contains a magic number: 4,550
vert.x,io.vertx.core.http,Http2Test,testServerStreamPriorityNoChange,Magic Number,The method contains a magic number: 56,619
vert.x,io.vertx.core.http,Http2Test,testServerStreamPriorityNoChange,Magic Number,The method contains a magic number: 43,619
vert.x,io.vertx.core.http,Http2Test,testServerStreamPriorityNoChange,Magic Number,The method contains a magic number: 2,619
vert.x,io.vertx.core.http,Http2Test,testClientStreamPriorityNoChange,Long Statement,The length of the statement "req.response().setStreamPriority(new StreamPriority().setDependency(dependency).setWeight(weight).setExclusive(exclusive));" is 123.,664
vert.x,io.vertx.core.http,Http2Test,testClientStreamPriorityNoChange,Long Statement,The length of the statement "req.response().setStreamPriority(new StreamPriority().setDependency(dependency).setWeight(weight).setExclusive(exclusive));" is 123.,664
vert.x,io.vertx.core.http,Http2Test,testClientStreamPriorityNoChange,Magic Number,The method contains a magic number: 98,664
vert.x,io.vertx.core.http,Http2Test,testClientStreamPriorityNoChange,Magic Number,The method contains a magic number: 55,664
vert.x,io.vertx.core.http,Http2Test,testClientStreamPriorityNoChange,Magic Number,The method contains a magic number: 2,664
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyInheritance,Long Statement,The length of the statement "req.setStreamPriority(new StreamPriority().setDependency(requestStreamDependency).setWeight(requestStreamWeight).setExclusive(false)).send().onComplete(onSuccess(resp -> {" is 171.,706
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyInheritance,Magic Number,The method contains a magic number: 86,706
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyInheritance,Magic Number,The method contains a magic number: 53,706
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyInheritance,Magic Number,The method contains a magic number: 2,706
vert.x,io.vertx.core.http,Http2Test,testDefaultStreamWeightAndDependency,Magic Number,The method contains a magic number: 2,736
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyPushPromise,Long Statement,The length of the statement "pushedResp.setStreamPriority(new StreamPriority().setDependency(pushStreamDependency).setWeight(pushStreamWeight).setExclusive(false));" is 135.,760
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyPushPromise,Magic Number,The method contains a magic number: 456,760
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyPushPromise,Magic Number,The method contains a magic number: 14,760
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyPushPromise,Magic Number,The method contains a magic number: 4,760
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyInheritancePushPromise,Long Statement,The length of the statement ").setStreamPriority(new StreamPriority().setDependency(reqStreamDependency).setWeight(reqStreamWeight).setExclusive(false)).send().onComplete(onSuccess(resp -> {" is 161.,796
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyInheritancePushPromise,Magic Number,The method contains a magic number: 556,796
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyInheritancePushPromise,Magic Number,The method contains a magic number: 84,796
vert.x,io.vertx.core.http,Http2Test,testStreamWeightAndDependencyInheritancePushPromise,Magic Number,The method contains a magic number: 4,796
vert.x,io.vertx.core.http,Http2Test,testClearTextUpgradeWithBody,Magic Number,The method contains a magic number: 2,831
vert.x,io.vertx.core.http,Http2Test,testClearTextUpgradeWithBody,Magic Number,The method contains a magic number: 1000,831
vert.x,io.vertx.core.http,Http2Test,testClearTextUpgradeWithBodyTooLongFrameResponse,Magic Number,The method contains a magic number: 1024,863
vert.x,io.vertx.core.http,Http2Test,testSslHandshakeTimeout,Long Statement,The length of the statement "HttpServerOptions opts=createBaseServerOptions().setSslHandshakeTimeout(1234).setSslHandshakeTimeoutUnit(TimeUnit.MILLISECONDS);" is 128.,889
vert.x,io.vertx.core.http,Http2Test,testSslHandshakeTimeout,Long Statement,The length of the statement "vertx.createNetClient().connect(DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST).onFailure(this::fail).onSuccess(so -> so.closeHandler(u -> complete()));" is 141.,889
vert.x,io.vertx.core.http,Http2Test,testSslHandshakeTimeout,Magic Number,The method contains a magic number: 2,889
vert.x,io.vertx.core.http,Http2Test,testSslHandshakeTimeout,Magic Number,The method contains a magic number: 1234,889
vert.x,io.vertx.core.http,Http2Test,testAppendToHttpChunks,Long Statement,The length of the statement "assertEquals(Stream.concat(expected.stream()`Stream.of("")).map(s -> s + "-suffix").collect(Collectors.toList())`chunks);" is 121.,911
vert.x,io.vertx.core.http,Http2Test,testNonUpgradedH2CConnectionIsEvictedFromThePool,Long Statement,The length of the statement "client.request(requestOptions).compose(req2 -> req2.send().compose(HttpClientResponse::body)).onComplete(onSuccess(b2 -> {" is 122.,939
vert.x,io.vertx.core.http,Http2Test,testConnectionCloseEvictsConnectionFromThePoolBeforeStreamsAreClosed,Long Statement,The length of the statement "Future<Buffer> f1=client.request(new RequestOptions(requestOptions).setURI("/1")).compose(req -> req.send().compose(HttpClientResponse::body));" is 143.,980
vert.x,io.vertx.core.http,Http2Test,testConnectionCloseEvictsConnectionFromThePoolBeforeStreamsAreClosed,Magic Number,The method contains a magic number: 2,980
vert.x,io.vertx.core.http,Http2TestBase,createHttp2ServerOptions,Long Statement,The length of the statement "return new HttpServerOptions().setPort(port).setHost(host).setSslEngineOptions(new JdkSSLEngineOptions()).setUseAlpn(true).setSsl(true).addEnabledCipherSuite("TLS_RSA_WITH_AES_128_CBC_SHA").setKeyStoreOptions(Cert.SERVER_JKS.get());" is 232.,28
vert.x,io.vertx.core.http,Http2TestBase,createHttp2ClientOptions,Long Statement,The length of the statement "return new HttpClientOptions().setSslEngineOptions(new JdkSSLEngineOptions()).setUseAlpn(true).setSsl(true).setTrustStoreOptions(Trust.SERVER_JKS.get()).setProtocolVersion(HttpVersion.HTTP_2);" is 192.,39
vert.x,io.vertx.core.http,Http2TestBase,tearDown,Magic Number,The method contains a magic number: 10,60
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,data,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{1.1`http1ServerFactory`http1ClientFactory}`{2.0`http2ServerFactory`http2ClientFactory}});" is 126.,51
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,sendFileIsThrottled,Long Statement,The length of the statement "testClient.request(HttpMethod.GET`testServer.actualPort()`DEFAULT_HTTP_HOST`"/get-file").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 244.,106
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,sendFileIsThrottled,Magic Number,The method contains a magic number: 200,106
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,testSendFileTrafficShapedWithSharedServers,Long Statement,The length of the statement "testServer.requestHandler(HANDLERS.getFile(sampleF)).listen(DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST).<Void>mapEmpty().onComplete(startPromise);" is 139.,163
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,testSendFileTrafficShapedWithSharedServers,Long Statement,The length of the statement "testClient.request(HttpMethod.GET`DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST`"/get-file").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 238.,163
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,testSendFileTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 2,163
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,testSendFileTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 2,163
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,testSendFileTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 2,163
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,testSendFileTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 200,163
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,start,Long Statement,The length of the statement "testServer.requestHandler(HANDLERS.getFile(sampleF)).listen(DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST).<Void>mapEmpty().onComplete(startPromise);" is 139.,167
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,expectedTimeMillis,Magic Number,The method contains a magic number: 0.5,200
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,read,Long Statement,The length of the statement "client.request(HttpMethod.GET`server.actualPort()`DEFAULT_HTTP_HOST`"/buffer-read").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 239.,212
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,read,Magic Number,The method contains a magic number: 200,212
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,write,Long Statement,The length of the statement "client.request(HttpMethod.POST`server.actualPort()`DEFAULT_HTTP_HOST`"/buffer-write").compose(req -> req.putHeader(HttpHeaderNames.CONTENT_LENGTH`String.valueOf(buffer.length())).end(buffer));" is 192.,222
vert.x,io.vertx.core.http,HttpBandwidthLimitingTest,upload,Long Statement,The length of the statement "client.request(HttpMethod.PUT`server.actualPort()`DEFAULT_HTTP_HOST`"/upload-file").compose(req -> req.putHeader(HttpHeaderNames.CONTENT_LENGTH`String.valueOf(expected.length())).putHeader(HttpHeaderNames.CONTENT_TYPE`"application/binary").end(b));" is 248.,228
vert.x,io.vertx.core.http,HttpClientConnectionTest,testGet,Long Statement,The length of the statement "stream.writeHead(new HttpRequestHead(HttpMethod.GET`"/"`MultiMap.caseInsensitiveMultiMap()`"localhost:8080"`""`null)`false`Unpooled.EMPTY_BUFFER`true`new StreamPriority()`false);" is 178.,45
vert.x,io.vertx.core.http,HttpClientConnectionTest,testGet,Magic Number,The method contains a magic number: 3,45
vert.x,io.vertx.core.http,HttpClientConnectionTest,testGet,Magic Number,The method contains a magic number: 200,45
vert.x,io.vertx.core.http,HttpClientConnectionTest,testConnectionClose,Long Statement,The length of the statement "stream.writeHead(new HttpRequestHead(HttpMethod.GET`"/"`MultiMap.caseInsensitiveMultiMap()`"localhost:8080"`""`null)`false`Unpooled.EMPTY_BUFFER`true`new StreamPriority()`false);" is 178.,74
vert.x,io.vertx.core.http,HttpClientConnectionTest,testConnectionClose,Magic Number,The method contains a magic number: 2,74
vert.x,io.vertx.core.http,HttpCompressionTestBase,testSkipEncoding,Long Statement,The length of the statement "req.response().putHeader(HttpHeaders.CONTENT_ENCODING`HttpHeaders.IDENTITY).end(Buffer.buffer(COMPRESS_TEST_STRING).toString(CharsetUtil.UTF_8));" is 145.,83
vert.x,io.vertx.core.http,HttpCompressionTestBase,testServerDecompression,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(PUT).putHeader(HttpHeaders.CONTENT_ENCODING`encoding())).onComplete(onSuccess(req -> {" is 132.,138
vert.x,io.vertx.core.http,HttpCompressionTestBase,testClientAcceptEncoding,Long Statement,The length of the statement "assertTrue("Expects accept-encoding '" + acceptEncoding + "' to contain "+ encoding()`acceptEncoding.contains(encoding()));" is 123.,184
vert.x,io.vertx.core.http,HttpConnectionEarlyResetTest,setUp,Magic Number,The method contains a magic number: 8080,41
vert.x,io.vertx.core.http,HttpConnectionEarlyResetTest,testExceptionCaught,Magic Number,The method contains a magic number: 8080,59
vert.x,io.vertx.core.http,HttpConnectionEarlyResetTest,testExceptionCaught,Magic Number,The method contains a magic number: 2000,59
vert.x,io.vertx.core.http,HttpMethodTest,testConstants,Long Statement,The length of the statement "for ( HttpMethod method : Arrays.asList(HttpMethod.GET`HttpMethod.POST`HttpMethod.HEAD`HttpMethod.PUT`HttpMethod.CONNECT`HttpMethod.DELETE`HttpMethod.OPTIONS`HttpMethod.PATCH`HttpMethod.TRACE`HttpMethod.PROPFIND`HttpMethod.PROPPATCH`HttpMethod.MKCOL`HttpMethod.COPY`HttpMethod.MOVE`HttpMethod.LOCK`HttpMethod.UNLOCK`HttpMethod.MKCALENDAR`HttpMethod.VERSION_CONTROL`HttpMethod.REPORT`HttpMethod.CHECKOUT`HttpMethod.CHECKIN`HttpMethod.UNCHECKOUT`HttpMethod.MKWORKSPACE`HttpMethod.UPDATE`HttpMethod.LABEL`HttpMethod.MERGE`HttpMethod.BASELINE_CONTROL`HttpMethod.MKACTIVITY`HttpMethod.ORDERPATCH`HttpMethod.ACL`HttpMethod.SEARCH)) {" is 627.,63
vert.x,io.vertx.core.http,HttpMethodTest,testInvalidValueOf,Empty catch clause,The method has an empty catch block.,103
vert.x,io.vertx.core.http,HttpMethodTest,testInvalidValueOf,Empty catch clause,The method has an empty catch block.,103
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Long Method,The method has 106 lines of code.,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(TestUtils.randomAlphaString(16))).onComplete(onSuccess(req -> {" is 160.,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Long Statement,The length of the statement "for ( Iterator<Long> it : Arrays.asList(clientSocketMetric.get().bytesReadEvents.iterator()`serverMetric.get().socket.bytesWrittenEvents.iterator())) {" is 151.,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Magic Number,The method contains a magic number: 10,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Magic Number,The method contains a magic number: 1000,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Magic Number,The method contains a magic number: 16,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Magic Number,The method contains a magic number: 8080,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Magic Number,The method contains a magic number: 8080,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Magic Number,The method contains a magic number: 4096,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpMetricsLifecycle,Magic Number,The method contains a magic number: 4096,68
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpClientLifecycle,Complex Conditional,The conditional expression opts.getProtocolVersion() == HttpVersion.HTTP_2 && !opts.isSsl() && opts.isHttp2ClearTextUpgrade() is complex.,175
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpClientLifecycle,Long Statement,The length of the statement "Future<HttpClientRequest> request=client.request(new RequestOptions().setMethod(HttpMethod.POST).setPort(8080).setHost("localhost").setURI("/somepath")).onComplete(onSuccess(req -> {" is 182.,175
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpClientLifecycle,Magic Number,The method contains a magic number: 1024,175
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpClientLifecycle,Magic Number,The method contains a magic number: 8080,175
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpClientLifecycle,Magic Number,The method contains a magic number: 8080,175
vert.x,io.vertx.core.http,HttpMetricsTestBase,testHttpClientLifecycle,Magic Number,The method contains a magic number: 1024,175
vert.x,io.vertx.core.http,HttpMetricsTestBase,testClientConnectionClosed,Magic Number,The method contains a magic number: 2,256
vert.x,io.vertx.core.http,HttpMetricsTestBase,testServerConnectionClosed,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI(TestUtils.randomAlphaString(16))).onComplete(onSuccess(HttpClientRequest::send));" is 138.,281
vert.x,io.vertx.core.http,HttpMetricsTestBase,testServerConnectionClosed,Magic Number,The method contains a magic number: 2,281
vert.x,io.vertx.core.http,HttpMetricsTestBase,testServerConnectionClosed,Magic Number,The method contains a magic number: 16,281
vert.x,io.vertx.core.http,HttpMetricsTestBase,testRouteMetrics,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI(TestUtils.randomAlphaString(16))).onComplete(onSuccess(HttpClientRequest::send));" is 138.,301
vert.x,io.vertx.core.http,HttpMetricsTestBase,testRouteMetrics,Magic Number,The method contains a magic number: 16,301
vert.x,io.vertx.core.http,HttpMetricsTestBase,testRouteMetricsIgnoredAfterResponseEnd,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI(TestUtils.randomAlphaString(16))).onComplete(onSuccess(HttpClientRequest::send));" is 138.,319
vert.x,io.vertx.core.http,HttpMetricsTestBase,testRouteMetricsIgnoredAfterResponseEnd,Magic Number,The method contains a magic number: 16,319
vert.x,io.vertx.core.http,HttpMetricsTestBase,testResetImmediately,Magic Number,The method contains a magic number: 8080,335
vert.x,io.vertx.core.http,HttpMetricsTestBase,testResetImmediately,Magic Number,The method contains a magic number: 10,335
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadSmallFile,Magic Number,The method contains a magic number: 100,69
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadSmallFileWithContentLength,Magic Number,The method contains a magic number: 100,74
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadMediumFile,Magic Number,The method contains a magic number: 20000,79
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadMediumFileWithContentLength,Magic Number,The method contains a magic number: 20000,84
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFile,Magic Number,The method contains a magic number: 4,89
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFile,Magic Number,The method contains a magic number: 1024,89
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFile,Magic Number,The method contains a magic number: 1024,89
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFileWithContentLength,Magic Number,The method contains a magic number: 4,94
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFileWithContentLength,Magic Number,The method contains a magic number: 1024,94
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFileWithContentLength,Magic Number,The method contains a magic number: 1024,94
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadSmallFileStreamToDisk,Magic Number,The method contains a magic number: 100,104
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadMediumFileStreamToDisk,Magic Number,The method contains a magic number: 20,109
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadMediumFileStreamToDisk,Magic Number,The method contains a magic number: 1024,109
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 4,114
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 1024,114
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 1024,114
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadSmallFile,Magic Number,The method contains a magic number: 100,129
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadMediumFile,Magic Number,The method contains a magic number: 20,134
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadMediumFile,Magic Number,The method contains a magic number: 1024,134
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadLargeFile,Magic Number,The method contains a magic number: 4,139
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadLargeFile,Magic Number,The method contains a magic number: 1024,139
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadLargeFile,Magic Number,The method contains a magic number: 1024,139
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadSmallFileStreamToDisk,Magic Number,The method contains a magic number: 100,149
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadMediumFileStreamToDisk,Magic Number,The method contains a magic number: 20,154
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadMediumFileStreamToDisk,Magic Number,The method contains a magic number: 1024,154
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 4,159
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 1024,159
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testBrokenFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 1024,159
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testCancelFormUploadSmallFileStreamToDisk,Magic Number,The method contains a magic number: 100,169
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testCancelFormUploadMediumFileStreamToDisk,Magic Number,The method contains a magic number: 20,174
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testCancelFormUploadMediumFileStreamToDisk,Magic Number,The method contains a magic number: 1024,174
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testCancelFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 4,179
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testCancelFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 1024,179
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testCancelFormUploadLargeFileStreamToDisk,Magic Number,The method contains a magic number: 1024,179
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Long Parameter List,The method has 5 parameters. ,184
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Complex Method,Cyclomatic complexity of the method is 14,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Empty catch clause,The method has an empty catch block.,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Long Method,The method has 169 lines of code.,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Long Parameter List,The method has 7 parameters. ,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.POST).setURI("/form")).onComplete(onSuccess(req -> {" is 123.,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Long Statement,The length of the statement "String pro="--" + boundary + "\r\n"+ "Content-Disposition: form-data; name=\"file\""+ (filename == null ? "" : "; filename=\"" + filename + "\"")+ (extFilename == null ? "" : "; filename*=\"UTF-8''" + extFilename)+ "\"\r\n"+ "Content-Type: image/gif\r\n"+ (includeLength ? "Content-Length: " + contentStr.length() + "\r\n" : "")+ "\r\n";" is 337.,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Magic Number,The method contains a magic number: 2,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Magic Number,The method contains a magic number: 2,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Magic Number,The method contains a magic number: 10,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Magic Number,The method contains a magic number: 20_000,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Magic Number,The method contains a magic number: 10,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Magic Number,The method contains a magic number: 20_000,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Magic Number,The method contains a magic number: 2,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadFile,Magic Number,The method contains a magic number: 200,188
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadAttributes,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.POST).setURI("/form")).onComplete(onSuccess(req -> {" is 123.,362
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadAttributes,Long Statement,The length of the statement "req.putHeader("content-length"`String.valueOf(buffer.length())).putHeader("content-type"`"application/x-www-form-urlencoded").send(buffer).onComplete(onSuccess(resp -> {" is 169.,362
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadAttributes,Magic Number,The method contains a magic number: 200,362
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadAttributes,Magic Number,The method contains a magic number: 3,362
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadAttributes2,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.POST).setURI("/form")).onComplete(onSuccess(req -> {" is 123.,423
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadAttributes2,Long Statement,The length of the statement "req.putHeader("content-length"`String.valueOf(buffer.length())).putHeader("content-type"`"application/x-www-form-urlencoded").response().onComplete(onSuccess(resp -> {" is 167.,423
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadAttributes2,Magic Number,The method contains a magic number: 200,423
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testFormUploadAttributes2,Magic Number,The method contains a magic number: 3,423
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testAttributeSizeOverflow,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.POST).setURI("/form")).onComplete(onSuccess(req -> {" is 123.,468
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testAttributeSizeOverflow,Long Statement,The length of the statement "req.putHeader("content-length"`String.valueOf(buffer.length())).putHeader("content-type"`"application/x-www-form-urlencoded").response().onComplete(onSuccess(resp -> {" is 167.,468
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testAttributeSizeOverflow,Magic Number,The method contains a magic number: 9,468
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testAttributeSizeOverflow,Magic Number,The method contains a magic number: 200,468
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testInvalidPostFileUpload,Long Statement,The length of the statement "String body="--a4e41223-a527-49b6-ac1c-315d76be757e\r\n" + "Content-Disposition: form-data; name=\"file\"; filename=\"tmp-0.txt\"\r\n" + "Content-Type: image/gif; charset=ABCD\r\n"+ "Content-Length: 12\r\n"+ "\r\n"+ "some-content\r\n"+ "--a4e41223-a527-49b6-ac1c-315d76be757e--\r\n";" is 283.,508
vert.x,io.vertx.core.http,HttpServerFileUploadTest,testInvalidPostFileUpload,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.POST).setURI("/form")).onComplete(onSuccess(req -> {" is 123.,508
vert.x,io.vertx.core.http,HttpTest,testListenDomainSocketAddress,Long Statement,The length of the statement "HttpServer server=vx.createHttpServer(createBaseServerOptions()).requestHandler(req -> req.response().end(sockAddress.path()));" is 127.,167
vert.x,io.vertx.core.http,HttpTest,testListenDomainSocketAddress,Magic Number,The method contains a magic number: 3,167
vert.x,io.vertx.core.http,HttpTest,testListenDomainSocketAddress,Magic Number,The method contains a magic number: 200,167
vert.x,io.vertx.core.http,HttpTest,testServerActualPortWhenSet,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setPort(server.actualPort())).compose(req -> req.send().compose(resp -> {" is 123.,259
vert.x,io.vertx.core.http,HttpTest,testServerActualPortWhenSet,Magic Number,The method contains a magic number: 200,259
vert.x,io.vertx.core.http,HttpTest,testServerActualPortWhenZero,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setPort(server.actualPort())).compose(req -> req.send().compose(resp -> {" is 123.,285
vert.x,io.vertx.core.http,HttpTest,testServerActualPortWhenZero,Magic Number,The method contains a magic number: 200,285
vert.x,io.vertx.core.http,HttpTest,testServerActualPortWhenZeroPassedInListen,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setPort(server.actualPort())).compose(req -> req.send().compose(resp -> {" is 123.,312
vert.x,io.vertx.core.http,HttpTest,testServerActualPortWhenZeroPassedInListen,Magic Number,The method contains a magic number: 200,312
vert.x,io.vertx.core.http,HttpTest,testClientRequestOptionsSocketAddressOnly,Magic Number,The method contains a magic number: 200,339
vert.x,io.vertx.core.http,HttpTest,testInvalidAbsoluteURI,Empty catch clause,The method has an empty catch block.,372
vert.x,io.vertx.core.http,HttpTest,testPutHeadersOnRequest,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.putHeader("foo"`"bar").send().map(HttpClientResponse::statusCode)).onComplete(onSuccess(sc -> {" is 145.,382
vert.x,io.vertx.core.http,HttpTest,testPutHeadersOnRequest,Magic Number,The method contains a magic number: 200,382
vert.x,io.vertx.core.http,HttpTest,testPutHeaderReplacesPreviousHeaders,Long Statement,The length of the statement "server.requestHandler(req -> req.response().putHeader("Location"`"http://example1.org").putHeader("location"`"http://example2.org").send());" is 140.,402
vert.x,io.vertx.core.http,HttpTest,testPutHeaderReplacesPreviousHeaders,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().map(resp -> resp.headers().get("LocatioN"))).onComplete(onSuccess(header -> {" is 134.,402
vert.x,io.vertx.core.http,HttpTest,testSimpleRequest,Long Statement,The length of the statement "options=new RequestOptions(requestOptions).setServer(testAddress).setMethod(method).setAbsoluteURI((ssl ? "https://" : "http://") + DEFAULT_HTTP_HOST + ":"+ DEFAULT_HTTP_PORT+ uri);" is 181.,545
vert.x,io.vertx.core.http,HttpTest,testSimpleRequest,Long Parameter List,The method has 5 parameters. ,556
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlers1,Magic Number,The method contains a magic number: 2,596
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlers1,Magic Number,The method contains a magic number: 200,596
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlers2,Magic Number,The method contains a magic number: 2,626
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlers2,Magic Number,The method contains a magic number: 200,626
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlersChunkedResponse,Magic Number,The method contains a magic number: 2,660
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlersChunkedResponse,Magic Number,The method contains a magic number: 6,660
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlersChunkedResponse,Magic Number,The method contains a magic number: 200,660
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlersSendFile,Magic Number,The method contains a magic number: 4,699
vert.x,io.vertx.core.http,HttpTest,testResponseEndHandlersSendFile,Magic Number,The method contains a magic number: 200,699
vert.x,io.vertx.core.http,HttpTest,testURIAndPath,Magic Number,The method contains a magic number: 200,769
vert.x,io.vertx.core.http,HttpTest,testParamDecoding,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.PUT)).compose(req -> req.putHeader(HttpHeaders.CONTENT_LENGTH`String.valueOf(body.length())).putHeader(HttpHeaders.CONTENT_TYPE`HttpHeaders.APPLICATION_X_WWW_FORM_URLENCODED).send(body).compose(resp -> {" is 274.,819
vert.x,io.vertx.core.http,HttpTest,testParamDecoding,Magic Number,The method contains a magic number: 200,819
vert.x,io.vertx.core.http,HttpTest,testParams,Magic Number,The method contains a magic number: 10,854
vert.x,io.vertx.core.http,HttpTest,sendAndAwait,Magic Number,The method contains a magic number: 200,964
vert.x,io.vertx.core.http,HttpTest,testRequestHeaders,Magic Number,The method contains a magic number: 10,1016
vert.x,io.vertx.core.http,HttpTest,testResponseHeaders,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().compose(resp -> resp.end().map(resp.headers()))).onComplete(onSuccess(respHeaders -> {" is 143.,1051
vert.x,io.vertx.core.http,HttpTest,testResponseHeaders,Magic Number,The method contains a magic number: 10,1051
vert.x,io.vertx.core.http,HttpTest,testResponseHeadersWithCharSequence,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().compose(resp -> resp.end().map(resp.headers()))).onComplete(onSuccess(respHeaders -> {" is 143.,1079
vert.x,io.vertx.core.http,HttpTest,testResponseMultipleSetCookie,Magic Number,The method contains a magic number: 200,1120
vert.x,io.vertx.core.http,HttpTest,testUseRequestAfterComplete,Magic Number,The method contains a magic number: 123,1161
vert.x,io.vertx.core.http,HttpTest,testRequestBodyBufferAtEnd,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.PUT)).compose(req -> req.send(body).compose(resp -> {" is 124.,1192
vert.x,io.vertx.core.http,HttpTest,testRequestBodyBufferAtEnd,Magic Number,The method contains a magic number: 1000,1192
vert.x,io.vertx.core.http,HttpTest,testRequestBodyBufferAtEnd,Magic Number,The method contains a magic number: 200,1192
vert.x,io.vertx.core.http,HttpTest,testRequestBodyStringAtEnd,Magic Number,The method contains a magic number: 1000,1227
vert.x,io.vertx.core.http,HttpTest,testRequestBodyWrite,Magic Number,The method contains a magic number: 10,1269
vert.x,io.vertx.core.http,HttpTest,testRequestBodyWrite,Magic Number,The method contains a magic number: 100,1269
vert.x,io.vertx.core.http,HttpTest,testRequestBodyWrite,Magic Number,The method contains a magic number: 200,1269
vert.x,io.vertx.core.http,HttpTest,testRequestBodyWriteString,Magic Number,The method contains a magic number: 1000,1337
vert.x,io.vertx.core.http,HttpTest,testRequestWrite,Magic Number,The method contains a magic number: 3,1375
vert.x,io.vertx.core.http,HttpTest,testRequestWrite,Magic Number,The method contains a magic number: 1000,1375
vert.x,io.vertx.core.http,HttpTest,testRequestWrite,Magic Number,The method contains a magic number: 5,1375
vert.x,io.vertx.core.http,HttpTest,testClientExceptionHandlerCalledWhenServerTerminatesConnection,Magic Number,The method contains a magic number: 10,1403
vert.x,io.vertx.core.http,HttpTest,testClientExceptionHandlerCalledWhenServerTerminatesConnection,Magic Number,The method contains a magic number: 10,1403
vert.x,io.vertx.core.http,HttpTest,testNoExceptionHandlerCalledWhenResponseEnded,Magic Number,The method contains a magic number: 100,1493
vert.x,io.vertx.core.http,HttpTest,testServerExceptionHandlerOnClose,Empty catch clause,The method has an empty catch block.,1521
vert.x,io.vertx.core.http,HttpTest,testServerExceptionHandlerOnClose,Magic Number,The method contains a magic number: 3,1521
vert.x,io.vertx.core.http,HttpTest,testClientRequestExceptionHandlerCalledWhenRequestEnded,Magic Number,The method contains a magic number: 2,1612
vert.x,io.vertx.core.http,HttpTest,testDefaultOther,Magic Number,The method contains a magic number: 405,1640
vert.x,io.vertx.core.http,HttpTest,testOverrideStatusMessage,Magic Number,The method contains a magic number: 404,1646
vert.x,io.vertx.core.http,HttpTest,testStatusCode,Magic Number,The method contains a magic number: 200,1656
vert.x,io.vertx.core.http,HttpTest,testStatusCode,Magic Number,The method contains a magic number: 200,1656
vert.x,io.vertx.core.http,HttpTest,testResponseTrailers,Magic Number,The method contains a magic number: 10,1701
vert.x,io.vertx.core.http,HttpTest,testResponseTrailers,Magic Number,The method contains a magic number: 200,1701
vert.x,io.vertx.core.http,HttpTest,testResponseNoTrailers,Magic Number,The method contains a magic number: 200,1733
vert.x,io.vertx.core.http,HttpTest,testUseAfterServerResponseHeadSent,Magic Number,The method contains a magic number: 128,1754
vert.x,io.vertx.core.http,HttpTest,testUseAfterServerResponseHeadSent,Magic Number,The method contains a magic number: 200,1754
vert.x,io.vertx.core.http,HttpTest,testUseAfterServerResponseSent,Magic Number,The method contains a magic number: 123,1774
vert.x,io.vertx.core.http,HttpTest,testSetInvalidStatusMessage,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> testComplete()));" is 198.,1813
vert.x,io.vertx.core.http,HttpTest,testSetInvalidStatusMessage,Magic Number,The method contains a magic number: 200,1813
vert.x,io.vertx.core.http,HttpTest,testResponseBodyBufferAtEnd,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body).andThen(onSuccess(buff -> assertEquals(body`buff)))).onComplete(onSuccess(v -> testComplete()));" is 251.,1833
vert.x,io.vertx.core.http,HttpTest,testResponseBodyBufferAtEnd,Magic Number,The method contains a magic number: 1000,1833
vert.x,io.vertx.core.http,HttpTest,testResponseBodyBufferAtEnd,Magic Number,The method contains a magic number: 200,1833
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWrite,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body).andThen(onSuccess(buff -> assertEquals(body`buff)))).onComplete(onSuccess(v -> testComplete()));" is 251.,1862
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWrite,Magic Number,The method contains a magic number: 10,1862
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWrite,Magic Number,The method contains a magic number: 100,1862
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWrite,Magic Number,The method contains a magic number: 200,1862
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWriteString,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body).andThen(onSuccess(buff -> assertEquals(body`encoding == null ? buff.toString() : buff.toString(encoding))))).onComplete(onSuccess(v -> testComplete()));" is 307.,1928
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWriteString,Magic Number,The method contains a magic number: 1000,1928
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWriteString,Magic Number,The method contains a magic number: 200,1928
vert.x,io.vertx.core.http,HttpTest,testResponseWrite,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body).andThen(onSuccess(buff -> assertEquals(body`buff)))).onComplete(onSuccess(v -> testComplete()));" is 251.,1964
vert.x,io.vertx.core.http,HttpTest,testResponseWrite,Magic Number,The method contains a magic number: 1000,1964
vert.x,io.vertx.core.http,HttpTest,testResponseWrite,Magic Number,The method contains a magic number: 200,1964
vert.x,io.vertx.core.http,HttpTest,testSendFile,Magic Number,The method contains a magic number: 10000,1986
vert.x,io.vertx.core.http,HttpTest,testSendFileWithHandler,Magic Number,The method contains a magic number: 10000,1994
vert.x,io.vertx.core.http,HttpTest,sendFile,Magic Number,The method contains a magic number: 2,2001
vert.x,io.vertx.core.http,HttpTest,sendFile,Magic Number,The method contains a magic number: 200,2001
vert.x,io.vertx.core.http,HttpTest,testSendNonExistingFile,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body).andThen(onSuccess(buff -> assertEquals("failed"`buff.toString())))).onComplete(onSuccess(v -> testComplete()));" is 266.,2029
vert.x,io.vertx.core.http,HttpTest,testSendNonExistingFile,Magic Number,The method contains a magic number: 200,2029
vert.x,io.vertx.core.http,HttpTest,testSendFileOverrideHeaders,Long Statement,The length of the statement ")).compose(HttpClientResponse::body).andThen(onSuccess(buff -> assertEquals(content`buff.toString())))).onComplete(onSuccess(v -> testComplete()));" is 147.,2053
vert.x,io.vertx.core.http,HttpTest,testSendFileOverrideHeaders,Magic Number,The method contains a magic number: 10000,2053
vert.x,io.vertx.core.http,HttpTest,testSendFileOverrideHeaders,Magic Number,The method contains a magic number: 200,2053
vert.x,io.vertx.core.http,HttpTest,testSendFileNotFound,Magic Number,The method contains a magic number: 2,2079
vert.x,io.vertx.core.http,HttpTest,testSendFileNotFound,Magic Number,The method contains a magic number: 100,2079
vert.x,io.vertx.core.http,HttpTest,testSendOpenRangeFileFromClasspath,Long Statement,The length of the statement "client.request(requestOptions).compose(HttpClientRequest::send).andThen(onSuccess(resp -> assertEquals(String.valueOf(10)`resp.headers().get("Content-Length")))).compose(HttpClientResponse::body).onComplete(onSuccess(body -> {" is 226.,2127
vert.x,io.vertx.core.http,HttpTest,testSendOpenRangeFileFromClasspath,Magic Number,The method contains a magic number: 13,2127
vert.x,io.vertx.core.http,HttpTest,testSendOpenRangeFileFromClasspath,Magic Number,The method contains a magic number: 10,2127
vert.x,io.vertx.core.http,HttpTest,testSendOpenRangeFileFromClasspath,Magic Number,The method contains a magic number: 10,2127
vert.x,io.vertx.core.http,HttpTest,testSendRangeFileFromClasspath,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(String.valueOf(10)`resp.headers().get("Content-Length")))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 220.,2147
vert.x,io.vertx.core.http,HttpTest,testSendRangeFileFromClasspath,Magic Number,The method contains a magic number: 13,2147
vert.x,io.vertx.core.http,HttpTest,testSendRangeFileFromClasspath,Magic Number,The method contains a magic number: 10,2147
vert.x,io.vertx.core.http,HttpTest,testSendRangeFileFromClasspath,Magic Number,The method contains a magic number: 10,2147
vert.x,io.vertx.core.http,HttpTest,testSendRangeFileFromClasspath,Magic Number,The method contains a magic number: 10,2147
vert.x,io.vertx.core.http,HttpTest,test100ContinueHandledAutomatically,Magic Number,The method contains a magic number: 1000,2166
vert.x,io.vertx.core.http,HttpTest,test100ContinueHandledManually,Magic Number,The method contains a magic number: 1000,2197
vert.x,io.vertx.core.http,HttpTest,test100ContinueRejectedManually,Magic Number,The method contains a magic number: 405,2228
vert.x,io.vertx.core.http,HttpTest,test100ContinueRejectedManually,Magic Number,The method contains a magic number: 405,2228
vert.x,io.vertx.core.http,HttpTest,test100ContinueTimeout,Magic Number,The method contains a magic number: 2,2256
vert.x,io.vertx.core.http,HttpTest,test103EarlyHints,Magic Number,The method contains a magic number: 200,2280
vert.x,io.vertx.core.http,HttpTest,testClientDrainHandler,Magic Number,The method contains a magic number: 1000,2320
vert.x,io.vertx.core.http,HttpTest,testClientDrainHandler,Magic Number,The method contains a magic number: 10000,2320
vert.x,io.vertx.core.http,HttpTest,drainingServer,Magic Number,The method contains a magic number: 1000,2381
vert.x,io.vertx.core.http,HttpTest,drainingServer,Magic Number,The method contains a magic number: 10000,2381
vert.x,io.vertx.core.http,HttpTest,testRequestTimesOutWhenIndicatedPeriodExpiresWithoutAResponseFromRemoteServer,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setTimeout(1000)).compose(HttpClientRequest::send).onComplete(onFailure(t -> {" is 128.,2411
vert.x,io.vertx.core.http,HttpTest,testRequestTimesOutWhenIndicatedPeriodExpiresWithoutAResponseFromRemoteServer,Magic Number,The method contains a magic number: 1000,2411
vert.x,io.vertx.core.http,HttpTest,testRequestTimeoutCanceledWhenRequestHasAnOtherError,Long Statement,The length of the statement "assertFalse("Expected to not end with timeout exception` but did: " + exception.get()`exception.get() instanceof TimeoutException);" is 131.,2428
vert.x,io.vertx.core.http,HttpTest,testRequestTimeoutCanceledWhenRequestHasAnOtherError,Magic Number,The method contains a magic number: 5000,2428
vert.x,io.vertx.core.http,HttpTest,testRequestTimeoutCanceledWhenRequestHasAnOtherError,Magic Number,The method contains a magic number: 800,2428
vert.x,io.vertx.core.http,HttpTest,testRequestTimeoutCanceledWhenRequestHasAnOtherError,Magic Number,The method contains a magic number: 1500,2428
vert.x,io.vertx.core.http,HttpTest,testRequestTimeoutCanceledWhenRequestEndsNormally,Magic Number,The method contains a magic number: 500,2445
vert.x,io.vertx.core.http,HttpTest,testRequestTimeoutCanceledWhenRequestEndsNormally,Magic Number,The method contains a magic number: 1000,2445
vert.x,io.vertx.core.http,HttpTest,testHttpClientRequestTimeoutResetsTheConnection,Magic Number,The method contains a magic number: 3,2467
vert.x,io.vertx.core.http,HttpTest,testHttpClientRequestTimeoutResetsTheConnection,Magic Number,The method contains a magic number: 500,2467
vert.x,io.vertx.core.http,HttpTest,testConnectInvalidPort,Magic Number,The method contains a magic number: 9998,2494
vert.x,io.vertx.core.http,HttpTest,testConnectInvalidHost,Magic Number,The method contains a magic number: 9998,2500
vert.x,io.vertx.core.http,HttpTest,testHeadCanSetContentLength,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.HEAD)).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(resp -> resp.end().map(resp.headers().get("Content-Length")))).onComplete(onSuccess(contentLength -> {" is 278.,2528
vert.x,io.vertx.core.http,HttpTest,testHeadCanSetContentLength,Magic Number,The method contains a magic number: 41,2528
vert.x,io.vertx.core.http,HttpTest,testHeadCanSetContentLength,Magic Number,The method contains a magic number: 200,2528
vert.x,io.vertx.core.http,HttpTest,testHeadDoesNotSetAutomaticallySetContentLengthHeader,Magic Number,The method contains a magic number: 200,2550
vert.x,io.vertx.core.http,HttpTest,testHeadAllowsContentLengthHeader,Magic Number,The method contains a magic number: 200,2557
vert.x,io.vertx.core.http,HttpTest,testHeadRemovesTransferEncodingHeader,Magic Number,The method contains a magic number: 200,2564
vert.x,io.vertx.core.http,HttpTest,testNoContentRemovesContentLengthHeader,Magic Number,The method contains a magic number: 204,2571
vert.x,io.vertx.core.http,HttpTest,testNoContentRemovesTransferEncodingHeader,Magic Number,The method contains a magic number: 204,2578
vert.x,io.vertx.core.http,HttpTest,testResetContentSetsContentLengthHeader,Magic Number,The method contains a magic number: 205,2585
vert.x,io.vertx.core.http,HttpTest,testResetContentRemovesTransferEncodingHeader,Magic Number,The method contains a magic number: 205,2592
vert.x,io.vertx.core.http,HttpTest,testNotModifiedDoesNotSetAutomaticallySetContentLengthHeader,Magic Number,The method contains a magic number: 304,2599
vert.x,io.vertx.core.http,HttpTest,testNotModifiedAllowsContentLengthHeader,Magic Number,The method contains a magic number: 304,2606
vert.x,io.vertx.core.http,HttpTest,testNotModifiedRemovesTransferEncodingHeader,Magic Number,The method contains a magic number: 304,2613
vert.x,io.vertx.core.http,HttpTest,test1xxRemovesContentLengthHeader,Magic Number,The method contains a magic number: 102,2620
vert.x,io.vertx.core.http,HttpTest,test1xxRemovesTransferEncodingHeader,Magic Number,The method contains a magic number: 102,2627
vert.x,io.vertx.core.http,HttpTest,checkEmptyHttpResponse,Long Statement,The length of the statement "CompletionStage<MultiMap> result=client.request(new RequestOptions(requestOptions).setMethod(method)).compose(req -> req.setFollowRedirects(false).send().compose(resp -> resp.body().compose(body -> {" is 199.,2634
vert.x,io.vertx.core.http,HttpTest,checkEmptyHttpResponse,Magic Number,The method contains a magic number: 20,2634
vert.x,io.vertx.core.http,HttpTest,testHeadHasNoContentLengthByDefault,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.HEAD)).compose(req -> req.send().andThen(onSuccess(resp -> assertNull(resp.headers().get(HttpHeaders.CONTENT_LENGTH)))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> testComplete()));" is 268.,2664
vert.x,io.vertx.core.http,HttpTest,testHeadButCanSetContentLength,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.HEAD)).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals("41"`resp.headers().get(HttpHeaders.CONTENT_LENGTH)))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> testComplete()));" is 275.,2683
vert.x,io.vertx.core.http,HttpTest,testRemoteAddress,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(req -> {" is 185.,2703
vert.x,io.vertx.core.http,HttpTest,testRemoteAddress,Magic Number,The method contains a magic number: 200,2703
vert.x,io.vertx.core.http,HttpTest,testGetAbsoluteURI,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI("/foo/bar")).compose(req -> req.send().compose(HttpClientResponse::end)).onComplete(onSuccess(v -> {" is 157.,2727
vert.x,io.vertx.core.http,HttpTest,testPauseResumeClientResponseWontCallEndHandlePrematurely,Magic Number,The method contains a magic number: 8192,2771
vert.x,io.vertx.core.http,HttpTest,testPauseClientResponse,Magic Number,The method contains a magic number: 10,2792
vert.x,io.vertx.core.http,HttpTest,testPauseClientResponse,Magic Number,The method contains a magic number: 100,2792
vert.x,io.vertx.core.http,HttpTest,testPauseClientResponse,Magic Number,The method contains a magic number: 500,2792
vert.x,io.vertx.core.http,HttpTest,testDeliverPausedBufferWhenResume,Magic Number,The method contains a magic number: 10,2837
vert.x,io.vertx.core.http,HttpTest,testDeliverPausedBufferWhenResumeOnOtherThread,Magic Number,The method contains a magic number: 10,2842
vert.x,io.vertx.core.http,HttpTest,testDeliverPausedBufferWhenResume,Magic Number,The method contains a magic number: 2048,2860
vert.x,io.vertx.core.http,HttpTest,testDeliverPausedBufferWhenResume,Magic Number,The method contains a magic number: 10,2860
vert.x,io.vertx.core.http,HttpTest,testClearPausedBuffersWhenResponseEnds,Magic Number,The method contains a magic number: 20,2902
vert.x,io.vertx.core.http,HttpTest,testClearPausedBuffersWhenResponseEnds,Magic Number,The method contains a magic number: 10,2902
vert.x,io.vertx.core.http,HttpTest,testClearPausedBuffersWhenResponseEnds,Magic Number,The method contains a magic number: 10,2902
vert.x,io.vertx.core.http,HttpTest,testPausedHttpServerRequest,Magic Number,The method contains a magic number: 1024,2930
vert.x,io.vertx.core.http,HttpTest,testHttpServerRequestPausedDuringLastChunk,Magic Number,The method contains a magic number: 20,2982
vert.x,io.vertx.core.http,HttpTest,testHttpClientResponsePausedDuringLastChunk,Magic Number,The method contains a magic number: 20,3028
vert.x,io.vertx.core.http,HttpTest,testHostHeaderOverridePossible,Long Statement,The length of the statement "client.request(new RequestOptions().setServer(testAddress).setHost("localhost").setPort(4444)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> testComplete()));" is 174.,3063
vert.x,io.vertx.core.http,HttpTest,testHostHeaderOverridePossible,Magic Number,The method contains a magic number: 4444,3063
vert.x,io.vertx.core.http,HttpTest,testHostHeaderOverridePossible,Magic Number,The method contains a magic number: 4444,3063
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWriteFixedString,Long Statement,The length of the statement "String body="Lorem ipsum dolor sit amet` consectetur adipisicing elit` sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam` quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident` sunt in culpa qui officia deserunt mollit anim id est laborum.";" is 461.,3079
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWriteFixedString,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(buff -> {" is 186.,3079
vert.x,io.vertx.core.http,HttpTest,testResponseBodyWriteFixedString,Magic Number,The method contains a magic number: 200,3079
vert.x,io.vertx.core.http,HttpTest,testResponseDataTimeout,Magic Number,The method contains a magic number: 2,3103
vert.x,io.vertx.core.http,HttpTest,testResponseDataTimeout,Magic Number,The method contains a magic number: 1000,3103
vert.x,io.vertx.core.http,HttpTest,testResponseDataTimeout,Magic Number,The method contains a magic number: 500,3103
vert.x,io.vertx.core.http,HttpTest,testResponseDataTimeout,Magic Number,The method contains a magic number: 100,3103
vert.x,io.vertx.core.http,HttpTest,testClientMultiThreaded,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.putHeader("count"`String.valueOf(index)).send()).onComplete(onSuccess(resp -> {" is 129.,3151
vert.x,io.vertx.core.http,HttpTest,testClientMultiThreaded,Magic Number,The method contains a magic number: 10,3151
vert.x,io.vertx.core.http,HttpTest,testClientMultiThreaded,Magic Number,The method contains a magic number: 200,3151
vert.x,io.vertx.core.http,HttpTest,run,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.putHeader("count"`String.valueOf(index)).send()).onComplete(onSuccess(resp -> {" is 129.,3164
vert.x,io.vertx.core.http,HttpTest,run,Magic Number,The method contains a magic number: 200,3164
vert.x,io.vertx.core.http,HttpTest,testInVerticle,Magic Number,The method contains a magic number: 200,3187
vert.x,io.vertx.core.http,HttpTest,testWorkerServer,Magic Number,The method contains a magic number: 5,3237
vert.x,io.vertx.core.http,HttpTest,testWorkerServer,Magic Number,The method contains a magic number: 200,3237
vert.x,io.vertx.core.http,HttpTest,start,Magic Number,The method contains a magic number: 200,3245
vert.x,io.vertx.core.http,HttpTest,testInWorker,Magic Number,The method contains a magic number: 200,3286
vert.x,io.vertx.core.http,HttpTest,start,Magic Number,The method contains a magic number: 200,3289
vert.x,io.vertx.core.http,HttpTest,testClientReadStreamInWorker,Magic Number,The method contains a magic number: 16,3328
vert.x,io.vertx.core.http,HttpTest,testClientReadStreamInWorker,Magic Number,The method contains a magic number: 512,3328
vert.x,io.vertx.core.http,HttpTest,testClientReadStreamInWorker,Magic Number,The method contains a magic number: 1024,3328
vert.x,io.vertx.core.http,HttpTest,testClientReadStreamInWorker,Magic Number,The method contains a magic number: 20,3328
vert.x,io.vertx.core.http,HttpTest,testClientReadStreamInWorker,Magic Number,The method contains a magic number: 250,3328
vert.x,io.vertx.core.http,HttpTest,start,Magic Number,The method contains a magic number: 250,3349
vert.x,io.vertx.core.http,HttpTest,testServerReadStreamInWorker,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send(body).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> complete()));" is 134.,3370
vert.x,io.vertx.core.http,HttpTest,testServerReadStreamInWorker,Magic Number,The method contains a magic number: 16,3370
vert.x,io.vertx.core.http,HttpTest,testServerReadStreamInWorker,Magic Number,The method contains a magic number: 512,3370
vert.x,io.vertx.core.http,HttpTest,testServerReadStreamInWorker,Magic Number,The method contains a magic number: 1024,3370
vert.x,io.vertx.core.http,HttpTest,testServerReadStreamInWorker,Magic Number,The method contains a magic number: 250,3370
vert.x,io.vertx.core.http,HttpTest,testServerReadStreamInWorker,Magic Number,The method contains a magic number: 20,3370
vert.x,io.vertx.core.http,HttpTest,start,Magic Number,The method contains a magic number: 250,3376
vert.x,io.vertx.core.http,HttpTest,start,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send(body).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> complete()));" is 134.,3395
vert.x,io.vertx.core.http,HttpTest,testRequestEnded,Empty catch clause,The method has an empty catch block.,3428
vert.x,io.vertx.core.http,HttpTest,testRequestEnded,Empty catch clause,The method has an empty catch block.,3428
vert.x,io.vertx.core.http,HttpTest,testRequestEnded,Empty catch clause,The method has an empty catch block.,3428
vert.x,io.vertx.core.http,HttpTest,testRequestEnded,Empty catch clause,The method has an empty catch block.,3428
vert.x,io.vertx.core.http,HttpTest,testRequestEnded,Magic Number,The method contains a magic number: 200,3428
vert.x,io.vertx.core.http,HttpTest,testRequestEnded,Magic Number,The method contains a magic number: 200,3428
vert.x,io.vertx.core.http,HttpTest,testRequestEndedNoEndHandler,Empty catch clause,The method has an empty catch block.,3474
vert.x,io.vertx.core.http,HttpTest,testRequestEndedNoEndHandler,Empty catch clause,The method has an empty catch block.,3474
vert.x,io.vertx.core.http,HttpTest,testRequestEndedNoEndHandler,Empty catch clause,The method has an empty catch block.,3474
vert.x,io.vertx.core.http,HttpTest,testRequestEndedNoEndHandler,Empty catch clause,The method has an empty catch block.,3474
vert.x,io.vertx.core.http,HttpTest,testRequestEndedNoEndHandler,Magic Number,The method contains a magic number: 200,3474
vert.x,io.vertx.core.http,HttpTest,testRequestEndedNoEndHandler,Magic Number,The method contains a magic number: 500,3474
vert.x,io.vertx.core.http,HttpTest,testRequestEndedNoEndHandler,Magic Number,The method contains a magic number: 200,3474
vert.x,io.vertx.core.http,HttpTest,testAbsoluteURIServer,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setURI(path)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 127.,3520
vert.x,io.vertx.core.http,HttpTest,testAbsoluteURIServer,Magic Number,The method contains a magic number: 200,3520
vert.x,io.vertx.core.http,HttpTest,testDumpManyRequestsOnQueue,Long Statement,The length of the statement "HttpClientOptions ops=createBaseClientOptions().setDefaultPort(DEFAULT_HTTP_PORT).setPipelining(true).setKeepAlive(true);" is 121.,3542
vert.x,io.vertx.core.http,HttpTest,testDumpManyRequestsOnQueue,Magic Number,The method contains a magic number: 10000,3542
vert.x,io.vertx.core.http,HttpTest,testOtherMethodRequest,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.valueOf("COPY"))).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> testComplete()));" is 168.,3564
vert.x,io.vertx.core.http,HttpTest,testClientGlobalConnectionHandler,Magic Number,The method contains a magic number: 2,3577
vert.x,io.vertx.core.http,HttpTest,testServerConnectionHandlerClose,Magic Number,The method contains a magic number: 2,3619
vert.x,io.vertx.core.http,HttpTest,testClientConnectionClose,Magic Number,The method contains a magic number: 1024,3639
vert.x,io.vertx.core.http,HttpTest,testClientConnectionClose,Magic Number,The method contains a magic number: 1024,3639
vert.x,io.vertx.core.http,HttpTest,testServerConnectionClose,Magic Number,The method contains a magic number: 2,3666
vert.x,io.vertx.core.http,HttpTest,testClientLocalAddress,Long Statement,The length of the statement "client.request(HttpMethod.GET`DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST`"/somepath").compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 142.,3715
vert.x,io.vertx.core.http,HttpTest,testClientLocalAddress,Magic Number,The method contains a magic number: 200,3715
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn301,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.GET`HttpMethod.GET`301`200`2`"http://localhost:8080/redirected"`"http://localhost:8080/redirected");" is 130.,3734
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn301,Magic Number,The method contains a magic number: 301,3734
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn301,Magic Number,The method contains a magic number: 200,3734
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn301,Magic Number,The method contains a magic number: 2,3734
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn301,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.POST`HttpMethod.GET`301`301`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 129.,3739
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn301,Magic Number,The method contains a magic number: 301,3739
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn301,Magic Number,The method contains a magic number: 301,3739
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn301,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.PUT`HttpMethod.GET`301`301`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 128.,3744
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn301,Magic Number,The method contains a magic number: 301,3744
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn301,Magic Number,The method contains a magic number: 301,3744
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn302,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.GET`HttpMethod.GET`302`200`2`"http://localhost:8080/redirected"`"http://localhost:8080/redirected");" is 130.,3749
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn302,Magic Number,The method contains a magic number: 302,3749
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn302,Magic Number,The method contains a magic number: 200,3749
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn302,Magic Number,The method contains a magic number: 2,3749
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn302,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.POST`HttpMethod.GET`302`302`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 129.,3754
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn302,Magic Number,The method contains a magic number: 302,3754
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn302,Magic Number,The method contains a magic number: 302,3754
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn302,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.PUT`HttpMethod.GET`302`302`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 128.,3759
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn302,Magic Number,The method contains a magic number: 302,3759
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn302,Magic Number,The method contains a magic number: 302,3759
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn303,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.GET`HttpMethod.GET`303`200`2`"http://localhost:8080/redirected"`"http://localhost:8080/redirected");" is 130.,3764
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn303,Magic Number,The method contains a magic number: 303,3764
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn303,Magic Number,The method contains a magic number: 200,3764
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn303,Magic Number,The method contains a magic number: 2,3764
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn303,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.POST`HttpMethod.GET`303`200`2`"http://localhost:8080/redirected"`"http://localhost:8080/redirected");" is 131.,3769
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn303,Magic Number,The method contains a magic number: 303,3769
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn303,Magic Number,The method contains a magic number: 200,3769
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn303,Magic Number,The method contains a magic number: 2,3769
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn303,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.PUT`HttpMethod.GET`303`200`2`"http://localhost:8080/redirected"`"http://localhost:8080/redirected");" is 130.,3774
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn303,Magic Number,The method contains a magic number: 303,3774
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn303,Magic Number,The method contains a magic number: 200,3774
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn303,Magic Number,The method contains a magic number: 2,3774
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectNotOn304,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.GET`HttpMethod.GET`304`304`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 128.,3779
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectNotOn304,Magic Number,The method contains a magic number: 304,3779
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectNotOn304,Magic Number,The method contains a magic number: 304,3779
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn307,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.GET`HttpMethod.GET`307`200`2`"http://localhost:8080/redirected"`"http://localhost:8080/redirected");" is 130.,3784
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn307,Magic Number,The method contains a magic number: 307,3784
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn307,Magic Number,The method contains a magic number: 200,3784
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn307,Magic Number,The method contains a magic number: 2,3784
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn307,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.POST`HttpMethod.POST`307`307`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 130.,3789
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn307,Magic Number,The method contains a magic number: 307,3789
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn307,Magic Number,The method contains a magic number: 307,3789
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn307,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.PUT`HttpMethod.PUT`307`307`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 128.,3794
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn307,Magic Number,The method contains a magic number: 307,3794
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn307,Magic Number,The method contains a magic number: 307,3794
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRelativeLocation,Magic Number,The method contains a magic number: 301,3799
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRelativeLocation,Magic Number,The method contains a magic number: 200,3799
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRelativeLocation,Magic Number,The method contains a magic number: 2,3799
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn308,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.GET`HttpMethod.GET`308`200`2`"http://localhost:8080/redirected"`"http://localhost:8080/redirected");" is 130.,3804
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn308,Magic Number,The method contains a magic number: 308,3804
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn308,Magic Number,The method contains a magic number: 200,3804
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectGetOn308,Magic Number,The method contains a magic number: 2,3804
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn308,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.POST`HttpMethod.POST`308`308`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 130.,3809
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn308,Magic Number,The method contains a magic number: 308,3809
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPostOn308,Magic Number,The method contains a magic number: 308,3809
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn308,Long Statement,The length of the statement "testFollowRedirect(HttpMethod.PUT`HttpMethod.PUT`308`308`1`"http://localhost:8080/redirected"`"http://localhost:8080/somepath");" is 128.,3814
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn308,Magic Number,The method contains a magic number: 308,3814
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPutOn308,Magic Number,The method contains a magic number: 308,3814
vert.x,io.vertx.core.http,HttpTest,testFollowRedirect,Long Parameter List,The method has 7 parameters. ,3819
vert.x,io.vertx.core.http,HttpTest,testFollowRedirect,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setServer(null).setMethod(method).setURI("/somepath")).compose(req -> req.putHeader("foo"`"foo_value").setFollowRedirects(true).send().compose(resp -> {" is 202.,3819
vert.x,io.vertx.core.http,HttpTest,testFollowRedirect,Magic Number,The method contains a magic number: 256,3819
vert.x,io.vertx.core.http,HttpTest,testFollowRedirect,Magic Number,The method contains a magic number: 200,3819
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithBody,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(HttpMethod.PUT).setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT)).onComplete(onSuccess(req -> {" is 146.,3894
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithBody,Magic Number,The method contains a magic number: 2048,3894
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithBody,Magic Number,The method contains a magic number: 303,3894
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithBody,Magic Number,The method contains a magic number: 200,3894
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectHappensAfterResponseIsReceived,Long Statement,The length of the statement "resp.setStatusCode(303).putHeader(HttpHeaders.CONTENT_LENGTH`"11").putHeader(HttpHeaders.LOCATION`scheme + "://localhost:8080/whatever").write("hello ");" is 153.,3927
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectHappensAfterResponseIsReceived,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(HttpMethod.PUT).setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT)).onComplete(onSuccess(req -> {" is 146.,3927
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectHappensAfterResponseIsReceived,Magic Number,The method contains a magic number: 303,3927
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectHappensAfterResponseIsReceived,Magic Number,The method contains a magic number: 500,3927
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectHappensAfterResponseIsReceived,Magic Number,The method contains a magic number: 200,3927
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithChunkedBody,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(HttpMethod.PUT).setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI(DEFAULT_TEST_URI)).onComplete(onSuccess(req -> {" is 171.,3965
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithChunkedBody,Magic Number,The method contains a magic number: 2048,3965
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithChunkedBody,Magic Number,The method contains a magic number: 2048,3965
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithChunkedBody,Magic Number,The method contains a magic number: 303,3965
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithChunkedBody,Magic Number,The method contains a magic number: 200,3965
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRequestNotEnded,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(DEFAULT_TEST_URI).setMethod(HttpMethod.PUT)).onComplete(onSuccess(req -> {" is 171.,4021
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRequestNotEnded,Magic Number,The method contains a magic number: 2048,4021
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRequestNotEnded,Magic Number,The method contains a magic number: 2048,4021
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRequestNotEnded,Magic Number,The method contains a magic number: 303,4021
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRequestNotEnded,Magic Number,The method contains a magic number: 200,4021
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithRequestNotEnded,Magic Number,The method contains a magic number: 500,4021
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectSendHeadThenBody,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(HttpMethod.PUT).setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI("/somepath")).onComplete(onSuccess(req -> {" is 166.,4090
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectSendHeadThenBody,Long Statement,The length of the statement "req.setFollowRedirects(true).putHeader("Content-Length"`"" + expected.length()).response().onComplete(onSuccess(resp -> {" is 121.,4090
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectSendHeadThenBody,Magic Number,The method contains a magic number: 2048,4090
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectSendHeadThenBody,Magic Number,The method contains a magic number: 303,4090
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectSendHeadThenBody,Magic Number,The method contains a magic number: 200,4090
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectLimit,Magic Number,The method contains a magic number: 16,4127
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectLimit,Magic Number,The method contains a magic number: 301,4127
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectLimit,Magic Number,The method contains a magic number: 16,4127
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectLimit,Magic Number,The method contains a magic number: 301,4127
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPropagatesTimeout,Magic Number,The method contains a magic number: 307,4154
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPropagatesTimeout,Magic Number,The method contains a magic number: 500,4154
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectPropagatesTimeout,Magic Number,The method contains a magic number: 2,4154
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectHost,Magic Number,The method contains a magic number: 2,4183
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectHost,Magic Number,The method contains a magic number: 301,4183
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithCustomHandler,Magic Number,The method contains a magic number: 2,4217
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithCustomHandler,Magic Number,The method contains a magic number: 301,4217
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectWithCustomHandler,Magic Number,The method contains a magic number: 25,4217
vert.x,io.vertx.core.http,HttpTest,testFoo,Long Method,The method has 285 lines of code.,4279
vert.x,io.vertx.core.http,HttpTest,testFoo,Long Statement,The length of the statement "public <U>Future<U> compose( Function<HttpClientResponse`Future<U>> successMapper` Function<Throwable`Future<U>> failureMapper){" is 128.,4279
vert.x,io.vertx.core.http,HttpTest,testFoo,Magic Number,The method contains a magic number: 301,4279
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectEncodedParams,Magic Number,The method contains a magic number: 302,4391
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectEncodedParams,Magic Number,The method contains a magic number: 200,4391
vert.x,io.vertx.core.http,HttpTest,testFollowRedirectEncodedParams,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6120a860,4391
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLock,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.POST).setURI("/" + i)).onComplete(onSuccess(req -> req.send(body).onComplete(onSuccess(resp -> {" is 167.,4439
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLock,Magic Number,The method contains a magic number: 2,4439
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLock,Magic Number,The method contains a magic number: 256,4439
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLock,Magic Number,The method contains a magic number: 256,4439
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLock,Magic Number,The method contains a magic number: 2,4439
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLock,Magic Number,The method contains a magic number: 256,4439
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLock,Magic Number,The method contains a magic number: 200,4439
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLockOnClose,Magic Number,The method contains a magic number: 7,4527
vert.x,io.vertx.core.http,HttpTest,testEventHandlersNotHoldingLockOnClose,Magic Number,The method contains a magic number: 200,4527
vert.x,io.vertx.core.http,HttpTest,testUseResponseAfterClose,Magic Number,The method contains a magic number: 123,4596
vert.x,io.vertx.core.http,HttpTest,testClientDecompressionError,Long Statement,The length of the statement "req.response().putHeader("Content-Encoding"`"gzip").end("long response with mismatched encoding causes connection leaks");" is 122.,4705
vert.x,io.vertx.core.http,HttpTest,testBytesReadRequest,Magic Number,The method contains a magic number: 2048,4821
vert.x,io.vertx.core.http,HttpTest,testClientSynchronousConnectFailures,Long Statement,The length of the statement "Vertx vertx=Vertx.vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setQueryTimeout(100)));" is 121.,4842
vert.x,io.vertx.core.http,HttpTest,testClientSynchronousConnectFailures,Magic Number,The method contains a magic number: 100,4842
vert.x,io.vertx.core.http,HttpTest,testClientSynchronousConnectFailures,Magic Number,The method contains a magic number: 2,4842
vert.x,io.vertx.core.http,HttpTest,testHttpClientRequestHeadersDontContainCROrLF,Empty catch clause,The method has an empty catch block.,4904
vert.x,io.vertx.core.http,HttpTest,testHttpClientRequestHeadersDontContainCROrLF,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@23ba3f59,4904
vert.x,io.vertx.core.http,HttpTest,testHttpServerResponseHeadersDontContainCROrLF,Empty catch clause,The method has an empty catch block.,4942
vert.x,io.vertx.core.http,HttpTest,testHttpServerResponseHeadersDontContainCROrLF,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5ea89f7b,4942
vert.x,io.vertx.core.http,HttpTest,testDisableIdleTimeoutInPool,Magic Number,The method contains a magic number: 10,4978
vert.x,io.vertx.core.http,HttpTest,testDisableIdleTimeoutInPool,Magic Number,The method contains a magic number: 2000,4978
vert.x,io.vertx.core.http,HttpTest,testKeepAliveTimeout,Magic Number,The method contains a magic number: 3,5007
vert.x,io.vertx.core.http,HttpTest,testKeepAliveTimeout,Magic Number,The method contains a magic number: 3,5007
vert.x,io.vertx.core.http,HttpTest,testKeepAliveTimeout,Magic Number,The method contains a magic number: 500,5018
vert.x,io.vertx.core.http,HttpTest,testKeepAliveTimeout,Magic Number,The method contains a magic number: 3000,5018
vert.x,io.vertx.core.http,HttpTest,testKeepAliveTimeout,Magic Number,The method contains a magic number: 3000,5018
vert.x,io.vertx.core.http,HttpTest,testPoolNotExpiring1,Long Statement,The length of the statement "testPoolNotExpiring(createBaseClientOptions().setPoolCleanerPeriod(0).setKeepAliveTimeout(100).setHttp2KeepAliveTimeout(100));" is 126.,5046
vert.x,io.vertx.core.http,HttpTest,testPoolNotExpiring1,Magic Number,The method contains a magic number: 100,5046
vert.x,io.vertx.core.http,HttpTest,testPoolNotExpiring1,Magic Number,The method contains a magic number: 100,5046
vert.x,io.vertx.core.http,HttpTest,testPoolNotExpiring2,Long Statement,The length of the statement "testPoolNotExpiring(createBaseClientOptions().setPoolCleanerPeriod(10).setKeepAliveTimeout(0).setHttp2KeepAliveTimeout(0));" is 123.,5051
vert.x,io.vertx.core.http,HttpTest,testPoolNotExpiring2,Magic Number,The method contains a magic number: 10,5051
vert.x,io.vertx.core.http,HttpTest,testPoolNotExpiring,Magic Number,The method contains a magic number: 2000,5056
vert.x,io.vertx.core.http,HttpTest,testPoolNotExpiring,Magic Number,The method contains a magic number: 2000,5056
vert.x,io.vertx.core.http,HttpTest,testHttpConnect,Magic Number,The method contains a magic number: 200,5081
vert.x,io.vertx.core.http,HttpTest,testHttpConnect,Magic Number,The method contains a magic number: 128,5086
vert.x,io.vertx.core.http,HttpTest,testHttpConnect,Magic Number,The method contains a magic number: 1235,5086
vert.x,io.vertx.core.http,HttpTest,testHttpConnect,Magic Number,The method contains a magic number: 1235,5086
vert.x,io.vertx.core.http,HttpTest,testNetSocketConnectSuccess,Magic Number,The method contains a magic number: 2,5228
vert.x,io.vertx.core.http,HttpTest,testNetSocketConnectSuccess,Magic Number,The method contains a magic number: 101,5228
vert.x,io.vertx.core.http,HttpTest,testClientNetSocketConnectReject,Magic Number,The method contains a magic number: 404,5245
vert.x,io.vertx.core.http,HttpTest,testClientNetSocketConnectReject,Magic Number,The method contains a magic number: 404,5245
vert.x,io.vertx.core.http,HttpTest,testAccessNetSocketPendingResponseData,Magic Number,The method contains a magic number: 100,5288
vert.x,io.vertx.core.http,HttpTest,testServerNetSocketCloseWithHandler,Magic Number,The method contains a magic number: 2,5317
vert.x,io.vertx.core.http,HttpTest,testClientNetSocketCloseWithHandler,Magic Number,The method contains a magic number: 2,5341
vert.x,io.vertx.core.http,HttpTest,testHttpInvalidConnectResponseEnded,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.CONNECT)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 144.,5363
vert.x,io.vertx.core.http,HttpTest,testHttpInvalidConnectResponseEnded,Magic Number,The method contains a magic number: 2,5363
vert.x,io.vertx.core.http,HttpTest,testHttpInvalidConnectResponseEnded,Magic Number,The method contains a magic number: 200,5363
vert.x,io.vertx.core.http,HttpTest,testHttpInvalidConnectResponseChunked,Long Statement,The length of the statement "client.request(new RequestOptions(requestOptions).setMethod(HttpMethod.CONNECT)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 144.,5383
vert.x,io.vertx.core.http,HttpTest,testHttpInvalidConnectResponseChunked,Magic Number,The method contains a magic number: 2,5383
vert.x,io.vertx.core.http,HttpTest,testHttpInvalidConnectResponseChunked,Magic Number,The method contains a magic number: 200,5383
vert.x,io.vertx.core.http,HttpTest,testUpgradeTunnelNoSwitch,Magic Number,The method contains a magic number: 200,5403
vert.x,io.vertx.core.http,HttpTest,testEndFromAnotherThread,Magic Number,The method contains a magic number: 2,5431
vert.x,io.vertx.core.http,HttpTest,testEndFromAnotherThread,Magic Number,The method contains a magic number: 200,5431
vert.x,io.vertx.core.http,HttpTest,testServerResponseWriteSuccess,Magic Number,The method contains a magic number: 1024,5454
vert.x,io.vertx.core.http,HttpTest,testServerResponseEndSuccess,Magic Number,The method contains a magic number: 1024,5459
vert.x,io.vertx.core.http,HttpTest,testServerResponseWriteSuccess,Magic Number,The method contains a magic number: 2,5464
vert.x,io.vertx.core.http,HttpTest,testServerResponseWriteFailure,Magic Number,The method contains a magic number: 1024,5480
vert.x,io.vertx.core.http,HttpTest,testClientRequestWriteSuccess,Magic Number,The method contains a magic number: 1024,5509
vert.x,io.vertx.core.http,HttpTest,testClientRequestEnd1Success,Magic Number,The method contains a magic number: 1024,5518
vert.x,io.vertx.core.http,HttpTest,testClientRequestWriteSuccess,Magic Number,The method contains a magic number: 2,5528
vert.x,io.vertx.core.http,HttpTest,testClientRequestLazyWriteSuccess,Magic Number,The method contains a magic number: 1024,5554
vert.x,io.vertx.core.http,HttpTest,testClientRequestLazyEndSuccess,Magic Number,The method contains a magic number: 1024,5559
vert.x,io.vertx.core.http,HttpTest,testClientRequestLazyWriteSuccess,Magic Number,The method contains a magic number: 2,5564
vert.x,io.vertx.core.http,HttpTest,testClientResponseWriteFailure,Magic Number,The method contains a magic number: 1024,5581
vert.x,io.vertx.core.http,HttpTest,testServerRequestBodyFuture,Magic Number,The method contains a magic number: 1024,5607
vert.x,io.vertx.core.http,HttpTest,testServerRequestBodyFutureFail,Magic Number,The method contains a magic number: 1024,5627
vert.x,io.vertx.core.http,HttpTest,testResetClientRequestBeforeActualSend,Magic Number,The method contains a magic number: 2,5648
vert.x,io.vertx.core.http,HttpTest,testResetClientRequestInProgress,Magic Number,The method contains a magic number: 2,5686
vert.x,io.vertx.core.http,HttpTest,testResetClientRequestResponseInProgress,Magic Number,The method contains a magic number: 16,5724
vert.x,io.vertx.core.http,HttpTest,testGetCookies,Magic Number,The method contains a magic number: 3,5764
vert.x,io.vertx.core.http,HttpTest,testGetCookiesSameIdentity,Long Statement,The length of the statement "assertEquals(req.response()`req.response().addCookie(Cookie.cookie("foo"`"bar").setPath("/sub").setDomain("www.vertx.io")));" is 124.,5788
vert.x,io.vertx.core.http,HttpTest,testGetCookiesSameIdentity,Magic Number,The method contains a magic number: 3,5788
vert.x,io.vertx.core.http,HttpTest,testGetCookiesSameIdentityRemoveOne,Long Statement,The length of the statement "assertEquals(req.response()`req.response().addCookie(Cookie.cookie("foo"`"bar").setPath("/sub").setDomain("www.vertx.io")));" is 124.,5804
vert.x,io.vertx.core.http,HttpTest,testGetCookiesSameIdentityRemoveOne,Magic Number,The method contains a magic number: 2,5804
vert.x,io.vertx.core.http,HttpTest,testGetCookiesSameIdentityRemoveAll,Long Statement,The length of the statement "assertEquals(req.response()`req.response().addCookie(Cookie.cookie("foo"`"bar").setPath("/sub").setDomain("www.vertx.io")));" is 124.,5821
vert.x,io.vertx.core.http,HttpTest,testGetCookiesSameIdentityReplace,Long Statement,The length of the statement "assertEquals(req.response()`req.response().addCookie(Cookie.cookie("foo"`"bar").setPath("/sub").setDomain("www.vertx.io")));" is 124.,5835
vert.x,io.vertx.core.http,HttpTest,testGetCookiesSameIdentityReplace,Long Statement,The length of the statement "assertEquals(req.response()`req.response().addCookie(Cookie.cookie("foo"`"barista").setPath("/sub").setDomain("www.vertx.io")));" is 128.,5835
vert.x,io.vertx.core.http,HttpTest,testGetCookiesSameIdentityReplace,Magic Number,The method contains a magic number: 3,5835
vert.x,io.vertx.core.http,HttpTest,testCookiesChanged,Magic Number,The method contains a magic number: 3,5853
vert.x,io.vertx.core.http,HttpTest,testCookiesChanged,Magic Number,The method contains a magic number: 3,5853
vert.x,io.vertx.core.http,HttpTest,testCookiesChanged,Magic Number,The method contains a magic number: 4,5853
vert.x,io.vertx.core.http,HttpTest,testCookiesChanged,Magic Number,The method contains a magic number: 4,5853
vert.x,io.vertx.core.http,HttpTest,testCookiesChanged,Magic Number,The method contains a magic number: 3,5853
vert.x,io.vertx.core.http,HttpTest,testCookieFields,Magic Number,The method contains a magic number: 30,5892
vert.x,io.vertx.core.http,HttpTest,testCookieFields,Magic Number,The method contains a magic number: 60,5892
vert.x,io.vertx.core.http,HttpTest,testCookieFields,Magic Number,The method contains a magic number: 8,5892
vert.x,io.vertx.core.http,HttpTest,testCookies,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.putHeader(HttpHeaders.COOKIE.toString()`cookieHeader).send()).onComplete(onSuccess(resp -> {" is 142.,6042
vert.x,io.vertx.core.http,HttpTest,testClientRequestFutureSetHandlerFromAnotherThread,Magic Number,The method contains a magic number: 2,6054
vert.x,io.vertx.core.http,HttpTest,testClientRequestFutureSetHandlerFromAnotherThread,Magic Number,The method contains a magic number: 10,6054
vert.x,io.vertx.core.http,HttpTest,testClientRequestWithLargeBodyInSmallChunks,Long Statement,The length of the statement "assertEquals(chunked & req.version() != HttpVersion.HTTP_2 ? HttpHeaders.CHUNKED.toString() : null`req.getHeader(HttpHeaders.TRANSFER_ENCODING));" is 145.,6105
vert.x,io.vertx.core.http,HttpTest,testClientRequestWithLargeBodyInSmallChunks,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setMethod(HttpMethod.PUT).setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(DEFAULT_TEST_URI);" is 149.,6105
vert.x,io.vertx.core.http,HttpTest,testClientRequestWithLargeBodyInSmallChunks,Magic Number,The method contains a magic number: 1024,6105
vert.x,io.vertx.core.http,HttpTest,testClientRequestWithLargeBodyInSmallChunks,Magic Number,The method contains a magic number: 1024,6105
vert.x,io.vertx.core.http,HttpTest,testClientRequestWithLargeBodyInSmallChunks,Magic Number,The method contains a magic number: 2,6105
vert.x,io.vertx.core.http,HttpTest,testClientRequestWithLargeBodyInSmallChunks,Magic Number,The method contains a magic number: 200,6105
vert.x,io.vertx.core.http,HttpTest,testClientRequestFlowControlDifferentEventLoops,Magic Number,The method contains a magic number: 1024,6150
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIdleTimeout,Magic Number,The method contains a magic number: 2,6192
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIdleTimeoutNotHappened,Long Statement,The length of the statement "server=vertx.createHttpServer(createBaseServerOptions().setProxyProtocolTimeout(100).setProxyProtocolTimeoutUnit(TimeUnit.MILLISECONDS).setUseProxyProtocol(true));" is 163.,6213
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIdleTimeoutNotHappened,Long Statement,The length of the statement "client.request(HttpMethod.GET`proxy.getPort()`proxy.getHost()`DEFAULT_TEST_URI).compose(HttpClientRequest::send).onComplete(onSuccess(v -> complete()));" is 152.,6213
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIdleTimeoutNotHappened,Magic Number,The method contains a magic number: 2,6213
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIdleTimeoutNotHappened,Magic Number,The method contains a magic number: 56324,6213
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIdleTimeoutNotHappened,Magic Number,The method contains a magic number: 443,6213
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIdleTimeoutNotHappened,Magic Number,The method contains a magic number: 100,6213
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion1TCP4,Magic Number,The method contains a magic number: 56324,6243
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion1TCP4,Magic Number,The method contains a magic number: 443,6243
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion1TCP6,Magic Number,The method contains a magic number: 56324,6251
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion1TCP6,Magic Number,The method contains a magic number: 443,6251
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion2TCP4,Magic Number,The method contains a magic number: 56324,6266
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion2TCP4,Magic Number,The method contains a magic number: 443,6266
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion2TCP6,Magic Number,The method contains a magic number: 56324,6274
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion2TCP6,Magic Number,The method contains a magic number: 443,6274
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolAccepted,Long Statement,The length of the statement "assertAddresses(remote == null && testAddress.isInetSocket() ? proxy.getConnectionLocalAddress() : remote`req.remoteAddress());" is 127.,6298
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolAccepted,Long Statement,The length of the statement "assertAddresses(local == null && testAddress.isInetSocket() ? proxy.getConnectionRemoteAddress() : local`req.localAddress());" is 125.,6298
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolAccepted,Long Statement,The length of the statement "client.request(new RequestOptions().setHost(proxy.getHost()).setPort(proxy.getPort()).setURI(DEFAULT_TEST_URI)).onComplete(onSuccess(req -> {" is 141.,6298
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolAccepted,Magic Number,The method contains a magic number: 2,6298
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion2UDP4,Magic Number,The method contains a magic number: 56324,6343
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion2UDP4,Magic Number,The method contains a magic number: 443,6343
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion2UDP6,Magic Number,The method contains a magic number: 56324,6351
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolVersion2UDP6,Magic Number,The method contains a magic number: 443,6351
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolRejected,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(proxy.getPort()).setHost(proxy.getHost()).setURI(DEFAULT_TEST_URI)).compose(HttpClientRequest::send).onComplete(onFailure(req -> complete()));" is 186.,6367
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolRejected,Magic Number,The method contains a magic number: 2,6367
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIllegalHeader,Magic Number,The method contains a magic number: 56324,6401
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIllegalHeader,Magic Number,The method contains a magic number: 443,6401
vert.x,io.vertx.core.http,HttpTest,testClientClose,Long Statement,The length of the statement "client.request(new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT + i)).onComplete(onSuccess(HttpClientRequest::send));" is 142.,6410
vert.x,io.vertx.core.http,HttpTest,testClientClose,Magic Number,The method contains a magic number: 3,6410
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIllegal,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(proxy.getPort()).setHost(proxy.getHost()).setURI(DEFAULT_TEST_URI)).compose(HttpClientRequest::send).onComplete(onFailure(ex -> complete()));" is 185.,6449
vert.x,io.vertx.core.http,HttpTest,testHAProxyProtocolIllegal,Magic Number,The method contains a magic number: 2,6449
vert.x,io.vertx.core.http,HttpTest,testStickyContext,Magic Number,The method contains a magic number: 3,6483
vert.x,io.vertx.core.http,HttpTest,testHttpServerEndHandlerSuccess,Magic Number,The method contains a magic number: 200,6514
vert.x,io.vertx.core.http,HttpTest,testServerResponseSend,Magic Number,The method contains a magic number: 16,6594
vert.x,io.vertx.core.http,HttpTest,testConnectTimeout,Magic Number,The method contains a magic number: 8080,6640
vert.x,io.vertx.core.http,HttpTest,testResponseEndFutureCompletes_ChunkedWithoutBody,Long Statement,The length of the statement "testResponseEndFutureCompletes(httpServerResponse -> httpServerResponse.setChunked(true).write("hello").compose(nothing -> httpServerResponse.end()));" is 150.,6662
vert.x,io.vertx.core.http,HttpTest,testResponseEndFutureCompletes_ChunkedWithBody,Long Statement,The length of the statement "testResponseEndFutureCompletes(httpServerResponse -> httpServerResponse.setChunked(true).write("hello").compose(nothing -> httpServerResponse.end("world")));" is 157.,6669
vert.x,io.vertx.core.http,HttpTest,testResponseEndFutureCompletes,Long Statement,The length of the statement "server.requestHandler(httpServerRequest -> function.apply(httpServerRequest.response()).onComplete(onSuccess(nothing -> complete())));" is 134.,6676
vert.x,io.vertx.core.http,HttpTest,testResponseEndFutureCompletes,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(nothing -> complete()));" is 200.,6676
vert.x,io.vertx.core.http,HttpTest,testResponseEndFutureCompletes,Magic Number,The method contains a magic number: 2,6676
vert.x,io.vertx.core.http,HttpTest,testResponseEndFutureCompletes,Magic Number,The method contains a magic number: 200,6676
vert.x,io.vertx.core.http,HttpTest,shouldThrowISEIfSendingResponseFromHeadersEndHandler,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(nothing -> complete()));" is 200.,6691
vert.x,io.vertx.core.http,HttpTest,shouldThrowISEIfSendingResponseFromHeadersEndHandler,Magic Number,The method contains a magic number: 3,6691
vert.x,io.vertx.core.http,HttpTest,shouldThrowISEIfSendingResponseFromHeadersEndHandler,Magic Number,The method contains a magic number: 200,6691
vert.x,io.vertx.core.http,HttpTest,testInvalidPort,Empty catch clause,The method has an empty catch block.,6719
vert.x,io.vertx.core.http,HttpTest,testInvalidPort,Magic Number,The method contains a magic number: 65536,6719
vert.x,io.vertx.core.http,HttpTestBase,setUp,Long Statement,The length of the statement "requestOptions=new RequestOptions().setHost(baseServerOptions.getHost()).setPort(baseServerOptions.getPort()).setURI(DEFAULT_TEST_URI);" is 135.,55
vert.x,io.vertx.core.http,HttpTestBase,startServer,Magic Number,The method contains a magic number: 20,110
vert.x,io.vertx.core.http,HttpTLSTest,getOptions,Long Statement,The length of the statement "options.getAddressResolverOptions().setHostsValue(Buffer.buffer("" + "127.0.0.1 localhost\n" + "127.0.0.1 host1\n"+ "127.0.0.1 host2.com\n"+ "127.0.0.1 sub.host3.com\n"+ "127.0.0.1 host4.com\n"+ "127.0.0.1 www.host4.com\n"+ "127.0.0.1 host5.com\n"+ "127.0.0.1 www.host5.com\n"+ "127.0.0.1 unknown.com"));" is 304.,73
vert.x,io.vertx.core.http,HttpTLSTest,testTLSRevokedClientCertServer,Long Statement,The length of the statement "testTLS(Cert.CLIENT_PEM_ROOT_CA`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.CLIENT_PEM_ROOT_CA).requiresClientAuth().serverUsesCrl().fail();" is 135.,301
vert.x,io.vertx.core.http,HttpTLSTest,testTLSMatchingCipherSuites,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE).clientTrustAll().serverEnabledCipherSuites(ENABLED_CIPHER_SUITES).pass();" is 130.,307
vert.x,io.vertx.core.http,HttpTLSTest,testTLSNonMatchingCipherSuites,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE).clientTrustAll().serverEnabledCipherSuites(new String[]{"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"}).clientEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"}).fail();" is 245.,313
vert.x,io.vertx.core.http,HttpTLSTest,testTLSMatchingProtocolVersions,Long Identifier,The length of the field serverEnabledSecureTransportProtocol is 36.,319
vert.x,io.vertx.core.http,HttpTLSTest,testTLSMatchingProtocolVersions,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE).clientTrustAll().serverEnabledSecureTransportProtocol(new String[]{"TLSv1"`"TLSv1.1"`"TLSv1.2"}).pass();" is 161.,319
vert.x,io.vertx.core.http,HttpTLSTest,testTLSTrailingDotHost,Long Statement,The length of the statement "TLSTest test=testTLS(Cert.NONE`cert::trustOptions`cert::keyCertOptions`Trust.NONE).requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com.")).pass();" is 176.,327
vert.x,io.vertx.core.http,HttpTLSTest,testTLSTrailingDotHost,Magic Number,The method contains a magic number: 9,327
vert.x,io.vertx.core.http,HttpTLSTest,testTLSTrailingDotHost,Magic Number,The method contains a magic number: 4043,327
vert.x,io.vertx.core.http,HttpTLSTest,testTLSInvalidProtocolVersion,Long Identifier,The length of the field serverEnabledSecureTransportProtocol is 36.,357
vert.x,io.vertx.core.http,HttpTLSTest,testTLSInvalidProtocolVersion,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE).clientTrustAll().serverEnabledSecureTransportProtocol(new String[]{"HelloWorld"}).fail();" is 146.,357
vert.x,io.vertx.core.http,HttpTLSTest,testTLSNonMatchingProtocolVersions,Long Identifier,The length of the field serverEnabledSecureTransportProtocol is 36.,363
vert.x,io.vertx.core.http,HttpTLSTest,testTLSNonMatchingProtocolVersions,Long Identifier,The length of the field clientEnabledSecureTransportProtocol is 36.,363
vert.x,io.vertx.core.http,HttpTLSTest,testTLSNonMatchingProtocolVersions,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE).clientTrustAll().serverEnabledSecureTransportProtocol(new String[]{"TLSv1.2"}).clientEnabledSecureTransportProtocol(new String[]{"SSLv2Hello"`"TLSv1.1"}).fail();" is 218.,363
vert.x,io.vertx.core.http,HttpTLSTest,testTLSClientCertPKCS12RequiredOpenSSL,Long Statement,The length of the statement "testTLS(Cert.CLIENT_PKCS12`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.CLIENT_JKS).clientOpenSSL().requiresClientAuth().pass();" is 122.,437
vert.x,io.vertx.core.http,HttpTLSTest,testTLSv1_3,Long Identifier,The length of the field clientEnabledSecureTransportProtocol is 36.,449
vert.x,io.vertx.core.http,HttpTLSTest,testTLSv1_3,Long Identifier,The length of the field serverEnabledSecureTransportProtocol is 36.,449
vert.x,io.vertx.core.http,HttpTLSTest,testTLSv1_3,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE).clientTrustAll().clientEnabledSecureTransportProtocol(new String[]{"TLSv1.3"}).serverEnabledSecureTransportProtocol(new String[]{"TLSv1.3"}).pass();" is 205.,449
vert.x,io.vertx.core.http,HttpTLSTest,testTLSv1_3OpenSSL,Long Identifier,The length of the field clientEnabledSecureTransportProtocol is 36.,458
vert.x,io.vertx.core.http,HttpTLSTest,testTLSv1_3OpenSSL,Long Identifier,The length of the field serverEnabledSecureTransportProtocol is 36.,458
vert.x,io.vertx.core.http,HttpTLSTest,testTLSv1_3OpenSSL,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE).clientTrustAll().clientOpenSSL().clientEnabledSecureTransportProtocol(new String[]{"TLSv1.3"}).serverOpenSSL().serverEnabledSecureTransportProtocol(new String[]{"TLSv1.3"}).pass();" is 237.,458
vert.x,io.vertx.core.http,HttpTLSTest,testSNITrust,Long Statement,The length of the statement "TLSTest test=testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).pass();" is 180.,470
vert.x,io.vertx.core.http,HttpTLSTest,testSNITrust,Magic Number,The method contains a magic number: 4043,470
vert.x,io.vertx.core.http,HttpTLSTest,testSNITrustPKCS12,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_PKCS12`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).pass().clientPeerCert();" is 204.,481
vert.x,io.vertx.core.http,HttpTLSTest,testSNITrustPKCS12,Magic Number,The method contains a magic number: 4043,481
vert.x,io.vertx.core.http,HttpTLSTest,testSNITrustPEM,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_PEM`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).pass().clientPeerCert();" is 201.,492
vert.x,io.vertx.core.http,HttpTLSTest,testSNITrustPEM,Magic Number,The method contains a magic number: 4043,492
vert.x,io.vertx.core.http,HttpTLSTest,testSNIServerIgnoresExtension1,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE).requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).fail();" is 155.,503
vert.x,io.vertx.core.http,HttpTLSTest,testSNIServerIgnoresExtension1,Magic Number,The method contains a magic number: 4043,503
vert.x,io.vertx.core.http,HttpTLSTest,testSNIServerIgnoresExtension2,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SNI_JKS`Trust.NONE).clientVerifyHost(false).requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).pass().clientPeerCert();" is 210.,511
vert.x,io.vertx.core.http,HttpTLSTest,testSNIServerIgnoresExtension2,Magic Number,The method contains a magic number: 4043,511
vert.x,io.vertx.core.http,HttpTLSTest,testSNIUnknownServerName1,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("unknown.com")).fail();" is 169.,522
vert.x,io.vertx.core.http,HttpTLSTest,testSNIUnknownServerName1,Magic Number,The method contains a magic number: 4043,522
vert.x,io.vertx.core.http,HttpTLSTest,testSNIUnknownServerName2,Long Statement,The length of the statement "TLSTest test=testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SNI_JKS`Trust.NONE).serverSni().clientVerifyHost(false).requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("unknown.com")).pass();" is 203.,530
vert.x,io.vertx.core.http,HttpTLSTest,testSNIUnknownServerName2,Magic Number,The method contains a magic number: 4043,530
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWildcardMatch,Long Statement,The length of the statement "TLSTest test=testTLS(Cert.NONE`Trust.SNI_JKS_HOST3`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("sub.host3.com")).pass();" is 184.,542
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWildcardMatch,Magic Number,The method contains a magic number: 4043,542
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWildcardMatchPKCS12,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST3`Cert.SNI_PKCS12`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("sub.host3.com")).pass().clientPeerCert();" is 208.,553
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWildcardMatchPKCS12,Magic Number,The method contains a magic number: 4043,553
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWildcardMatchPEM,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST3`Cert.SNI_PEM`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("sub.host3.com")).pass().clientPeerCert();" is 205.,564
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWildcardMatchPEM,Magic Number,The method contains a magic number: 4043,564
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch1,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST4`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host4.com")).pass().clientPeerCert();" is 201.,575
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch1,Magic Number,The method contains a magic number: 4043,575
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch1PKCS12,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST4`Cert.SNI_PKCS12`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host4.com")).pass().clientPeerCert();" is 204.,585
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch1PKCS12,Magic Number,The method contains a magic number: 4043,585
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch1PEM,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST4`Cert.SNI_PEM`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host4.com")).pass().clientPeerCert();" is 201.,595
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch1PEM,Magic Number,The method contains a magic number: 4043,595
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch2,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST4`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("www.host4.com")).pass().clientPeerCert();" is 205.,605
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch2,Magic Number,The method contains a magic number: 4043,605
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch2PKCS12,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST4`Cert.SNI_PKCS12`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("www.host4.com")).pass().clientPeerCert();" is 208.,615
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch2PKCS12,Magic Number,The method contains a magic number: 4043,615
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch2PEM,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST4`Cert.SNI_PEM`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("www.host4.com")).pass().clientPeerCert();" is 205.,625
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameMatch2PEM,Magic Number,The method contains a magic number: 4043,625
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameWildcardMatch,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("www.host5.com")).pass().clientPeerCert();" is 205.,635
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameWildcardMatch,Magic Number,The method contains a magic number: 4043,635
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameWildcardMatchPKCS12,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_PKCS12`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("www.host5.com")).pass().clientPeerCert();" is 208.,645
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameWildcardMatchPKCS12,Magic Number,The method contains a magic number: 4043,645
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameWildcardMatchPEM,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_PEM`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("www.host5.com")).pass().clientPeerCert();" is 205.,655
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAlternativeNameWildcardMatchPEM,Magic Number,The method contains a magic number: 4043,655
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch1,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host5.com")).fail().clientPeerCert();" is 184.,665
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch1,Magic Number,The method contains a magic number: 4043,665
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch1PKCS12,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_PKCS12`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host5.com")).fail().clientPeerCert();" is 187.,674
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch1PKCS12,Magic Number,The method contains a magic number: 4043,674
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch1PEM,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_PEM`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host5.com")).fail().clientPeerCert();" is 184.,683
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch1PEM,Magic Number,The method contains a magic number: 4043,683
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch2,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_JKS`Trust.NONE).serverSni().clientVerifyHost(false).requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host5.com")).pass().clientPeerCert();" is 225.,692
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch2,Magic Number,The method contains a magic number: 4043,692
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch2PKCS12,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_PKCS12`Trust.NONE).serverSni().clientVerifyHost(false).requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host5.com")).pass().clientPeerCert();" is 228.,703
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch2PKCS12,Magic Number,The method contains a magic number: 4043,703
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch2PEM,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST5`Cert.SNI_PEM`Trust.NONE).serverSni().clientVerifyHost(false).requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host5.com")).pass().clientPeerCert();" is 225.,714
vert.x,io.vertx.core.http,HttpTLSTest,testSNISubjectAltenativeNameCNMatch2PEM,Magic Number,The method contains a magic number: 4043,714
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithALPN,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE).serverSni().clientUsesAlpn().serverUsesAlpn().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).pass().clientPeerCert();" is 235.,725
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithALPN,Magic Number,The method contains a magic number: 4043,725
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithHostHeader,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE).serverSni().requestProvider(client -> client.request(new RequestOptions().setServer(SocketAddress.inetSocketAddress(4043`"localhost")).setMethod(HttpMethod.POST).setPort(4043).setHost("host2.com").setURI("/somepath"))).pass().clientPeerCert();" is 323.,737
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithHostHeader,Magic Number,The method contains a magic number: 4043,737
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithHostHeader,Magic Number,The method contains a magic number: 4043,737
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithOpenSSL,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE).clientOpenSSL().serverOpenSSL().serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).pass().clientPeerCert();" is 233.,754
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithOpenSSL,Magic Number,The method contains a magic number: 4043,754
vert.x,io.vertx.core.http,HttpTLSTest,testSNIDontSendServerNameForShortnames1,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SNI_JKS_HOST1`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host1")).fail();" is 163.,766
vert.x,io.vertx.core.http,HttpTLSTest,testSNIDontSendServerNameForShortnames1,Magic Number,The method contains a magic number: 4043,766
vert.x,io.vertx.core.http,HttpTLSTest,testSNIDontSendServerNameForShortnames2,Long Statement,The length of the statement "TLSTest test=testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SNI_JKS`Trust.NONE).clientVerifyHost(false).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host1")).pass();" is 197.,774
vert.x,io.vertx.core.http,HttpTLSTest,testSNIDontSendServerNameForShortnames2,Magic Number,The method contains a magic number: 4043,774
vert.x,io.vertx.core.http,HttpTLSTest,testSNIForceSend,Long Statement,The length of the statement "TLSTest test=testTLS(Cert.NONE`Trust.SNI_JKS_HOST1`Cert.SNI_JKS`Trust.NONE).clientForceSni().serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host1")).pass();" is 193.,784
vert.x,io.vertx.core.http,HttpTLSTest,testSNIForceSend,Magic Number,The method contains a magic number: 4043,784
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithServerNameTrust,Long Statement,The length of the statement "testTLS(Cert.CLIENT_PEM_ROOT_CA`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.SNI_SERVER_ROOT_CA_AND_OTHER_CA_1).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).requiresClientAuth().pass();" is 231.,794
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithServerNameTrust,Magic Number,The method contains a magic number: 4043,794
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithServerNameTrustFallback,Long Statement,The length of the statement "testTLS(Cert.CLIENT_PEM_ROOT_CA`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.SNI_SERVER_ROOT_CA_FALLBACK).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).requiresClientAuth().pass();" is 225.,805
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithServerNameTrustFallback,Magic Number,The method contains a magic number: 4043,805
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithServerNameTrustFallbackFail,Long Statement,The length of the statement "testTLS(Cert.CLIENT_PEM_ROOT_CA`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.SNI_SERVER_OTHER_CA_FALLBACK).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).requiresClientAuth().fail();" is 226.,816
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithServerNameTrustFallbackFail,Magic Number,The method contains a magic number: 4043,816
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithServerNameTrustFail,Long Statement,The length of the statement "testTLS(Cert.CLIENT_PEM_ROOT_CA`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.SNI_SERVER_ROOT_CA_AND_OTHER_CA_2).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).requiresClientAuth().fail();" is 231.,827
vert.x,io.vertx.core.http,HttpTLSTest,testSNIWithServerNameTrustFail,Magic Number,The method contains a magic number: 4043,827
vert.x,io.vertx.core.http,HttpTLSTest,testSNICustomTrustManagerFactoryMapper,Long Statement,The length of the statement "@Override protected void engineInit( ManagerFactoryParameters managerFactoryParameters) throws InvalidAlgorithmParameterException {" is 131.,837
vert.x,io.vertx.core.http,HttpTLSTest,testSNICustomTrustManagerFactoryMapper,Long Statement,The length of the statement ").serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).requiresClientAuth().pass();" is 127.,837
vert.x,io.vertx.core.http,HttpTLSTest,testSNICustomTrustManagerFactoryMapper,Magic Number,The method contains a magic number: 4043,837
vert.x,io.vertx.core.http,HttpTLSTest,getTrustManagerFactory,Long Statement,The length of the statement "@Override protected void engineInit( ManagerFactoryParameters managerFactoryParameters) throws InvalidAlgorithmParameterException {" is 131.,844
vert.x,io.vertx.core.http,HttpTLSTest,testSNICustomTrustManagerFactoryMapper2,Long Statement,The length of the statement "@Override protected void engineInit( ManagerFactoryParameters managerFactoryParameters) throws InvalidAlgorithmParameterException {" is 131.,878
vert.x,io.vertx.core.http,HttpTLSTest,testSNICustomTrustManagerFactoryMapper2,Long Statement,The length of the statement ").serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).requiresClientAuth().pass();" is 127.,878
vert.x,io.vertx.core.http,HttpTLSTest,testSNICustomTrustManagerFactoryMapper2,Magic Number,The method contains a magic number: 4043,878
vert.x,io.vertx.core.http,HttpTLSTest,getTrustManagerFactory,Long Statement,The length of the statement "@Override protected void engineInit( ManagerFactoryParameters managerFactoryParameters) throws InvalidAlgorithmParameterException {" is 131.,887
vert.x,io.vertx.core.http,HttpTLSTest,testSniWithTrailingDotHost,Long Statement,The length of the statement "TLSTest test=testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE).serverSni().requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com.")).pass();" is 181.,921
vert.x,io.vertx.core.http,HttpTLSTest,testSniWithTrailingDotHost,Magic Number,The method contains a magic number: 4043,921
vert.x,io.vertx.core.http,HttpTLSTest,testCustomTrustManagerFactory,Long Statement,The length of the statement "@Override protected void engineInit( ManagerFactoryParameters managerFactoryParameters) throws InvalidAlgorithmParameterException {" is 131.,934
vert.x,io.vertx.core.http,HttpTLSTest,getTrustManagerFactory,Long Statement,The length of the statement "@Override protected void engineInit( ManagerFactoryParameters managerFactoryParameters) throws InvalidAlgorithmParameterException {" is 131.,942
vert.x,io.vertx.core.http,HttpTLSTest,testJKSInvalidPassword,Long Statement,The length of the statement "testInvalidKeyStore(Cert.SERVER_JKS.get().setPassword("wrongpassword")`"Keystore was tampered with` or password was incorrect"`null);" is 133.,1339
vert.x,io.vertx.core.http,HttpTLSTest,testPKCS12MissingPassword,Magic Number,The method contains a magic number: 15,1349
vert.x,io.vertx.core.http,HttpTLSTest,testPKCS12InvalidPassword,Long Statement,The length of the statement "testInvalidKeyStore(Cert.SERVER_PKCS12.get().setPassword("wrongpassword")`Arrays.asList("failed to decrypt safe contents entry: javax.crypto.BadPaddingException: Given final block not properly padded"`"keystore password was incorrect")`null);" is 242.,1360
vert.x,io.vertx.core.http,HttpTLSTest,testKeyCertInvalidPem,Long Statement,The length of the statement "String[] contents={""`"-----BEGIN PRIVATE KEY-----"`"-----BEGIN RSA PRIVATE KEY-----"`"-----BEGIN EC PRIVATE KEY-----"`"-----BEGIN PRIVATE KEY-----\n-----END PRIVATE KEY-----"`"-----BEGIN RSA PRIVATE KEY-----\n-----END RSA PRIVATE KEY-----"`"-----BEGIN EC PRIVATE KEY-----\n-----END EC PRIVATE KEY-----"`"-----BEGIN PRIVATE KEY-----\n*\n-----END PRIVATE KEY-----"`"-----BEGIN RSA PRIVATE KEY-----\n*\n-----END RSA PRIVATE KEY-----"`"-----BEGIN EC PRIVATE KEY-----\n*\n-----END EC PRIVATE KEY-----"};" is 499.,1387
vert.x,io.vertx.core.http,HttpTLSTest,testKeyCertInvalidPem,Long Statement,The length of the statement "String[] messages={"Missing -----BEGIN PRIVATE KEY----- or -----BEGIN RSA PRIVATE KEY----- or -----BEGIN EC PRIVATE KEY----- delimiter"`"Missing -----END PRIVATE KEY----- delimiter"`"Missing -----END RSA PRIVATE KEY----- delimiter"`"Missing -----END EC PRIVATE KEY----- delimiter"`"Empty pem file"`"Empty pem file"`"Empty pem file"`"Input byte[] should at least have 2 bytes for base64 bytes"`"Input byte[] should at least have 2 bytes for base64 bytes"`"Input byte[] should at least have 2 bytes for base64 bytes"};" is 516.,1387
vert.x,io.vertx.core.http,HttpTLSTest,testCaInvalidPem,Long Statement,The length of the statement "String[] contents={""`"-----BEGIN CERTIFICATE-----"`"-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----"`"-----BEGIN CERTIFICATE-----\n*\n-----END CERTIFICATE-----"};" is 170.,1431
vert.x,io.vertx.core.http,HttpTLSTest,testCaInvalidPem,Long Statement,The length of the statement "String[] messages={"Missing -----BEGIN CERTIFICATE----- delimiter"`"Missing -----END CERTIFICATE----- delimiter"`"Empty pem file"`"Input byte[] should at least have 2 bytes for base64 bytes"};" is 192.,1431
vert.x,io.vertx.core.http,HttpTLSTest,testStore,Long Statement,The length of the statement "fail("Was expecting <" + exceptionMessage + "> e.getCause().getMessage() to be prefixed by one of "+ expectedPossiblePrefixes);" is 127.,1471
vert.x,io.vertx.core.http,HttpTLSTest,testStore,Magic Number,The method contains a magic number: 4043,1471
vert.x,io.vertx.core.http,HttpTLSTest,testCrlInvalidPath,Magic Number,The method contains a magic number: 9292,1502
vert.x,io.vertx.core.http,HttpTLSTest,testProxyWithSNI,Long Statement,The length of the statement "Certificate cert=testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE).serverSni().useProxy(proxyType).requestOptions(new RequestOptions().setSsl(true).setPort(4043).setHost("host2.com")).pass().clientPeerCert();" is 221.,1541
vert.x,io.vertx.core.http,HttpTLSTest,testProxyWithSNI,Magic Number,The method contains a magic number: 4043,1541
vert.x,io.vertx.core.http,HttpTLSTest,testHttpsProxyUnknownHost,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).useProxy(ProxyType.HTTP).connectHostname("doesnt-resolve.host-name").clientTrustAll().clientVerifyHost(false).pass();" is 180.,1572
vert.x,io.vertx.core.http,HttpTLSTest,testHttpsProxyUnknownHost,Long Statement,The length of the statement "assertEquals("Host header doesn't contain target host"`"doesnt-resolve.host-name:4043"`proxy.getLastRequestHeaders().get("Host"));" is 130.,1572
vert.x,io.vertx.core.http,HttpTLSTest,testSocksProxyUnknownHost,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).useProxy(ProxyType.SOCKS5).connectHostname("doesnt-resolve.host-name").clientTrustAll().clientVerifyHost(false).pass();" is 182.,1608
vert.x,io.vertx.core.http,HttpTLSTest,testHAProxy,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SERVER_JKS`Cert.SERVER_JKS`Trust.NONE).serverUsesProxyProtocol().connectHostname(proxy.getHost()).connectPort(proxy.getPort()).pass();" is 158.,1621
vert.x,io.vertx.core.http,HttpTLSTest,testHAProxy,Magic Number,The method contains a magic number: 56324,1621
vert.x,io.vertx.core.http,HttpTLSTest,testHAProxy,Magic Number,The method contains a magic number: 443,1621
vert.x,io.vertx.core.http,HttpTLSTest,testHAProxy,Magic Number,The method contains a magic number: 4043,1621
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateSSLOptions,Long Statement,The length of the statement "server=createHttpServer(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())).requestHandler(req -> {" is 128.,1649
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateSSLOptions,Long Statement,The length of the statement "server=createHttpServer(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())).requestHandler(req -> {" is 128.,1649
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateSSLOptions,Long Statement,The length of the statement "Supplier<Future<Buffer>> request=() -> client.request(requestOptions).compose(req -> req.send().compose(HttpClientResponse::body));" is 131.,1649
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateSSLOptions,Long Statement,The length of the statement "client=createHttpClient(new HttpClientOptions().setKeepAlive(false).setSsl(true).setTrustOptions(Trust.SERVER_JKS.get()));" is 122.,1649
vert.x,io.vertx.core.http,HttpTLSTest,start,Long Statement,The length of the statement "server=createHttpServer(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())).requestHandler(req -> {" is 128.,1658
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateWithInvalidSSLOptions,Long Statement,The length of the statement "server=createHttpServer(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())).requestHandler(req -> {" is 128.,1689
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateWithInvalidSSLOptions,Long Statement,The length of the statement "client=createHttpClient(new HttpClientOptions().setKeepAlive(false).setSsl(true).setTrustOptions(Trust.SERVER_JKS.get()));" is 122.,1689
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateWithInvalidSSLOptions,Long Statement,The length of the statement "Future<Void> last=server.updateSSLOptions(new SSLOptions().setKeyCertOptions(new JksOptions().setValue(TestUtils.randomBuffer(20)).setPassword("invalid")));" is 156.,1689
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateWithInvalidSSLOptions,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 122.,1689
vert.x,io.vertx.core.http,HttpTLSTest,testUpdateWithInvalidSSLOptions,Magic Number,The method contains a magic number: 20,1689
vert.x,io.vertx.core.http,HttpTLSTest,testConcurrentUpdateSSLOptions,Long Statement,The length of the statement "server=createHttpServer(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())).requestHandler(req -> {" is 128.,1710
vert.x,io.vertx.core.http,HttpTLSTest,testConcurrentUpdateSSLOptions,Long Statement,The length of the statement "client=createHttpClient(new HttpClientOptions().setKeepAlive(false).setSsl(true).setTrustOptions(Trust.SERVER_JKS_ROOT_CA.get()));" is 130.,1710
vert.x,io.vertx.core.http,HttpTLSTest,testConcurrentUpdateSSLOptions,Long Statement,The length of the statement "List<KeyCertOptions> list=Arrays.asList(Cert.SERVER_PKCS12.get()`Cert.SERVER_PEM.get()`Cert.SERVER_PEM.get()`Cert.SERVER_JKS_ROOT_CA.get());" is 140.,1710
vert.x,io.vertx.core.http,HttpTLSTest,testConcurrentUpdateSSLOptions,Long Statement,The length of the statement "client.request(requestOptions).compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 122.,1710
vert.x,io.vertx.core.http,HttpTLSTest,testServerSharingUpdateSSLOptions,Long Statement,The length of the statement "servers[i]=createHttpServer(createBaseServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get())).requestHandler(req -> {" is 132.,1744
vert.x,io.vertx.core.http,HttpTLSTest,testServerSharingUpdateSSLOptions,Long Statement,The length of the statement "client=createHttpClient(new HttpClientOptions().setKeepAlive(false).setSsl(true).setTrustOptions(Trust.SERVER_JKS.get()));" is 122.,1744
vert.x,io.vertx.core.http,HttpTLSTest,testServerSharingUpdateSSLOptions,Long Statement,The length of the statement "client=createHttpClient(new HttpClientOptions().setKeepAlive(false).setSsl(true).setTrustOptions(Trust.SERVER_PKCS12.get()));" is 125.,1744
vert.x,io.vertx.core.http,HttpTLSTest,testServerSharingUpdateSSLOptions,Magic Number,The method contains a magic number: 4,1744
vert.x,io.vertx.core.http,HttpTLSTest,testUseThreadPool,Long Method,The method has 195 lines of code.,1792
vert.x,io.vertx.core.http,HttpTLSTest,testUseThreadPool,Long Statement,The length of the statement "ks.load(new ByteArrayInputStream(vertx.fileSystem().readFileBlocking(jksOptions.getPath()).getBytes())`jksOptions.getPassword().toCharArray());" is 143.,1792
vert.x,io.vertx.core.http,HttpTLSTest,testUseThreadPool,Long Statement,The length of the statement "@Override public Key engineGetKey( String alias` char[] password) throws NoSuchAlgorithmException` UnrecoverableKeyException {" is 126.,1792
vert.x,io.vertx.core.http,HttpTLSTest,testUseThreadPool,Long Statement,The length of the statement "@Override public void engineSetKeyEntry( String alias` Key key` char[] password` Certificate[] chain) throws KeyStoreException {" is 128.,1792
vert.x,io.vertx.core.http,HttpTLSTest,testUseThreadPool,Long Statement,The length of the statement "@Override public void engineStore( OutputStream stream` char[] password) throws IOException` NoSuchAlgorithmException` CertificateException {" is 141.,1792
vert.x,io.vertx.core.http,HttpTLSTest,testUseThreadPool,Long Statement,The length of the statement "@Override public void engineLoad( InputStream stream` char[] password) throws IOException` NoSuchAlgorithmException` CertificateException {" is 139.,1792
vert.x,io.vertx.core.http,HttpTLSTest,testUseThreadPool,Long Statement,The length of the statement "server=createHttpServer(createBaseServerOptions().setJdkSslEngineOptions(new JdkSSLEngineOptions().setUseWorkerThread(useWorkerThreads)).setSsl(true).setSni(useSni).setKeyCertOptions(testOptions)).requestHandler(req -> {" is 220.,1792
vert.x,io.vertx.core.http,HttpUtilsTest,testParseKeepAliveTimeout,Magic Number,The method contains a magic number: 5,34
vert.x,io.vertx.core.http,HttpUtilsTest,testParseKeepAliveTimeout,Magic Number,The method contains a magic number: 5,34
vert.x,io.vertx.core.http,HttpUtilsTest,testParseKeepAliveTimeout,Magic Number,The method contains a magic number: 5,34
vert.x,io.vertx.core.http,HttpUtilsTest,testParseKeepAliveTimeout,Magic Number,The method contains a magic number: 5,34
vert.x,io.vertx.core.http,HttpUtilsTest,testParseKeepAliveTimeout,Magic Number,The method contains a magic number: 5,34
vert.x,io.vertx.core.http,HttpUtilsTest,testParseKeepAliveTimeout,Magic Number,The method contains a magic number: 5,34
vert.x,io.vertx.core.http,HttpUtilsTest,testParseKeepAliveTimeout,Magic Number,The method contains a magic number: 5,34
vert.x,io.vertx.core.http,HttpUtilsTest,testParseKeepAliveTimeout,Magic Number,The method contains a magic number: 5,34
vert.x,io.vertx.core.http,HttpUtilsTest,testBadURL,Empty catch clause,The method has an empty catch block.,187
vert.x,io.vertx.core.http,RequestOptionsTest,testCopy,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setMethod(HttpMethod.PUT).setPort(8443).setSsl(true).setFollowRedirects(true);" is 122.,41
vert.x,io.vertx.core.http,RequestOptionsTest,testCopy,Magic Number,The method contains a magic number: 8443,41
vert.x,io.vertx.core.http,RequestOptionsTest,testToJson,Long Statement,The length of the statement "RequestOptions options=new RequestOptions().setMethod(HttpMethod.PUT).setPort(8443).setSsl(true).setFollowRedirects(true).addHeader("key"`"value").addHeader("foo"`Arrays.asList("bar"`"baz"));" is 191.,55
vert.x,io.vertx.core.http,RequestOptionsTest,testToJson,Long Statement,The length of the statement "JsonObject expected=new JsonObject().put("timeout"`RequestOptions.DEFAULT_TIMEOUT).put("uri"`RequestOptions.DEFAULT_URI).put("method"`"PUT").put("port"`8443).put("ssl"`true).put("followRedirects"`true).put("headers"`new JsonObject().put("key"`"value").put("foo"`new JsonArray().add("bar").add("baz")));" is 302.,55
vert.x,io.vertx.core.http,RequestOptionsTest,testToJson,Magic Number,The method contains a magic number: 8443,55
vert.x,io.vertx.core.http,RequestOptionsTest,testToJson,Magic Number,The method contains a magic number: 8443,55
vert.x,io.vertx.core.http,RequestOptionsTest,testFromJson,Long Statement,The length of the statement "JsonObject json=new JsonObject().put("method"`"PUT").put("port"`8443).put("ssl"`true).put("followRedirects"`true).put("headers"`new JsonObject().put("key"`"value").put("foo"`new JsonArray().add("bar").add("baz")));" is 214.,78
vert.x,io.vertx.core.http,RequestOptionsTest,testFromJson,Magic Number,The method contains a magic number: 8443,78
vert.x,io.vertx.core.http,RequestOptionsTest,testFromJson,Magic Number,The method contains a magic number: 8443,78
vert.x,io.vertx.core.http,RequestOptionsTest,testFromJson,Magic Number,The method contains a magic number: 2,78
vert.x,io.vertx.core.http,ResolvingHttpClientTest,startServers,Magic Number,The method contains a magic number: 404,24
vert.x,io.vertx.core.http,ResolvingHttpClientTest,startServers,Magic Number,The method contains a magic number: 8080,24
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Long Statement,The length of the statement "resolver.map.put("example.com"`new FakeState("example.com"`SocketAddress.inetSocketAddress(8080`"localhost")`SocketAddress.inetSocketAddress(8081`"localhost")));" is 161.,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Long Statement,The length of the statement "client.request(new FakeAddress("example.com")`HttpMethod.GET`8080`"example.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(v -> {" is 237.,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Magic Number,The method contains a magic number: 2,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Magic Number,The method contains a magic number: 2,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Magic Number,The method contains a magic number: 8080,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Magic Number,The method contains a magic number: 8081,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Magic Number,The method contains a magic number: 2,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Magic Number,The method contains a magic number: 8080,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveServers,Magic Number,The method contains a magic number: 200,173
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveConnectFailure,Long Statement,The length of the statement "resolver.map.put("example.com"`new FakeState("example.com"`SocketAddress.inetSocketAddress(8080`"localhost")`SocketAddress.inetSocketAddress(8081`"localhost")));" is 161.,198
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveConnectFailure,Long Statement,The length of the statement "client.request(new FakeAddress("example.com")`HttpMethod.GET`8080`"example.com"`"/").compose(req -> req.send().compose(HttpClientResponse::body)).transform(ar -> {" is 163.,198
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveConnectFailure,Long Statement,The length of the statement "return client.request(HttpMethod.GET`8080`"example.com"`"/").compose(req -> req.send().compose(HttpClientResponse::body));" is 122.,198
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveConnectFailure,Magic Number,The method contains a magic number: 8080,198
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveConnectFailure,Magic Number,The method contains a magic number: 8081,198
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveConnectFailure,Magic Number,The method contains a magic number: 8080,198
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveConnectFailure,Magic Number,The method contains a magic number: 8081,198
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveConnectFailure,Magic Number,The method contains a magic number: 8080,198
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Long Statement,The length of the statement "resolver.map.put("example.com"`new FakeState("example.com"`SocketAddress.inetSocketAddress(8080`"localhost")`SocketAddress.inetSocketAddress(8081`"localhost")`SocketAddress.inetSocketAddress(8082`"localhost")`SocketAddress.inetSocketAddress(8083`"localhost")));" is 261.,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Long Statement,The length of the statement "client.request(new FakeAddress("example.com")`HttpMethod.GET`8080`"example.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(v -> {" is 237.,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Magic Number,The method contains a magic number: 4,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Magic Number,The method contains a magic number: 8080,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Magic Number,The method contains a magic number: 8081,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Magic Number,The method contains a magic number: 8082,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Magic Number,The method contains a magic number: 8083,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Magic Number,The method contains a magic number: 8080,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testShutdownServers,Magic Number,The method contains a magic number: 200,225
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveToSameSocketAddress,Long Statement,The length of the statement "Future<Buffer> result=client.request(new FakeAddress("server1.com")`HttpMethod.GET`8080`"server1.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).compose(body -> client.request(new FakeAddress("server2.com")`HttpMethod.GET`8080`"server2.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)));" is 459.,259
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveToSameSocketAddress,Magic Number,The method contains a magic number: 8080,259
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveToSameSocketAddress,Magic Number,The method contains a magic number: 8080,259
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveToSameSocketAddress,Magic Number,The method contains a magic number: 200,259
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveToSameSocketAddress,Magic Number,The method contains a magic number: 8080,259
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveToSameSocketAddress,Magic Number,The method contains a magic number: 200,259
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveFailure,Long Statement,The length of the statement "client.request(new FakeAddress("foo.com")`HttpMethod.GET`8080`"foo.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onFailure(err -> {" is 231.,285
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveFailure,Magic Number,The method contains a magic number: 8080,285
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testResolveFailure,Magic Number,The method contains a magic number: 200,285
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testUseInvalidAddress,Long Statement,The length of the statement "`HttpMethod.GET`8080`"foo.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onFailure(err -> {" is 190.,307
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testUseInvalidAddress,Magic Number,The method contains a magic number: 8080,307
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testUseInvalidAddress,Magic Number,The method contains a magic number: 200,307
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testUseSocketAddressAddress,Long Statement,The length of the statement "client.request(SocketAddress.inetSocketAddress(servers.get(0).actualPort()`"localhost")`HttpMethod.GET`8080`"foo.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 278.,324
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testUseSocketAddressAddress,Magic Number,The method contains a magic number: 8080,324
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testUseSocketAddressAddress,Magic Number,The method contains a magic number: 8080,324
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testUseSocketAddressAddress,Magic Number,The method contains a magic number: 200,324
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testKeepAliveTimeout,Long Statement,The length of the statement "client.request(new FakeAddress("example.com")`HttpMethod.GET`8080`"example.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(v -> {" is 237.,342
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testKeepAliveTimeout,Magic Number,The method contains a magic number: 8080,342
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testKeepAliveTimeout,Magic Number,The method contains a magic number: 8080,342
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testKeepAliveTimeout,Magic Number,The method contains a magic number: 200,342
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testStatistics,Long Statement,The length of the statement "awaitFuture(client.request(new FakeAddress("example.com")`HttpMethod.GET`8080`"example.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)));" is 223.,366
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testStatistics,Magic Number,The method contains a magic number: 500,366
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testStatistics,Magic Number,The method contains a magic number: 8080,366
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testStatistics,Magic Number,The method contains a magic number: 8080,366
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testStatistics,Magic Number,The method contains a magic number: 200,366
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testStatistics,Magic Number,The method contains a magic number: 500,366
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Long Statement,The length of the statement "String res=awaitFuture(client.request(new FakeAddress("example.com")`HttpMethod.GET`8080`"example.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body))).toString();" is 245.,393
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Long Statement,The length of the statement "res=awaitFuture(client.request(new FakeAddress("example.com")`HttpMethod.GET`8080`"example.com"`"/").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body))).toString();" is 238.,393
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Magic Number,The method contains a magic number: 2,393
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Magic Number,The method contains a magic number: 8080,393
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Magic Number,The method contains a magic number: 8081,393
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Magic Number,The method contains a magic number: 8080,393
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Magic Number,The method contains a magic number: 200,393
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Magic Number,The method contains a magic number: 8080,393
vert.x,io.vertx.core.http,ResolvingHttpClientTest,testInvalidation,Magic Number,The method contains a magic number: 200,393
vert.x,io.vertx.core.http,SharedHttpClientTest,testSharedPoolClosedAutomatically,Magic Number,The method contains a magic number: 3600,68
vert.x,io.vertx.core.http,SharedHttpClientTest,testSharedPoolRetainedByOtherDeployment,Long Statement,The length of the statement "HttpClientOptions clientOptions=httpClientOptions(serverVerticle`SHARED_POOL_SIZE).setKeepAliveTimeout(keepAliveTimeoutSeconds);" is 128.,102
vert.x,io.vertx.core.http,SharedHttpClientTest,testSharedPoolRetainedByOtherDeployment,Magic Number,The method contains a magic number: 3,102
vert.x,io.vertx.core.http,SharedHttpClientTest,testSharedPoolRetainedByOtherDeployment,Magic Number,The method contains a magic number: 2,102
vert.x,io.vertx.core.http,SharedHttpClientTest,testSharedPoolRetainedByOtherDeployment,Magic Number,The method contains a magic number: 1000,102
vert.x,io.vertx.core.http,SharedHttpClientTest,testSharedPoolRetainedByOtherDeployment,Magic Number,The method contains a magic number: 2,102
vert.x,io.vertx.core.http,SharedHttpClientTest,testSharedPoolRetainedByOtherDeployment,Magic Number,The method contains a magic number: 2,102
vert.x,io.vertx.core.http,SharedHttpClientTest,testSharedPoolRetainedByOtherDeployment,Magic Number,The method contains a magic number: 1000,102
vert.x,io.vertx.core.http,SharedHttpClientTest,deploymentOptions,Long Statement,The length of the statement "return new DeploymentOptions().setInstances(instances).setConfig(new JsonObject().put("httpClientOptions"`options.toJson()));" is 125.,225
vert.x,io.vertx.core.http,WebSocketTest,testRejectHybi00,Magic Number,The method contains a magic number: 502,125
vert.x,io.vertx.core.http,WebSocketTest,testRejectHybi08,Magic Number,The method contains a magic number: 502,130
vert.x,io.vertx.core.http,WebSocketTest,testRejectWithStatusCode,Magic Number,The method contains a magic number: 404,135
vert.x,io.vertx.core.http,WebSocketTest,testRejectWithStatusCode,Magic Number,The method contains a magic number: 404,135
vert.x,io.vertx.core.http,WebSocketTest,testTLSClientTrustServerCertWithSNI,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.SNI_JKS_HOST2`Cert.SNI_JKS`Trust.NONE`false`false`false`false`true`true`true`true`new String[0]`(client) -> client.webSocket(4043`"host2.com"`"/"));" is 172.,255
vert.x,io.vertx.core.http,WebSocketTest,testTLSClientTrustServerCertWithSNI,Magic Number,The method contains a magic number: 4043,255
vert.x,io.vertx.core.http,WebSocketTest,testClearClientRequestOptionsSetSSL,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setHost(HttpTestBase.DEFAULT_HTTP_HOST).setURI("/").setPort(4043).setSsl(true);" is 141.,372
vert.x,io.vertx.core.http,WebSocketTest,testClearClientRequestOptionsSetSSL,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE`false`false`true`false`true`false`true`false`new String[0]`(client) -> client.webSocket(options));" is 154.,372
vert.x,io.vertx.core.http,WebSocketTest,testClearClientRequestOptionsSetSSL,Magic Number,The method contains a magic number: 4043,372
vert.x,io.vertx.core.http,WebSocketTest,testSSLClientRequestOptionsSetSSL,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setHost(HttpTestBase.DEFAULT_HTTP_HOST).setURI("/").setPort(4043).setSsl(true);" is 141.,379
vert.x,io.vertx.core.http,WebSocketTest,testSSLClientRequestOptionsSetSSL,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE`false`false`true`false`true`true`true`false`new String[0]`(client) -> client.webSocket(options));" is 153.,379
vert.x,io.vertx.core.http,WebSocketTest,testSSLClientRequestOptionsSetSSL,Magic Number,The method contains a magic number: 4043,379
vert.x,io.vertx.core.http,WebSocketTest,testClearClientRequestOptionsSetClear,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setHost(HttpTestBase.DEFAULT_HTTP_HOST).setURI("/").setPort(4043).setSsl(false);" is 142.,386
vert.x,io.vertx.core.http,WebSocketTest,testClearClientRequestOptionsSetClear,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE`false`false`true`false`true`false`false`false`new String[0]`(client) -> client.webSocket(options));" is 155.,386
vert.x,io.vertx.core.http,WebSocketTest,testClearClientRequestOptionsSetClear,Magic Number,The method contains a magic number: 4043,386
vert.x,io.vertx.core.http,WebSocketTest,testSSLClientRequestOptionsSetClear,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setHost(HttpTestBase.DEFAULT_HTTP_HOST).setURI("/").setPort(4043).setSsl(false);" is 142.,393
vert.x,io.vertx.core.http,WebSocketTest,testSSLClientRequestOptionsSetClear,Long Statement,The length of the statement "testTLS(Cert.NONE`Trust.NONE`Cert.SERVER_JKS`Trust.NONE`false`false`true`false`true`true`false`false`new String[0]`(client) -> client.webSocket(options));" is 154.,393
vert.x,io.vertx.core.http,WebSocketTest,testSSLClientRequestOptionsSetClear,Magic Number,The method contains a magic number: 4043,393
vert.x,io.vertx.core.http,WebSocketTest,testTLS,Long Parameter List,The method has 10 parameters. ,400
vert.x,io.vertx.core.http,WebSocketTest,testTLS,Long Statement,The length of the statement "testTLS(clientCert`clientTrust`serverCert`serverTrust`requireClientAuth`serverUsesCrl`clientTrustAll`clientUsesCrl`shouldPass`true`true`false`enabledCipherSuites`(client) -> client.webSocket(4043`HttpTestBase.DEFAULT_HTTP_HOST`"/"));" is 233.,400
vert.x,io.vertx.core.http,WebSocketTest,testTLS,Magic Number,The method contains a magic number: 4043,400
vert.x,io.vertx.core.http,WebSocketTest,testTLS,Complex Method,Cyclomatic complexity of the method is 10,411
vert.x,io.vertx.core.http,WebSocketTest,testTLS,Long Parameter List,The method has 14 parameters. ,411
vert.x,io.vertx.core.http,WebSocketTest,testTLS,Magic Number,The method contains a magic number: 4043,411
vert.x,io.vertx.core.http,WebSocketTest,testTLS,Magic Number,The method contains a magic number: 100,411
vert.x,io.vertx.core.http,WebSocketTest,testHandleWSManually,Magic Number,The method contains a magic number: 129,486
vert.x,io.vertx.core.http,WebSocketTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 2,515
vert.x,io.vertx.core.http,WebSocketTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 100,515
vert.x,io.vertx.core.http,WebSocketTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 10,515
vert.x,io.vertx.core.http,WebSocketTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 10,515
vert.x,io.vertx.core.http,WebSocketTest,testSharedServersRoundRobinWithOtherServerRunningOnDifferentPort,Magic Number,The method contains a magic number: 4321,567
vert.x,io.vertx.core.http,WebSocketTest,testSharedServersRoundRobinButFirstStartAndStopServer,Magic Number,The method contains a magic number: 4321,578
vert.x,io.vertx.core.http,WebSocketTest,testWSWriteStream,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path + "?" + query).setVersion(version);" is 163.,625
vert.x,io.vertx.core.http,WebSocketTest,testWSWriteStream,Magic Number,The method contains a magic number: 100,625
vert.x,io.vertx.core.http,WebSocketTest,testWSWriteStream,Magic Number,The method contains a magic number: 10,625
vert.x,io.vertx.core.http,WebSocketTest,testWSFrames,Complex Method,Cyclomatic complexity of the method is 16,676
vert.x,io.vertx.core.http,WebSocketTest,testWSFrames,Long Method,The method has 120 lines of code.,676
vert.x,io.vertx.core.http,WebSocketTest,testWSFrames,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path + "?" + query).setVersion(version);" is 163.,676
vert.x,io.vertx.core.http,WebSocketTest,testWSFrames,Magic Number,The method contains a magic number: 10,676
vert.x,io.vertx.core.http,WebSocketTest,testWSFrames,Magic Number,The method contains a magic number: 100,676
vert.x,io.vertx.core.http,WebSocketTest,testWSFrames,Magic Number,The method contains a magic number: 10,676
vert.x,io.vertx.core.http,WebSocketTest,testWriteFinalFrame,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT)).webSocketHandler(ws -> ws.frameHandler(frame -> {" is 131.,812
vert.x,io.vertx.core.http,WebSocketTest,testWriteFinalFrame,Magic Number,The method contains a magic number: 2,812
vert.x,io.vertx.core.http,WebSocketTest,testWriteFinalFrame,Magic Number,The method contains a magic number: 100,812
vert.x,io.vertx.core.http,WebSocketTest,testWriteFinalFrame,Magic Number,The method contains a magic number: 100,812
vert.x,io.vertx.core.http,WebSocketTest,testContinuationWriteFromConnectHandler,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path).setVersion(version);" is 149.,869
vert.x,io.vertx.core.http,WebSocketTest,testContinuationWriteFromConnectHandler,Magic Number,The method contains a magic number: 0x80,869
vert.x,io.vertx.core.http,WebSocketTest,testWriteFromConnectHandler,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path).setVersion(version);" is 149.,918
vert.x,io.vertx.core.http,WebSocketTest,testWSPermessageDeflateCompressionEnabled,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI("/")).onComplete(onSuccess(req -> {" is 132.,1020
vert.x,io.vertx.core.http,WebSocketTest,testWSPermessageDeflateCompressionEnabled,Long Statement,The length of the statement "req.putHeader("origin"`DEFAULT_HTTP_HOST).putHeader("Upgrade"`"Websocket").putHeader("Connection"`"upgrade").putHeader("Sec-WebSocket-Extensions"`"permessage-deflate").send().onComplete(onSuccess(resp -> {" is 205.,1020
vert.x,io.vertx.core.http,WebSocketTest,testWSPermessageDeflateCompressionEnabled,Magic Number,The method contains a magic number: 2,1020
vert.x,io.vertx.core.http,WebSocketTest,testWSPermessageDeflateCompressionEnabled,Magic Number,The method contains a magic number: 101,1020
vert.x,io.vertx.core.http,WebSocketTest,testConnectWithWebSocketCompressionDisabled,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT).setPerFrameWebSocketCompressionSupported(false).setPerMessageWebSocketCompressionSupported(false)).webSocketHandler(ws -> {" is 204.,1048
vert.x,io.vertx.core.http,WebSocketTest,testValidSubProtocol,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT).setWebSocketSubProtocols(serverSubProtocols)).webSocketHandler(ws -> {" is 151.,1085
vert.x,io.vertx.core.http,WebSocketTest,testValidSubProtocol,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path).setVersion(version).setSubProtocols(clientSubProtocols);" is 185.,1085
vert.x,io.vertx.core.http,WebSocketTest,testInvalidSubProtocol,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT).addWebSocketSubProtocol("invalid")).webSocketHandler(ws -> {" is 141.,1122
vert.x,io.vertx.core.http,WebSocketTest,testInvalidSubProtocol,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path).setVersion(version).addSubProtocol(subProtocol);" is 177.,1122
vert.x,io.vertx.core.http,WebSocketTest,testInvalidMissingConnectionHeader,Long Identifier,The length of the field INVALID_MISSING_CONNECTION_HEADER is 33.,1154
vert.x,io.vertx.core.http,WebSocketTest,testInvalidMissingConnectionHeader,Magic Number,The method contains a magic number: 400,1154
vert.x,io.vertx.core.http,WebSocketTest,testInvalidMissingConnectionHeaderRequestUpgrade,Long Identifier,The length of the field INVALID_MISSING_CONNECTION_HEADER is 33.,1160
vert.x,io.vertx.core.http,WebSocketTest,testInvalidMissingConnectionHeaderRequestUpgrade,Magic Number,The method contains a magic number: 400,1160
vert.x,io.vertx.core.http,WebSocketTest,testInvalidMethod,Magic Number,The method contains a magic number: 405,1179
vert.x,io.vertx.core.http,WebSocketTest,testInvalidMethodRequestUpgrade,Magic Number,The method contains a magic number: 405,1185
vert.x,io.vertx.core.http,WebSocketTest,testInvalidUri,Magic Number,The method contains a magic number: 400,1203
vert.x,io.vertx.core.http,WebSocketTest,testInvalidUriRequestUpgrade,Magic Number,The method contains a magic number: 400,1209
vert.x,io.vertx.core.http,WebSocketTest,testInvalidWebSocketVersion,Magic Number,The method contains a magic number: 426,1229
vert.x,io.vertx.core.http,WebSocketTest,testInvalidWebSocketVersionRequestUpgrade,Magic Number,The method contains a magic number: 426,1235
vert.x,io.vertx.core.http,WebSocketTest,testHandshakeException,Magic Number,The method contains a magic number: 400,1255
vert.x,io.vertx.core.http,WebSocketTest,testHandshakeExceptionRequestUpgrade,Magic Number,The method contains a magic number: 400,1261
vert.x,io.vertx.core.http,WebSocketTest,testInvalidHandshake,Empty catch clause,The method has an empty catch block.,1268
vert.x,io.vertx.core.http,WebSocketTest,testInvalidHandshake,Long Statement,The length of the statement "client.request(new RequestOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST)).onComplete(onSuccess(req2 -> {" is 121.,1268
vert.x,io.vertx.core.http,WebSocketTest,testReject,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path).setVersion(version);" is 149.,1316
vert.x,io.vertx.core.http,WebSocketTest,testAsyncAccept,Empty catch clause,The method has an empty catch block.,1348
vert.x,io.vertx.core.http,WebSocketTest,testAsyncAccept,Empty catch clause,The method has an empty catch block.,1348
vert.x,io.vertx.core.http,WebSocketTest,testAsyncAccept,Magic Number,The method contains a magic number: 500,1348
vert.x,io.vertx.core.http,WebSocketTest,testAsyncAccept,Magic Number,The method contains a magic number: 101,1348
vert.x,io.vertx.core.http,WebSocketTest,testClose,Magic Number,The method contains a magic number: 4,1425
vert.x,io.vertx.core.http,WebSocketTest,testRequestEntityTooLarge,Long Statement,The length of the statement "client.request(new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI(path)).onComplete(onSuccess(req -> req.putHeader("Upgrade"`"Websocket").putHeader("Connection"`"Upgrade").send(TestUtils.randomBuffer(8192 + 1)).onComplete(onSuccess(resp -> {" is 272.,1486
vert.x,io.vertx.core.http,WebSocketTest,testRequestEntityTooLarge,Magic Number,The method contains a magic number: 8192,1486
vert.x,io.vertx.core.http,WebSocketTest,testRequestEntityTooLarge,Magic Number,The method contains a magic number: 413,1486
vert.x,io.vertx.core.http,WebSocketTest,testWriteMessageHybi00,Magic Number,The method contains a magic number: 256,1506
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage1Hybi00,Magic Number,The method contains a magic number: 65536,1511
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage1Hybi00,Magic Number,The method contains a magic number: 256,1511
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi00,Magic Number,The method contains a magic number: 65536,1516
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi00,Magic Number,The method contains a magic number: 65536,1516
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi00,Magic Number,The method contains a magic number: 256,1516
vert.x,io.vertx.core.http,WebSocketTest,testWriteMessageHybi08,Magic Number,The method contains a magic number: 256,1521
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage1Hybi08,Magic Number,The method contains a magic number: 65536,1526
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage1Hybi08,Magic Number,The method contains a magic number: 256,1526
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi08,Magic Number,The method contains a magic number: 65536,1531
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi08,Magic Number,The method contains a magic number: 65536,1531
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi08,Magic Number,The method contains a magic number: 256,1531
vert.x,io.vertx.core.http,WebSocketTest,testWriteMessageHybi17,Magic Number,The method contains a magic number: 256,1536
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage1Hybi17,Magic Number,The method contains a magic number: 65536,1541
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage1Hybi17,Magic Number,The method contains a magic number: 256,1541
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi17,Magic Number,The method contains a magic number: 65536,1546
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi17,Magic Number,The method contains a magic number: 65536,1546
vert.x,io.vertx.core.http,WebSocketTest,testWriteFragmentedMessage2Hybi17,Magic Number,The method contains a magic number: 256,1546
vert.x,io.vertx.core.http,WebSocketTest,testWriteMessage,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI(path).setVersion(version);" is 149.,1551
vert.x,io.vertx.core.http,WebSocketTest,testWriteMessage,Magic Number,The method contains a magic number: 2,1551
vert.x,io.vertx.core.http,WebSocketTest,testNonFragmentedTextMessage2Hybi00,Magic Number,The method contains a magic number: 256,1583
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi07,Magic Number,The method contains a magic number: 65536,1589
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi07,Magic Number,The method contains a magic number: 65536,1589
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi07,Magic Number,The method contains a magic number: 256,1589
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi08,Magic Number,The method contains a magic number: 65536,1595
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi08,Magic Number,The method contains a magic number: 65536,1595
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi08,Magic Number,The method contains a magic number: 256,1595
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi13,Magic Number,The method contains a magic number: 65536,1601
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi13,Magic Number,The method contains a magic number: 65536,1601
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedTextMessage2Hybi13,Magic Number,The method contains a magic number: 256,1601
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedUnicodeTextMessage2Hybi07,Magic Number,The method contains a magic number: 65536,1613
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedUnicodeTextMessage2Hybi07,Magic Number,The method contains a magic number: 256,1613
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedUnicodeTextMessage2Hybi08,Magic Number,The method contains a magic number: 65536,1619
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedUnicodeTextMessage2Hybi08,Magic Number,The method contains a magic number: 256,1619
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedUnicodeTextMessage2Hybi13,Magic Number,The method contains a magic number: 65536,1625
vert.x,io.vertx.core.http,WebSocketTest,testFragmentedUnicodeTextMessage2Hybi13,Magic Number,The method contains a magic number: 256,1625
vert.x,io.vertx.core.http,WebSocketTest,testContinueAfterTooLargeMessage,Magic Number,The method contains a magic number: 2,1644
vert.x,io.vertx.core.http,WebSocketTest,testWriteTextMessages,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path).setVersion(version);" is 149.,1666
vert.x,io.vertx.core.http,WebSocketTest,testHandshakeTimeout,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(1234).setHost(DEFAULT_HTTP_HOST).setURI("/").setTimeout(1000);" is 132.,1713
vert.x,io.vertx.core.http,WebSocketTest,testHandshakeTimeout,Magic Number,The method contains a magic number: 1234,1713
vert.x,io.vertx.core.http,WebSocketTest,testHandshakeTimeout,Magic Number,The method contains a magic number: 20,1713
vert.x,io.vertx.core.http,WebSocketTest,testHandshakeTimeout,Magic Number,The method contains a magic number: 1000,1713
vert.x,io.vertx.core.http,WebSocketTest,testHandshakeTimeout,Magic Number,The method contains a magic number: 1234,1713
vert.x,io.vertx.core.http,WebSocketTest,testHandshakeTimeout,Magic Number,The method contains a magic number: 1000,1713
vert.x,io.vertx.core.http,WebSocketTest,connectUntilWebSocketReject,Magic Number,The method contains a magic number: 100,1740
vert.x,io.vertx.core.http,WebSocketTest,connectUntilWebSocketReject,Magic Number,The method contains a magic number: 100,1740
vert.x,io.vertx.core.http,WebSocketTest,testClearClientHandlersOnEnd,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT)).webSocketHandler(WebSocketBase::close);" is 121.,1781
vert.x,io.vertx.core.http,WebSocketTest,testWriteOnEnd,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT)).webSocketHandler(WebSocketBase::close);" is 121.,1805
vert.x,io.vertx.core.http,WebSocketTest,testReceiveHttpResponseHeadersOnClient,Magic Number,The method contains a magic number: 2,1823
vert.x,io.vertx.core.http,WebSocketTest,testUpgrade,Empty catch clause,The method has an empty catch block.,1857
vert.x,io.vertx.core.http,WebSocketTest,testUpgrade,Empty catch clause,The method has an empty catch block.,1857
vert.x,io.vertx.core.http,WebSocketTest,testUpgradeInvalidRequest,Long Statement,The length of the statement "client.request(HttpMethod.GET`DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST`"/").compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 134.,1983
vert.x,io.vertx.core.http,WebSocketTest,testUpgradeInvalidRequest,Magic Number,The method contains a magic number: 2,1983
vert.x,io.vertx.core.http,WebSocketTest,handshakeWithCookie,Magic Number,The method contains a magic number: 500,2024
vert.x,io.vertx.core.http,WebSocketTest,handshake,Magic Number,The method contains a magic number: 500,2049
vert.x,io.vertx.core.http,WebSocketTest,handshake,Long Statement,The length of the statement "client.request(new RequestOptions().setHost(DEFAULT_HTTP_HOST).setPort(DEFAULT_HTTP_PORT).setURI("/")).onComplete(onSuccess(req -> {" is 132.,2072
vert.x,io.vertx.core.http,WebSocketTest,handshake,Long Statement,The length of the statement "req.putHeader("Upgrade"`"websocket").putHeader("Connection"`"Upgrade").putHeader("Sec-WebSocket-Key"`"dGhlIHNhbXBsZSBub25jZQ==").putHeader("Sec-WebSocket-Protocol"`"chat").putHeader("Sec-WebSocket-Version"`"13").putHeader("Origin"`"http://example.com");" is 253.,2072
vert.x,io.vertx.core.http,WebSocketTest,testRaceConditionWithWebSocketClient,Magic Number,The method contains a magic number: 0x82,2089
vert.x,io.vertx.core.http,WebSocketTest,testRaceConditionWithWebSocketClientWorker2,Magic Number,The method contains a magic number: 4,2119
vert.x,io.vertx.core.http,WebSocketTest,testWorker,Magic Number,The method contains a magic number: 2,2141
vert.x,io.vertx.core.http,WebSocketTest,httpClientWebSocketConnectionFailureHandlerShouldBeCalled,Magic Number,The method contains a magic number: 7867,2188
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketWithHttp2Client,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setHttp2ClearTextUpgrade(false).setProtocolVersion(HttpVersion.HTTP_2));" is 126.,2198
vert.x,io.vertx.core.http,WebSocketTest,doTestClientWebSocketConnectionCloseOnBadResponse,Complex Method,Cyclomatic complexity of the method is 9,2244
vert.x,io.vertx.core.http,WebSocketTest,doTestClientWebSocketConnectionCloseOnBadResponse,Long Statement,The length of the statement "throw new AssertionError("Timed out waiting for expected state` current: serverGotClose = " + serverGotClose + "` clientGotCorrectException = "+ clientGotCorrectException);" is 172.,2244
vert.x,io.vertx.core.http,WebSocketTest,doTestClientWebSocketConnectionCloseOnBadResponse,Magic Number,The method contains a magic number: 230,2244
vert.x,io.vertx.core.http,WebSocketTest,doTestClientWebSocketConnectionCloseOnBadResponse,Magic Number,The method contains a magic number: 20,2244
vert.x,io.vertx.core.http,WebSocketTest,doTestClientWebSocketConnectionCloseOnBadResponse,Magic Number,The method contains a magic number: 200,2244
vert.x,io.vertx.core.http,WebSocketTest,testClearClientSslOptions,Long Statement,The length of the statement "HttpServerOptions serverOptions=new HttpServerOptions().setPort(DEFAULT_HTTPS_PORT).setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get());" is 138.,2309
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPingPong,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST));" is 140.,2331
vert.x,io.vertx.core.http,WebSocketTest,testWebSocketPausePing,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST));" is 140.,2356
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPingExceeds125Bytes,Magic Number,The method contains a magic number: 255,2383
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPingExceeds125Bytes,Magic Number,The method contains a magic number: 126,2383
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPongExceeds125Bytes,Magic Number,The method contains a magic number: 255,2388
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPongExceeds125Bytes,Magic Number,The method contains a magic number: 126,2388
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPingExceedsMaxFrameSize,Magic Number,The method contains a magic number: 100,2393
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPingExceedsMaxFrameSize,Magic Number,The method contains a magic number: 101,2393
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPongExceedsMaxFrameSize,Magic Number,The method contains a magic number: 100,2398
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPongExceedsMaxFrameSize,Magic Number,The method contains a magic number: 101,2398
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketPingPongCheck,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2403
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketSendPingExceeds125Bytes,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2429
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketSendPingExceeds125Bytes,Magic Number,The method contains a magic number: 126,2429
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketSendPingExceeds125Bytes,Magic Number,The method contains a magic number: 256,2429
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketSendPingExceeds125Bytes,Magic Number,The method contains a magic number: 2000,2429
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketSendPingExceeds125Bytes,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2446
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketSendPingExceeds125Bytes,Magic Number,The method contains a magic number: 126,2446
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketSendPingExceeds125Bytes,Magic Number,The method contains a magic number: 256,2446
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketSendPingExceeds125Bytes,Magic Number,The method contains a magic number: 2000,2446
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketSendPongExceeds125Bytes,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2463
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketSendPongExceeds125Bytes,Magic Number,The method contains a magic number: 126,2463
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketSendPongExceeds125Bytes,Magic Number,The method contains a magic number: 256,2463
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketSendPongExceeds125Bytes,Magic Number,The method contains a magic number: 2000,2463
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketSendPongExceeds125Bytes,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2483
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketSendPongExceeds125Bytes,Magic Number,The method contains a magic number: 126,2483
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketSendPongExceeds125Bytes,Magic Number,The method contains a magic number: 256,2483
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketSendPongExceeds125Bytes,Magic Number,The method contains a magic number: 2000,2483
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketReceivePongExceedsMaxFrameSize,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2501
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketReceivePongExceedsMaxFrameSize,Magic Number,The method contains a magic number: 113,2501
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketReceivePongExceedsMaxFrameSize,Magic Number,The method contains a magic number: 64,2501
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketReceivePongExceedsMaxFrameSize,Magic Number,The method contains a magic number: 2,2501
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketReceivePongExceedsMaxFrameSize,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2532
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketReceivePongExceedsMaxFrameSize,Magic Number,The method contains a magic number: 113,2532
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketReceivePongExceedsMaxFrameSize,Magic Number,The method contains a magic number: 64,2532
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketReceivePongExceedsMaxFrameSize,Magic Number,The method contains a magic number: 2,2532
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketReceivePingExceedsMaxFrameSize,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2565
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketReceivePingExceedsMaxFrameSize,Magic Number,The method contains a magic number: 113,2565
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketReceivePingExceedsMaxFrameSize,Magic Number,The method contains a magic number: 64,2565
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketReceivePingExceedsMaxFrameSize,Magic Number,The method contains a magic number: 2,2565
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketReceivePingExceedsMaxFrameSize,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST).setMaxWebSocketFrameSize(maxFrameSize));" is 179.,2599
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketReceivePingExceedsMaxFrameSize,Magic Number,The method contains a magic number: 113,2599
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketReceivePingExceedsMaxFrameSize,Magic Number,The method contains a magic number: 64,2599
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketReceivePingExceedsMaxFrameSize,Magic Number,The method contains a magic number: 2,2599
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketPingPong,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setIdleTimeout(1).setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST));" is 140.,2633
vert.x,io.vertx.core.http,WebSocketTest,testWebSocketAbs,Long Statement,The length of the statement "HttpServerOptions serverOptions=new HttpServerOptions().setPort(DEFAULT_HTTPS_PORT).setSsl(true).setKeyCertOptions(Cert.SERVER_JKS.get());" is 138.,2650
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromServer,Magic Number,The method contains a magic number: 3,2678
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromServerWithHandler,Magic Number,The method contains a magic number: 4,2684
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromServer,Magic Number,The method contains a magic number: 100,2690
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromServer,Magic Number,The method contains a magic number: 1000,2690
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromServer,Magic Number,The method contains a magic number: 1000,2690
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromServer,Magic Number,The method contains a magic number: 1000,2690
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromClient,Magic Number,The method contains a magic number: 2,2717
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromClient,Magic Number,The method contains a magic number: 1000,2717
vert.x,io.vertx.core.http,WebSocketTest,testCloseStatusCodeFromClient,Magic Number,The method contains a magic number: 1000,2717
vert.x,io.vertx.core.http,WebSocketTest,testCloseFrame,Magic Number,The method contains a magic number: 3,2738
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromServer,Magic Number,The method contains a magic number: 2,2768
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromServerWithHandler,Magic Number,The method contains a magic number: 3,2774
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromServer,Long Statement,The length of the statement "assertEquals(TEST_REASON`((BufferInternal)frame.binaryData()).getByteBuf().readerIndex(2).toString(StandardCharsets.UTF_8));" is 124.,2780
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromServer,Magic Number,The method contains a magic number: 100,2780
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromServer,Magic Number,The method contains a magic number: 2,2780
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromClient,Magic Number,The method contains a magic number: 2,2806
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromClientWithHandler,Magic Number,The method contains a magic number: 3,2812
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromClient,Long Statement,The length of the statement "assertEquals(TEST_REASON`((BufferInternal)frame.binaryData()).getByteBuf().readerIndex(2).toString(StandardCharsets.UTF_8));" is 124.,2818
vert.x,io.vertx.core.http,WebSocketTest,testCloseCustomPayloadFromClient,Magic Number,The method contains a magic number: 2,2818
vert.x,io.vertx.core.http,WebSocketTest,testServerCloseHandshake,Magic Number,The method contains a magic number: 4000,2838
vert.x,io.vertx.core.http,WebSocketTest,testServerCloseHandshake,Magic Number,The method contains a magic number: 100,2838
vert.x,io.vertx.core.http,WebSocketTest,testServerCloseHandshake,Magic Number,The method contains a magic number: 2,2838
vert.x,io.vertx.core.http,WebSocketTest,testServerCloseHandshake,Magic Number,The method contains a magic number: 101,2838
vert.x,io.vertx.core.http,WebSocketTest,testServerCloseHandshake,Magic Number,The method contains a magic number: 1000,2838
vert.x,io.vertx.core.http,WebSocketTest,testServerCloseHandshake,Magic Number,The method contains a magic number: 10,2838
vert.x,io.vertx.core.http,WebSocketTest,testClientCloseHandshake,Magic Number,The method contains a magic number: 2,2883
vert.x,io.vertx.core.http,WebSocketTest,testClientCloseHandshake,Magic Number,The method contains a magic number: 1000,2883
vert.x,io.vertx.core.http,WebSocketTest,testClientCloseHandshake,Magic Number,The method contains a magic number: 4000,2883
vert.x,io.vertx.core.http,WebSocketTest,testClientCloseHandshake,Magic Number,The method contains a magic number: 100,2883
vert.x,io.vertx.core.http,WebSocketTest,testClientCloseHandshake,Magic Number,The method contains a magic number: 10,2883
vert.x,io.vertx.core.http,WebSocketTest,testClientConnectionCloseTimeout,Magic Number,The method contains a magic number: 3,2939
vert.x,io.vertx.core.http,WebSocketTest,testClientConnectionCloseTimeout,Magic Number,The method contains a magic number: 1000,2939
vert.x,io.vertx.core.http,WebSocketTest,testServerConnectionClose,Magic Number,The method contains a magic number: 3,2994
vert.x,io.vertx.core.http,WebSocketTest,testServerConnectionClose,Magic Number,The method contains a magic number: 5000,2994
vert.x,io.vertx.core.http,WebSocketTest,testServerConnectionClose,Magic Number,The method contains a magic number: 101,2994
vert.x,io.vertx.core.http,WebSocketTest,testServerConnectionClose,Magic Number,The method contains a magic number: 1000,2994
vert.x,io.vertx.core.http,WebSocketTest,testReportProtocolViolationOnClient,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI("/some/path").setVersion(WebsocketVersion.V13);" is 170.,3074
vert.x,io.vertx.core.http,WebSocketTest,testReportProtocolViolationOnClient,Magic Number,The method contains a magic number: 0x8,3074
vert.x,io.vertx.core.http,WebSocketTest,testReportProtocolViolationOnServer,Magic Number,The method contains a magic number: 101,3104
vert.x,io.vertx.core.http,WebSocketTest,testReportProtocolViolationOnServer,Magic Number,The method contains a magic number: 0x8,3104
vert.x,io.vertx.core.http,WebSocketTest,testServerWebSocketShouldBeClosedWhenTheClosedHandlerIsCalled,Magic Number,The method contains a magic number: 1000,3129
vert.x,io.vertx.core.http,WebSocketTest,testClientWebSocketShouldBeClosedWhenTheClosedHandlerIsCalled,Magic Number,The method contains a magic number: 1000,3155
vert.x,io.vertx.core.http,WebSocketTest,testDontReceiveMessagerAfterCloseHandlerCalled,Magic Number,The method contains a magic number: 10,3179
vert.x,io.vertx.core.http,WebSocketTest,testDontReceiveMessagerAfterCloseHandlerCalled,Magic Number,The method contains a magic number: 500,3179
vert.x,io.vertx.core.http,WebSocketTest,testDontReceiveMessagerAfterCloseHandlerCalled,Magic Number,The method contains a magic number: 1000,3179
vert.x,io.vertx.core.http,WebSocketTest,testNoRequestHandler,Long Statement,The length of the statement "vertx.createHttpServer().webSocketHandler(ws -> fail()).listen(DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST).onComplete(onSuccess(v -> latch.countDown()));" is 146.,3218
vert.x,io.vertx.core.http,WebSocketTest,testNoRequestHandler,Magic Number,The method contains a magic number: 400,3218
vert.x,io.vertx.core.http,WebSocketTest,testPausedBeforeClosed,Magic Number,The method contains a magic number: 2,3264
vert.x,io.vertx.core.http,WebSocketTest,testPausedBeforeClosed,Magic Number,The method contains a magic number: 128,3264
vert.x,io.vertx.core.http,WebSocketTest,testContext,Magic Number,The method contains a magic number: 10,3297
vert.x,io.vertx.core.http,WebSocketTest,fillQueue,Magic Number,The method contains a magic number: 512,3343
vert.x,io.vertx.core.http,WebSocketTest,testDrainClientWebSocket,Magic Number,The method contains a magic number: 512,3377
vert.x,io.vertx.core.http,WebSocketTest,testWriteHandlerSuccess,Magic Number,The method contains a magic number: 2,3401
vert.x,io.vertx.core.http,WebSocketTest,testWriteHandlerFailure,Magic Number,The method contains a magic number: 1024,3420
vert.x,io.vertx.core.http,WebSocketTest,testHAProxy,Magic Number,The method contains a magic number: 2,3462
vert.x,io.vertx.core.http,WebSocketTest,testHAProxy,Magic Number,The method contains a magic number: 56324,3462
vert.x,io.vertx.core.http,WebSocketTest,testHAProxy,Magic Number,The method contains a magic number: 443,3462
vert.x,io.vertx.core.http,WebSocketTest,testWebSocketDisablesALPN,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setProtocolVersion(HttpVersion.HTTP_2).setUseAlpn(true).setSsl(true).setTrustAll(true));" is 142.,3494
vert.x,io.vertx.core.http,WebSocketTest,testWebSocketDisablesALPN,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setSsl(true).setUseAlpn(true).setSni(true).setKeyCertOptions(Cert.SERVER_PEM.get())).requestHandler(req -> req.response().end()).webSocketHandler(ws -> {" is 207.,3494
vert.x,io.vertx.core.http,WebSocketTest,testSetOriginHeaderV08,Long Statement,The length of the statement "testOriginHeader(WebsocketVersion.V08`true`"http://www.example.com"`HttpHeaderNames.SEC_WEBSOCKET_ORIGIN`"http://www.example.com");" is 131.,3545
vert.x,io.vertx.core.http,WebSocketTest,testSetOriginHeaderV07,Long Statement,The length of the statement "testOriginHeader(WebsocketVersion.V07`true`"http://www.example.com"`HttpHeaderNames.SEC_WEBSOCKET_ORIGIN`"http://www.example.com");" is 131.,3560
vert.x,io.vertx.core.http,WebSocketTest,testOriginHeader,Long Parameter List,The method has 5 parameters. ,3575
vert.x,io.vertx.core.http,WebSocketTest,testOriginHeader,Long Statement,The length of the statement "server=vertx.createHttpServer(new HttpServerOptions().setPort(DEFAULT_HTTP_PORT).setHost(HttpTestBase.DEFAULT_HTTP_HOST));" is 122.,3575
vert.x,io.vertx.core.http,WebSocketTest,testOriginHeader,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setVersion(version).setAllowOriginHeader(allow).setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI("/");" is 176.,3575
vert.x,io.vertx.core.http,WebSocketTest,testWriteHandlerIdNullByDefault,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path);" is 129.,3601
vert.x,io.vertx.core.http,WebSocketTest,testWriteHandlerIdNullByDefault,Magic Number,The method contains a magic number: 2,3601
vert.x,io.vertx.core.http,WebSocketTest,testFanoutWithBinary,Long Statement,The length of the statement "testFanout(Buffer.buffer("hello")`Buffer.buffer("bye")`WebSocketBase::binaryHandlerID`WebSocketBase::binaryMessageHandler`WebSocket::writeBinaryMessage);" is 153.,3640
vert.x,io.vertx.core.http,WebSocketTest,testFanout,Long Parameter List,The method has 5 parameters. ,3650
vert.x,io.vertx.core.http,WebSocketTest,testFanout,Long Statement,The length of the statement "HttpServerOptions httpServerOptions=new HttpServerOptions().setPort(DEFAULT_HTTP_PORT).setRegisterWebSocketWriteHandlers(true);" is 127.,3650
vert.x,io.vertx.core.http,WebSocketTest,testFanout,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setURI(path);" is 129.,3650
vert.x,io.vertx.core.http,WebSocketTest,testFanout,Magic Number,The method contains a magic number: 10,3650
vert.x,io.vertx.core.net,ClientOptionsBaseConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 15,20
vert.x,io.vertx.core.net,JksOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 12,20
vert.x,io.vertx.core.net,KeyStoreOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 16,20
vert.x,io.vertx.core.net,KeyStoreOptionsConverter,toJson,Complex Method,Cyclomatic complexity of the method is 8,66
vert.x,io.vertx.core.net,NetClientOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 13,20
vert.x,io.vertx.core.net,NetServerOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 22,20
vert.x,io.vertx.core.net,NetServerOptionsConverter,fromJson,Long Statement,The length of the statement "obj.setTrafficShapingOptions(new io.vertx.core.net.TrafficShapingOptions((io.vertx.core.json.JsonObject)member.getValue()));" is 124.,20
vert.x,io.vertx.core.net,NetworkOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 16,20
vert.x,io.vertx.core.net,PemKeyCertOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 22,20
vert.x,io.vertx.core.net,PemTrustOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 8,20
vert.x,io.vertx.core.net,PfxOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 12,20
vert.x,io.vertx.core.net,ProxyOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 12,20
vert.x,io.vertx.core.net,SSLOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 20,20
vert.x,io.vertx.core.net,TCPSSLOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 60,20
vert.x,io.vertx.core.net,TCPSSLOptionsConverter,fromJson,Long Method,The method has 155 lines of code.,20
vert.x,io.vertx.core.net,TCPSSLOptionsConverter,fromJson,Long Statement,The length of the statement "obj.setOpenSslEngineOptions(new io.vertx.core.net.OpenSSLEngineOptions((io.vertx.core.json.JsonObject)member.getValue()));" is 122.,20
vert.x,io.vertx.core.net,TCPSSLOptionsConverter,toJson,Complex Method,Cyclomatic complexity of the method is 15,180
vert.x,io.vertx.core.net,TrafficShapingOptionsConverter,fromJson,Complex Method,Cyclomatic complexity of the method is 17,20
vert.x,io.vertx.core.net,JdkSSLEngineOptions,isAlpnAvailable,Empty catch clause,The method has an empty catch block.,32
vert.x,io.vertx.core.net,KeyManagerFactoryOptions,KeyManagerFactoryOptions,Complex Conditional,The conditional expression keyManagerFactory == null || keyManagerFactory.getKeyManagers() == null || keyManagerFactory.getKeyManagers().length == 0 is complex.,56
vert.x,io.vertx.core.net,KeyManagerFactoryOptions,KeyManagerFactoryOptions,Long Statement,The length of the statement "if (keyManagerFactory == null || keyManagerFactory.getKeyManagers() == null || keyManagerFactory.getKeyManagers().length == 0) {" is 128.,56
vert.x,io.vertx.core.net,KeyStoreOptionsBase,getHelper,Long Statement,The length of the statement "helper=new KeyStoreHelper(KeyStoreHelper.loadKeyStore(type`provider`password`value`getAlias())`password`getAliasPassword());" is 124.,177
vert.x,io.vertx.core.net,KeyStoreOptionsBase,equals,Long Statement,The length of the statement "return Objects.equals(provider`that.provider) && Objects.equals(type`that.type) && Objects.equals(password`that.password)&& Objects.equals(path`that.path)&& Objects.equals(value`that.value)&& Objects.equals(alias`that.alias)&& Objects.equals(aliasPassword`that.aliasPassword);" is 276.,231
vert.x,io.vertx.core.net,NetClientOptions,NetClientOptions,Long Statement,The length of the statement "this.applicationLayerProtocols=other.applicationLayerProtocols != null ? new ArrayList<>(other.applicationLayerProtocols) : null;" is 129.,67
vert.x,io.vertx.core.net,NetClientOptions,init,Long Identifier,The length of the field DEFAULT_HOSTNAME_VERIFICATION_ALGORITHM is 39.,101
vert.x,io.vertx.core.net,NetClientOptions,init,Long Identifier,The length of the field DEFAULT_REGISTER_WRITE_HANDLER is 30.,101
vert.x,io.vertx.core.net,NetClientOptions,setEnabledSecureTransportProtocols,Long Identifier,The length of the parameter enabledSecureTransportProtocols is 31.,426
vert.x,io.vertx.core.net,NetServerOptions,NetServerOptions,Long Identifier,The length of the field DEFAULT_PROXY_PROTOCOL_TIMEOUT_TIME_UNIT is 40.,100
vert.x,io.vertx.core.net,NetServerOptions,NetServerOptions,Long Statement,The length of the statement "this.proxyProtocolTimeoutUnit=other.getProxyProtocolTimeoutUnit() != null ? other.getProxyProtocolTimeoutUnit() : DEFAULT_PROXY_PROTOCOL_TIMEOUT_TIME_UNIT;" is 155.,100
vert.x,io.vertx.core.net,NetServerOptions,setEnabledSecureTransportProtocols,Long Identifier,The length of the parameter enabledSecureTransportProtocols is 31.,335
vert.x,io.vertx.core.net,NetServerOptions,setPort,Magic Number,The method contains a magic number: 65535,376
vert.x,io.vertx.core.net,NetServerOptions,init,Long Identifier,The length of the field DEFAULT_PROXY_PROTOCOL_TIMEOUT is 30.,524
vert.x,io.vertx.core.net,NetServerOptions,init,Long Identifier,The length of the field DEFAULT_PROXY_PROTOCOL_TIMEOUT_TIME_UNIT is 40.,524
vert.x,io.vertx.core.net,NetServerOptions,init,Long Identifier,The length of the field DEFAULT_REGISTER_WRITE_HANDLER is 30.,524
vert.x,io.vertx.core.net,NetworkOptions,setReceiveBufferSize,Long Statement,The length of the statement "Arguments.require(receiveBufferSize > 0 || receiveBufferSize == DEFAULT_RECEIVE_BUFFER_SIZE`"receiveBufferSize must be > 0");" is 125.,149
vert.x,io.vertx.core.net,NetworkOptions,setTrafficClass,Magic Number,The method contains a magic number: 255,185
vert.x,io.vertx.core.net,PemKeyCertOptions,equals,Long Statement,The length of the statement "return Objects.equals(keyPaths`that.keyPaths) && Objects.equals(keyValues`that.keyValues) && Objects.equals(certPaths`that.certPaths)&& Objects.equals(certValues`that.certValues);" is 179.,388
vert.x,io.vertx.core.net,PemTrustOptions,getHelper,Long Statement,The length of the statement "Stream<Buffer> certValues=certPaths.stream().map(path -> ((VertxInternal)vertx).resolveFile(path).getAbsolutePath()).map(vertx.fileSystem()::readFileBlocking);" is 159.,195
vert.x,io.vertx.core.net,ProxyOptions,setPort,Magic Number,The method contains a magic number: 65535,123
vert.x,io.vertx.core.net,SocketAddress,inetSocketAddress,Magic Number,The method contains a magic number: 65535,51
vert.x,io.vertx.core.net,SSLOptions,SSLOptions,Long Identifier,The length of the field enabledSecureTransportProtocols is 31.,86
vert.x,io.vertx.core.net,SSLOptions,SSLOptions,Long Identifier,The length of the field DEFAULT_SSL_HANDSHAKE_TIMEOUT_TIME_UNIT is 39.,86
vert.x,io.vertx.core.net,SSLOptions,SSLOptions,Long Statement,The length of the statement "this.sslHandshakeTimeoutUnit=other.getSslHandshakeTimeoutUnit() != null ? other.getSslHandshakeTimeoutUnit() : DEFAULT_SSL_HANDSHAKE_TIMEOUT_TIME_UNIT;" is 151.,86
vert.x,io.vertx.core.net,SSLOptions,SSLOptions,Long Statement,The length of the statement "this.enabledCipherSuites=other.getEnabledCipherSuites() == null ? new LinkedHashSet<>() : new LinkedHashSet<>(other.getEnabledCipherSuites());" is 142.,86
vert.x,io.vertx.core.net,SSLOptions,SSLOptions,Long Statement,The length of the statement "this.enabledSecureTransportProtocols=other.getEnabledSecureTransportProtocols() == null ? new LinkedHashSet<>() : new LinkedHashSet<>(other.getEnabledSecureTransportProtocols());" is 178.,86
vert.x,io.vertx.core.net,SSLOptions,init,Long Identifier,The length of the field DEFAULT_SSL_HANDSHAKE_TIMEOUT_TIME_UNIT is 39.,104
vert.x,io.vertx.core.net,SSLOptions,init,Long Identifier,The length of the field enabledSecureTransportProtocols is 31.,104
vert.x,io.vertx.core.net,SSLOptions,init,Long Identifier,The length of the field DEFAULT_ENABLED_SECURE_TRANSPORT_PROTOCOLS is 42.,104
vert.x,io.vertx.core.net,SSLOptions,getEnabledSecureTransportProtocols,Long Identifier,The length of the field enabledSecureTransportProtocols is 31.,247
vert.x,io.vertx.core.net,SSLOptions,setEnabledSecureTransportProtocols,Long Identifier,The length of the parameter enabledSecureTransportProtocols is 31.,294
vert.x,io.vertx.core.net,SSLOptions,setEnabledSecureTransportProtocols,Long Identifier,The length of the field enabledSecureTransportProtocols is 31.,294
vert.x,io.vertx.core.net,SSLOptions,addEnabledSecureTransportProtocol,Long Identifier,The length of the field enabledSecureTransportProtocols is 31.,305
vert.x,io.vertx.core.net,SSLOptions,removeEnabledSecureTransportProtocol,Long Identifier,The length of the field enabledSecureTransportProtocols is 31.,316
vert.x,io.vertx.core.net,SSLOptions,equals,Long Identifier,The length of the field enabledSecureTransportProtocols is 31.,327
vert.x,io.vertx.core.net,SSLOptions,equals,Long Statement,The length of the statement "return sslHandshakeTimeoutUnit.toNanos(sslHandshakeTimeout) == that.sslHandshakeTimeoutUnit.toNanos(that.sslHandshakeTimeout) && Objects.equals(keyCertOptions`that.keyCertOptions) && Objects.equals(trustOptions`that.trustOptions) && Objects.equals(enabledCipherSuites`that.enabledCipherSuites) && Objects.equals(crlPaths`that.crlPaths) && Objects.equals(crlValues`that.crlValues) && useAlpn == that.useAlpn && Objects.equals(enabledSecureTransportProtocols`that.enabledSecureTransportProtocols);" is 495.,327
vert.x,io.vertx.core.net,TCPSSLOptions,TCPSSLOptions,Abstract Function Call From Constructor,The constructor TCPSSLOptions calls a virtual method copy.,141
vert.x,io.vertx.core.net,TCPSSLOptions,TCPSSLOptions,Long Identifier,The length of the field DEFAULT_IDLE_TIMEOUT_TIME_UNIT is 30.,141
vert.x,io.vertx.core.net,TCPSSLOptions,init,Long Identifier,The length of the field DEFAULT_IDLE_TIMEOUT_TIME_UNIT is 30.,186
vert.x,io.vertx.core.net,TCPSSLOptions,setEnabledSecureTransportProtocols,Long Identifier,The length of the parameter enabledSecureTransportProtocols is 31.,654
vert.x,io.vertx.core.net,TrustManagerFactoryOptions,TrustManagerFactoryOptions,Complex Conditional,The conditional expression trustManagerFactory == null || trustManagerFactory.getTrustManagers() == null || trustManagerFactory.getTrustManagers().length == 0 is complex.,55
vert.x,io.vertx.core.net,TrustManagerFactoryOptions,TrustManagerFactoryOptions,Long Statement,The length of the statement "if (trustManagerFactory == null || trustManagerFactory.getTrustManagers() == null || trustManagerFactory.getTrustManagers().length == 0) {" is 138.,55
vert.x,io.vertx.core.net,KeyStoreHelperTest,testKeyStoreHelperSupportsPKCS8ECPrivateKey,Long Statement,The length of the statement "PemKeyCertOptions options=new PemKeyCertOptions().addKeyPath("tls/server-key-ec.pem").addCertPath("tls/server-cert-ec.pem");" is 124.,54
vert.x,io.vertx.core.net,KeyStoreHelperTest,testKeyStoreHelperSupportsReadingECPrivateKeyFromPEMFile,Long Statement,The length of the statement "PemKeyCertOptions options=new PemKeyCertOptions().addKeyPath("tls/server-key-ec-pkcs1.pem").addCertPath("tls/server-cert-ec.pem");" is 130.,71
vert.x,io.vertx.core.net,KeyStoreTest,testJKSOptions,Magic Number,The method contains a magic number: 100,41
vert.x,io.vertx.core.net,KeyStoreTest,testJKSOptions,Magic Number,The method contains a magic number: 100,41
vert.x,io.vertx.core.net,KeyStoreTest,testJKSOptionsJson,Magic Number,The method contains a magic number: 100,65
vert.x,io.vertx.core.net,KeyStoreTest,testJKSOptionsJson,Magic Number,The method contains a magic number: 100,65
vert.x,io.vertx.core.net,KeyStoreTest,testJKSOptionsJson,Magic Number,The method contains a magic number: 100,65
vert.x,io.vertx.core.net,KeyStoreTest,testCopyJKSOptions,Magic Number,The method contains a magic number: 100,84
vert.x,io.vertx.core.net,KeyStoreTest,testCopyJKSOptions,Magic Number,The method contains a magic number: 100,84
vert.x,io.vertx.core.net,KeyStoreTest,testCopyJKSOptions,Magic Number,The method contains a magic number: 100,84
vert.x,io.vertx.core.net,KeyStoreTest,testPKCS12Options,Magic Number,The method contains a magic number: 100,103
vert.x,io.vertx.core.net,KeyStoreTest,testPKCS12Options,Magic Number,The method contains a magic number: 100,103
vert.x,io.vertx.core.net,KeyStoreTest,testPKCS12OptionsJson,Magic Number,The method contains a magic number: 100,127
vert.x,io.vertx.core.net,KeyStoreTest,testPKCS12OptionsJson,Magic Number,The method contains a magic number: 100,127
vert.x,io.vertx.core.net,KeyStoreTest,testPKCS12OptionsJson,Magic Number,The method contains a magic number: 100,127
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPKCS12Options,Magic Number,The method contains a magic number: 100,146
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPKCS12Options,Magic Number,The method contains a magic number: 100,146
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPKCS12Options,Magic Number,The method contains a magic number: 100,146
vert.x,io.vertx.core.net,KeyStoreTest,testKeyCertOptions,Magic Number,The method contains a magic number: 100,165
vert.x,io.vertx.core.net,KeyStoreTest,testKeyCertOptions,Magic Number,The method contains a magic number: 100,165
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Long Statement,The length of the statement "options=new PemKeyCertOptions(new JsonObject().put("keyPath"`keyPath1).put("keyValue"`keyValue1.getBytes()).put("certPath"`certPath1).put("certValue"`certValue1.getBytes()));" is 174.,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Long Statement,The length of the statement "options=new PemKeyCertOptions(new JsonObject().put("keyPaths"`new JsonArray().add(keyPath1).add(keyPath2)).put("keyValues"`new JsonArray().add(keyValue1.getBytes()).add(keyValue2.getBytes())).put("certPaths"`new JsonArray().add(certPath1).add(certPath2)).put("certValues"`new JsonArray().add(certValue1.getBytes()).add(certValue2.getBytes())));" is 344.,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Magic Number,The method contains a magic number: 100,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Magic Number,The method contains a magic number: 100,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Magic Number,The method contains a magic number: 100,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Magic Number,The method contains a magic number: 100,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Magic Number,The method contains a magic number: 100,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Magic Number,The method contains a magic number: 100,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Magic Number,The method contains a magic number: 100,190
vert.x,io.vertx.core.net,KeyStoreTest,testPemKeyCertOptionsJson,Magic Number,The method contains a magic number: 100,190
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPemKeyCertOptions,Magic Number,The method contains a magic number: 100,235
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPemKeyCertOptions,Magic Number,The method contains a magic number: 100,235
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPemKeyCertOptions,Magic Number,The method contains a magic number: 100,235
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPemKeyCertOptions,Magic Number,The method contains a magic number: 100,235
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPemKeyCertOptions,Magic Number,The method contains a magic number: 100,235
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPemKeyCertOptions,Magic Number,The method contains a magic number: 100,235
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPemKeyCertOptions,Magic Number,The method contains a magic number: 100,235
vert.x,io.vertx.core.net,KeyStoreTest,testCopyPemKeyCertOptions,Magic Number,The method contains a magic number: 100,235
vert.x,io.vertx.core.net,KeyStoreTest,testTrustOptions,Magic Number,The method contains a magic number: 100,293
vert.x,io.vertx.core.net,KeyStoreTest,testTrustOptions,Magic Number,The method contains a magic number: 100,293
vert.x,io.vertx.core.net,KeyStoreTest,testTrustOptionsJson,Long Statement,The length of the statement "JsonObject json=new JsonObject().put("certPaths"`new JsonArray().add(certPath)).put("certValues"`new JsonArray().add(certValue.getBytes()));" is 140.,311
vert.x,io.vertx.core.net,KeyStoreTest,testTrustOptionsJson,Magic Number,The method contains a magic number: 100,311
vert.x,io.vertx.core.net,KeyStoreTest,testTrustOptionsJson,Magic Number,The method contains a magic number: 100,311
vert.x,io.vertx.core.net,KeyStoreTest,testCopyTrustOptions,Magic Number,The method contains a magic number: 100,336
vert.x,io.vertx.core.net,KeyStoreTest,testCopyTrustOptions,Magic Number,The method contains a magic number: 100,336
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,setUp,Magic Number,The method contains a magic number: 1234,52
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,after,Magic Number,The method contains a magic number: 2,65
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,sendBufferThrottled,Magic Number,The method contains a magic number: 64,73
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,sendBufferThrottled,Magic Number,The method contains a magic number: 1024,73
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,sendBufferThrottled,Magic Number,The method contains a magic number: 4,73
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,sendFileIsThrottled,Magic Number,The method contains a magic number: 60000,105
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,dataUploadIsThrottled,Magic Number,The method contains a magic number: 64,140
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,dataUploadIsThrottled,Magic Number,The method contains a magic number: 1024,140
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,dataUploadIsThrottled,Magic Number,The method contains a magic number: 4,140
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,fileUploadIsThrottled,Magic Number,The method contains a magic number: 60000,173
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,testSendBufferIsTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 64,209
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,testSendBufferIsTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 1024,209
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,testSendBufferIsTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 4,209
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,testSendBufferIsTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 4,209
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,testSendBufferIsTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 4,209
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,testSendBufferIsTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 4,209
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,testSendBufferIsTrafficShapedWithSharedServers,Magic Number,The method contains a magic number: 4,209
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,assertTimeTakenFallsInRange,Magic Number,The method contains a magic number: 2000,263
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,assertTimeTakenFallsInRange,Magic Number,The method contains a magic number: 2000,263
vert.x,io.vertx.core.net,NetBandwidthLimitingTest,netServer,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setHost(DEFAULT_HOST).setPort(DEFAULT_PORT).setTrafficShapingOptions(new TrafficShapingOptions().setInboundGlobalBandwidth(NetBandwidthLimitingTest.INBOUND_LIMIT).setOutboundGlobalBandwidth(NetBandwidthLimitingTest.OUTBOUND_LIMIT));" is 280.,273
vert.x,io.vertx.core.net,NetTest,setUp,Magic Number,The method contains a magic number: 1234,118
vert.x,io.vertx.core.net,NetTest,setUp,Magic Number,The method contains a magic number: 1000,118
vert.x,io.vertx.core.net,NetTest,getOptions,Long Statement,The length of the statement "options.getAddressResolverOptions().setHostsValue(Buffer.buffer("" + "127.0.0.1 localhost\n" + "127.0.0.1 host1\n"+ "127.0.0.1 host2.com\n"+ "127.0.0.1 example.com"));" is 167.,131
vert.x,io.vertx.core.net,NetTest,testClientOptions,Long Statement,The length of the statement "JksOptions keyStoreOptions=new JksOptions().setPath(TestUtils.randomAlphaString(100)).setPassword(TestUtils.randomAlphaString(100));" is 132.,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Long Statement,The length of the statement "JksOptions trustStoreOptions=new JksOptions().setPath(TestUtils.randomAlphaString(100)).setPassword(TestUtils.randomAlphaString(100));" is 134.,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 123,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 123,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 23,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 2,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 256,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 2,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 100,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 100,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 100,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 100,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 10,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 2,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 1000,152
vert.x,io.vertx.core.net,NetTest,testClientOptions,Magic Number,The method contains a magic number: 123,152
vert.x,io.vertx.core.net,NetTest,testServerOptions,Long Statement,The length of the statement "JksOptions keyStoreOptions=new JksOptions().setPath(TestUtils.randomAlphaString(100)).setPassword(TestUtils.randomAlphaString(100));" is 132.,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Long Statement,The length of the statement "JksOptions trustStoreOptions=new JksOptions().setPath(TestUtils.randomAlphaString(100)).setPassword(TestUtils.randomAlphaString(100));" is 134.,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 123,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 123,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 23,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 2,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 256,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 2,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 100,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 100,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 100,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 100,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 1234,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 1234,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 65536,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 100,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 123,261
vert.x,io.vertx.core.net,NetTest,testServerOptions,Magic Number,The method contains a magic number: 123,261
vert.x,io.vertx.core.net,NetTest,testCopyClientOptions,Magic Number,The method contains a magic number: 128,379
vert.x,io.vertx.core.net,NetTest,testCopyClientOptions,Magic Number,The method contains a magic number: 10,379
vert.x,io.vertx.core.net,NetTest,testCopyClientOptions,Magic Number,The method contains a magic number: 100,379
vert.x,io.vertx.core.net,NetTest,testCopyClientOptions,Magic Number,The method contains a magic number: 100,379
vert.x,io.vertx.core.net,NetTest,testCopyClientOptions,Magic Number,The method contains a magic number: 100,379
vert.x,io.vertx.core.net,NetTest,testCopyClientOptions,Magic Number,The method contains a magic number: 100,379
vert.x,io.vertx.core.net,NetTest,testCopyClientOptions,Magic Number,The method contains a magic number: 100,379
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Magic Number,The method contains a magic number: 128,458
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,458
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,458
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,458
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,458
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,458
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Magic Number,The method contains a magic number: 100,458
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Magic Number,The method contains a magic number: 10,458
vert.x,io.vertx.core.net,NetTest,testClientOptionsJson,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@68e0e15b,458
vert.x,io.vertx.core.net,NetTest,testCopyServerOptions,Magic Number,The method contains a magic number: 128,588
vert.x,io.vertx.core.net,NetTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,588
vert.x,io.vertx.core.net,NetTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,588
vert.x,io.vertx.core.net,NetTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,588
vert.x,io.vertx.core.net,NetTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,588
vert.x,io.vertx.core.net,NetTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,588
vert.x,io.vertx.core.net,NetTest,testCopyServerOptions,Magic Number,The method contains a magic number: 1234,588
vert.x,io.vertx.core.net,NetTest,testCopyServerOptions,Magic Number,The method contains a magic number: 100,588
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 128,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 1234,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Magic Number,The method contains a magic number: 100,679
vert.x,io.vertx.core.net,NetTest,testServerOptionsJson,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@c67278f,679
vert.x,io.vertx.core.net,NetTest,writeUntilFull,Magic Number,The method contains a magic number: 16384,837
vert.x,io.vertx.core.net,NetTest,writeUntilFull,Magic Number,The method contains a magic number: 10,837
vert.x,io.vertx.core.net,NetTest,testEchoBytes,Magic Number,The method contains a magic number: 100,847
vert.x,io.vertx.core.net,NetTest,testEchoString,Magic Number,The method contains a magic number: 100,853
vert.x,io.vertx.core.net,NetTest,testEchoStringWithEncoding,Magic Number,The method contains a magic number: 100,870
vert.x,io.vertx.core.net,NetTest,connect,Magic Number,The method contains a magic number: 100,910
vert.x,io.vertx.core.net,NetTest,testConnectInvalidPort,Magic Number,The method contains a magic number: 65536,929
vert.x,io.vertx.core.net,NetTest,testConnectInvalidPort,Magic Number,The method contains a magic number: 9998,929
vert.x,io.vertx.core.net,NetTest,testConnectInvalidHost,Magic Number,The method contains a magic number: 80,937
vert.x,io.vertx.core.net,NetTest,testConnectInvalidHost,Magic Number,The method contains a magic number: 1234,937
vert.x,io.vertx.core.net,NetTest,testListenInvalidPort,Magic Number,The method contains a magic number: 9090,944
vert.x,io.vertx.core.net,NetTest,testListenInvalidHost,Magic Number,The method contains a magic number: 1234,963
vert.x,io.vertx.core.net,NetTest,testListenOnWildcardPort,Magic Number,The method contains a magic number: 1024,972
vert.x,io.vertx.core.net,NetTest,clientCloseHandlers,Magic Number,The method contains a magic number: 2,997
vert.x,io.vertx.core.net,NetTest,serverCloseHandlers,Magic Number,The method contains a magic number: 2,1023
vert.x,io.vertx.core.net,NetTest,testClientClose,Magic Number,The method contains a magic number: 3,1037
vert.x,io.vertx.core.net,NetTest,testClientClose,Magic Number,The method contains a magic number: 1234,1037
vert.x,io.vertx.core.net,NetTest,testClientClose,Magic Number,The method contains a magic number: 1234,1037
vert.x,io.vertx.core.net,NetTest,testClientClose,Magic Number,The method contains a magic number: 3,1037
vert.x,io.vertx.core.net,NetTest,testClientDrainHandler,Magic Number,The method contains a magic number: 1000,1096
vert.x,io.vertx.core.net,NetTest,testClientDrainHandler,Magic Number,The method contains a magic number: 10000,1096
vert.x,io.vertx.core.net,NetTest,drainingServer,Magic Number,The method contains a magic number: 1000,1147
vert.x,io.vertx.core.net,NetTest,drainingServer,Magic Number,The method contains a magic number: 10000,1147
vert.x,io.vertx.core.net,NetTest,drainingServer,Magic Number,The method contains a magic number: 100,1147
vert.x,io.vertx.core.net,NetTest,testReconnectAttemptsMany,Magic Number,The method contains a magic number: 100000,1176
vert.x,io.vertx.core.net,NetTest,reconnectAttempts,Magic Number,The method contains a magic number: 10,1181
vert.x,io.vertx.core.net,NetTest,reconnectAttempts,Magic Number,The method contains a magic number: 2000,1181
vert.x,io.vertx.core.net,NetTest,testReconnectAttemptsNotEnough,Magic Number,The method contains a magic number: 100,1194
vert.x,io.vertx.core.net,NetTest,testReconnectAttemptsNotEnough,Magic Number,The method contains a magic number: 10,1194
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout1,Long Statement,The length of the statement "testTimeout(new NetClientOptions()`new NetServerOptions().setIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`received -> assertEquals("0123456789"`received.toString())`true);" is 185.,1206
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout1,Magic Number,The method contains a magic number: 500,1206
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout2,Long Statement,The length of the statement "testTimeout(new NetClientOptions()`new NetServerOptions().setReadIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`received -> assertEquals("0123456789"`received.toString())`true);" is 189.,1211
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout2,Magic Number,The method contains a magic number: 500,1211
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout3,Long Statement,The length of the statement "testTimeout(new NetClientOptions()`new NetServerOptions().setWriteIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`received -> assertFalse("0123456789".equals(received.toString()))`true);" is 197.,1216
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout3,Magic Number,The method contains a magic number: 500,1216
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout4,Long Statement,The length of the statement "testTimeout(new NetClientOptions()`new NetServerOptions().setIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`received -> assertEquals("0123456789"`received.toString())`false);" is 186.,1222
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout4,Magic Number,The method contains a magic number: 500,1222
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout5,Long Statement,The length of the statement "testTimeout(new NetClientOptions()`new NetServerOptions().setReadIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`received -> assertFalse("0123456789".equals(received.toString()))`false);" is 197.,1227
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout5,Magic Number,The method contains a magic number: 500,1227
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout6,Long Statement,The length of the statement "testTimeout(new NetClientOptions()`new NetServerOptions().setWriteIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`received -> assertEquals("0123456789"`received.toString())`false);" is 191.,1233
vert.x,io.vertx.core.net,NetTest,testServerIdleTimeout6,Magic Number,The method contains a magic number: 500,1233
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout1,Long Statement,The length of the statement "testTimeout(new NetClientOptions().setIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`new NetServerOptions()`received -> assertEquals("0123456789"`received.toString())`true);" is 185.,1238
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout1,Magic Number,The method contains a magic number: 500,1238
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout2,Long Statement,The length of the statement "testTimeout(new NetClientOptions().setWriteIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`new NetServerOptions()`received -> assertEquals("0123456789"`received.toString())`true);" is 190.,1243
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout2,Magic Number,The method contains a magic number: 500,1243
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout3,Long Statement,The length of the statement "testTimeout(new NetClientOptions().setReadIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`new NetServerOptions()`received -> assertFalse("0123456789".equals(received.toString()))`true);" is 196.,1248
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout3,Magic Number,The method contains a magic number: 500,1248
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout4,Long Statement,The length of the statement "testTimeout(new NetClientOptions().setIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`new NetServerOptions()`received -> assertEquals("0123456789"`received.toString())`false);" is 186.,1254
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout4,Magic Number,The method contains a magic number: 500,1254
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout5,Long Statement,The length of the statement "testTimeout(new NetClientOptions().setWriteIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`new NetServerOptions()`received -> assertFalse("0123456789".equals(received.toString()))`false);" is 198.,1259
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout5,Magic Number,The method contains a magic number: 500,1259
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout6,Long Statement,The length of the statement "testTimeout(new NetClientOptions().setReadIdleTimeout(500).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)`new NetServerOptions()`received -> assertEquals("0123456789"`received.toString())`false);" is 190.,1265
vert.x,io.vertx.core.net,NetTest,testClientIdleTimeout6,Magic Number,The method contains a magic number: 500,1265
vert.x,io.vertx.core.net,NetTest,testTimeout,Magic Number,The method contains a magic number: 100,1270
vert.x,io.vertx.core.net,NetTest,testTimeout,Magic Number,The method contains a magic number: 10,1270
vert.x,io.vertx.core.net,NetTest,testTLSTrailingDotHost,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(cert::trustOptions).connectAddress(SocketAddress.inetSocketAddress(4043`"host2.com.")).bindAddress(SocketAddress.inetSocketAddress(4043`"host2.com")).serverCert(cert::keyCertOptions);" is 222.,1388
vert.x,io.vertx.core.net,NetTest,testTLSTrailingDotHost,Magic Number,The method contains a magic number: 9,1388
vert.x,io.vertx.core.net,NetTest,testTLSTrailingDotHost,Magic Number,The method contains a magic number: 4043,1388
vert.x,io.vertx.core.net,NetTest,testTLSTrailingDotHost,Magic Number,The method contains a magic number: 4043,1388
vert.x,io.vertx.core.net,NetTest,testSniImplicitServerName,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST2).address(SocketAddress.inetSocketAddress(4043`"host2.com")).serverCert(Cert.SNI_JKS).sni(true);" is 154.,1425
vert.x,io.vertx.core.net,NetTest,testSniImplicitServerName,Magic Number,The method contains a magic number: 4043,1425
vert.x,io.vertx.core.net,NetTest,testSniImplicitServerNameDisabledForShortname1,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST1).address(SocketAddress.inetSocketAddress(4043`"host1")).serverCert(Cert.SNI_JKS).sni(true);" is 150.,1437
vert.x,io.vertx.core.net,NetTest,testSniImplicitServerNameDisabledForShortname1,Magic Number,The method contains a magic number: 4043,1437
vert.x,io.vertx.core.net,NetTest,testSniImplicitServerNameDisabledForShortname2,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SERVER_JKS).address(SocketAddress.inetSocketAddress(4043`"host1")).serverCert(Cert.SNI_JKS).sni(true);" is 147.,1447
vert.x,io.vertx.core.net,NetTest,testSniImplicitServerNameDisabledForShortname2,Magic Number,The method contains a magic number: 4043,1447
vert.x,io.vertx.core.net,NetTest,testSniForceShortname,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST1).address(SocketAddress.inetSocketAddress(4043`"host1")).serverName("host1").serverCert(Cert.SNI_JKS).sni(true);" is 170.,1458
vert.x,io.vertx.core.net,NetTest,testSniForceShortname,Magic Number,The method contains a magic number: 4043,1458
vert.x,io.vertx.core.net,NetTest,testSniOverrideServerName,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST2).address(SocketAddress.inetSocketAddress(4043`"example.com")).serverName("host2.com").serverCert(Cert.SNI_JKS).sni(true);" is 180.,1470
vert.x,io.vertx.core.net,NetTest,testSniOverrideServerName,Magic Number,The method contains a magic number: 4043,1470
vert.x,io.vertx.core.net,NetTest,testSniWithServerNameStartTLS,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST1).startTLS(true).serverCert(Cert.SNI_JKS).sni(true).serverName("host1");" is 130.,1503
vert.x,io.vertx.core.net,NetTest,testSniWithServerNameTrust,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST2).clientCert(Cert.CLIENT_PEM_ROOT_CA).requireClientAuth(true).serverCert(Cert.SNI_JKS).sni(true).serverName("host2.com").serverTrust(Trust.SNI_SERVER_ROOT_CA_AND_OTHER_CA_1);" is 232.,1515
vert.x,io.vertx.core.net,NetTest,testSniWithServerNameTrustFallback,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST2).clientCert(Cert.CLIENT_PEM_ROOT_CA).requireClientAuth(true).serverCert(Cert.SNI_JKS).sni(true).serverName("host2.com").serverTrust(Trust.SNI_SERVER_ROOT_CA_FALLBACK);" is 226.,1528
vert.x,io.vertx.core.net,NetTest,testSniWithServerNameTrustFallbackFail,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST2).clientCert(Cert.CLIENT_PEM_ROOT_CA).requireClientAuth(true).serverCert(Cert.SNI_JKS).sni(true).serverName("host2.com").serverTrust(Trust.SNI_SERVER_OTHER_CA_FALLBACK);" is 227.,1541
vert.x,io.vertx.core.net,NetTest,testSniWithServerNameTrustFail,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST2).clientCert(Cert.CLIENT_PEM_ROOT_CA).requireClientAuth(true).serverCert(Cert.SNI_JKS).sni(true).serverName("host2.com").serverTrust(Trust.SNI_SERVER_ROOT_CA_AND_OTHER_CA_2);" is 232.,1554
vert.x,io.vertx.core.net,NetTest,testSniWithTrailingDotHost,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientTrust(Trust.SNI_JKS_HOST2).connectAddress(SocketAddress.inetSocketAddress(4043`"host2.com.")).bindAddress(SocketAddress.inetSocketAddress(4043`"host2.com")).serverCert(Cert.SNI_JKS).sni(true);" is 225.,1567
vert.x,io.vertx.core.net,NetTest,testSniWithTrailingDotHost,Magic Number,The method contains a magic number: 4043,1567
vert.x,io.vertx.core.net,NetTest,testSniWithTrailingDotHost,Magic Number,The method contains a magic number: 4043,1567
vert.x,io.vertx.core.net,NetTest,testTLS,Long Parameter List,The method has 8 parameters. ,1614
vert.x,io.vertx.core.net,NetTest,testTLS,Long Statement,The length of the statement "testTLS(clientCert`clientTrust`serverCert`serverTrust`requireClientAuth`clientTrustAll`shouldPass`startTLS`new String[0]`new String[0]);" is 136.,1614
vert.x,io.vertx.core.net,NetTest,testTLS,Long Parameter List,The method has 9 parameters. ,1622
vert.x,io.vertx.core.net,NetTest,testTLS,Long Statement,The length of the statement "testTLS(clientCert`clientTrust`serverCert`serverTrust`requireClientAuth`clientTrustAll`shouldPass`startTLS`enabledCipherSuites`new String[0]);" is 142.,1622
vert.x,io.vertx.core.net,NetTest,testTLS,Long Identifier,The length of the parameter enabledSecureTransportProtocols is 31.,1631
vert.x,io.vertx.core.net,NetTest,testTLS,Long Identifier,The length of the field enabledSecureTransportProtocols is 31.,1631
vert.x,io.vertx.core.net,NetTest,testTLS,Long Parameter List,The method has 10 parameters. ,1631
vert.x,io.vertx.core.net,NetTest,testTLS,Long Statement,The length of the statement "TLSTest test=new TLSTest().clientCert(clientCert).clientTrust(clientTrust).serverCert(serverCert).serverTrust(serverTrust).requireClientAuth(requireClientAuth).clientTrustAll(clientTrustAll).startTLS(startTLS).enabledCipherSuites(enabledCipherSuites).enabledSecureTransportProtocols(enabledSecureTransportProtocols);" is 316.,1631
vert.x,io.vertx.core.net,NetTest,testListenDomainSocketAddress,Magic Number,The method contains a magic number: 3,1927
vert.x,io.vertx.core.net,NetTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 2,1966
vert.x,io.vertx.core.net,NetTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 2,1966
vert.x,io.vertx.core.net,NetTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 10,1966
vert.x,io.vertx.core.net,NetTest,testSharedServersRoundRobin,Magic Number,The method contains a magic number: 20,1966
vert.x,io.vertx.core.net,NetTest,testSharedServersRoundRobinWithOtherServerRunningOnDifferentPort,Magic Number,The method contains a magic number: 4321,2009
vert.x,io.vertx.core.net,NetTest,testSharedServersRoundRobinButFirstStartAndStopServer,Magic Number,The method contains a magic number: 10,2028
vert.x,io.vertx.core.net,NetTest,testSharedServersRoundRobinButFirstStartAndStopServer,Magic Number,The method contains a magic number: 500,2028
vert.x,io.vertx.core.net,NetTest,testClosingVertxCloseSharedServers,Magic Number,The method contains a magic number: 2,2053
vert.x,io.vertx.core.net,NetTest,testWriteHandlerIdNullByDefault,Magic Number,The method contains a magic number: 2,2073
vert.x,io.vertx.core.net,NetTest,testFanout,Magic Number,The method contains a magic number: 10,2099
vert.x,io.vertx.core.net,NetTest,testFanout,Magic Number,The method contains a magic number: 10,2099
vert.x,io.vertx.core.net,NetTest,testSocketAddress,Magic Number,The method contains a magic number: 1234,2135
vert.x,io.vertx.core.net,NetTest,sendFileClientToServer,Magic Number,The method contains a magic number: 10000,2186
vert.x,io.vertx.core.net,NetTest,sendFileServerToClient,Magic Number,The method contains a magic number: 10000,2215
vert.x,io.vertx.core.net,NetTest,testServerOptionsCopiedBeforeUse,Magic Number,The method contains a magic number: 1234,2261
vert.x,io.vertx.core.net,NetTest,testServerOptionsCopiedBeforeUse,Magic Number,The method contains a magic number: 1235,2261
vert.x,io.vertx.core.net,NetTest,testServerOptionsCopiedBeforeUse,Magic Number,The method contains a magic number: 1234,2261
vert.x,io.vertx.core.net,NetTest,testClientOptionsCopiedBeforeUse,Magic Number,The method contains a magic number: 1234,2277
vert.x,io.vertx.core.net,NetTest,testClientOptionsCopiedBeforeUse,Magic Number,The method contains a magic number: 1234,2277
vert.x,io.vertx.core.net,NetTest,testListenWithNoHandler,Empty catch clause,The method has an empty catch block.,2293
vert.x,io.vertx.core.net,NetTest,testListenWithNoHandler2,Empty catch clause,The method has an empty catch block.,2303
vert.x,io.vertx.core.net,NetTest,testSetHandlerAfterListen,Empty catch clause,The method has an empty catch block.,2313
vert.x,io.vertx.core.net,NetTest,testSetHandlerAfterListen2,Empty catch clause,The method has an empty catch block.,2328
vert.x,io.vertx.core.net,NetTest,testListenOnPortNoHandler,Magic Number,The method contains a magic number: 1234,2363
vert.x,io.vertx.core.net,NetTest,testListenOnPortNoHandler,Magic Number,The method contains a magic number: 1234,2363
vert.x,io.vertx.core.net,NetTest,testListenTwice2,Empty catch clause,The method has an empty catch block.,2389
vert.x,io.vertx.core.net,NetTest,testAttemptConnectAfterClose,Empty catch clause,The method has an empty catch block.,2411
vert.x,io.vertx.core.net,NetTest,testCloseWithHandler,Magic Number,The method contains a magic number: 2,2422
vert.x,io.vertx.core.net,NetTest,testClientMultiThreaded,Magic Number,The method contains a magic number: 10,2439
vert.x,io.vertx.core.net,NetTest,testClientMultiThreaded,Magic Number,The method contains a magic number: 100000,2439
vert.x,io.vertx.core.net,NetTest,testInVerticle,Magic Number,The method contains a magic number: 10000,2474
vert.x,io.vertx.core.net,NetTest,testContexts,Magic Number,The method contains a magic number: 10,2531
vert.x,io.vertx.core.net,NetTest,testInWorker,Magic Number,The method contains a magic number: 2,2605
vert.x,io.vertx.core.net,NetTest,testAsyncWriteIsFlushed,Magic Number,The method contains a magic number: 128,2660
vert.x,io.vertx.core.net,NetTest,testAsyncWriteIsFlushed,Magic Number,The method contains a magic number: 1024,2660
vert.x,io.vertx.core.net,NetTest,testAsyncWriteIsFlushed,Magic Number,The method contains a magic number: 256,2660
vert.x,io.vertx.core.net,NetTest,testAsyncWriteIsFlushed,Magic Number,The method contains a magic number: 256,2660
vert.x,io.vertx.core.net,NetTest,testServerWorkerMissBufferWhenBufferArriveBeforeConnectCallback,Empty catch clause,The method has an empty catch block.,2715
vert.x,io.vertx.core.net,NetTest,testServerWorkerMissBufferWhenBufferArriveBeforeConnectCallback,Magic Number,The method contains a magic number: 1000,2715
vert.x,io.vertx.core.net,NetTest,testClientWorkerMissBufferWhenBufferArriveBeforeConnectCallback,Empty catch clause,The method has an empty catch block.,2749
vert.x,io.vertx.core.net,NetTest,testClientWorkerMissBufferWhenBufferArriveBeforeConnectCallback,Magic Number,The method contains a magic number: 1000,2749
vert.x,io.vertx.core.net,NetTest,testHostVerificationHttpsNotMatching,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setPort(1234).setHost("localhost").setSsl(true).setKeyStoreOptions(new JksOptions().setPath("tls/mim-server-keystore.jks").setPassword("wibble"));" is 194.,2791
vert.x,io.vertx.core.net,NetTest,testHostVerificationHttpsNotMatching,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setSsl(true).setTrustAll(true).setHostnameVerificationAlgorithm("HTTPS");" is 127.,2791
vert.x,io.vertx.core.net,NetTest,testHostVerificationHttpsNotMatching,Magic Number,The method contains a magic number: 1234,2791
vert.x,io.vertx.core.net,NetTest,testHostVerificationHttpsNotMatching,Magic Number,The method contains a magic number: 1234,2791
vert.x,io.vertx.core.net,NetTest,testHostVerificationHttpsMatching,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setPort(1234).setHost("localhost").setSsl(true).setKeyStoreOptions(new JksOptions().setPath("tls/server-keystore.jks").setPassword("wibble"));" is 190.,2822
vert.x,io.vertx.core.net,NetTest,testHostVerificationHttpsMatching,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setSsl(true).setTrustAll(true).setHostnameVerificationAlgorithm("HTTPS");" is 127.,2822
vert.x,io.vertx.core.net,NetTest,testHostVerificationHttpsMatching,Magic Number,The method contains a magic number: 1234,2822
vert.x,io.vertx.core.net,NetTest,testHostVerificationHttpsMatching,Magic Number,The method contains a magic number: 1234,2822
vert.x,io.vertx.core.net,NetTest,testWithSocks5Proxy,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setPort(11080));" is 131.,2885
vert.x,io.vertx.core.net,NetTest,testWithSocks5Proxy,Magic Number,The method contains a magic number: 11080,2885
vert.x,io.vertx.core.net,NetTest,testWithSocks5Proxy,Magic Number,The method contains a magic number: 1234,2885
vert.x,io.vertx.core.net,NetTest,testWithSocks5Proxy,Magic Number,The method contains a magic number: 1234,2885
vert.x,io.vertx.core.net,NetTest,testWithSocks5ProxyAuth,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setPort(11080).setUsername("username").setPassword("username"));" is 179.,2909
vert.x,io.vertx.core.net,NetTest,testWithSocks5ProxyAuth,Magic Number,The method contains a magic number: 11080,2909
vert.x,io.vertx.core.net,NetTest,testWithSocks5ProxyAuth,Magic Number,The method contains a magic number: 1234,2909
vert.x,io.vertx.core.net,NetTest,testWithSocks5ProxyAuth,Magic Number,The method contains a magic number: 1234,2909
vert.x,io.vertx.core.net,NetTest,testConnectSSLWithSocks5Proxy,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setPort(1234).setHost("localhost").setSsl(true).setKeyCertOptions(Cert.SERVER_JKS_ROOT_CA.get());" is 145.,2931
vert.x,io.vertx.core.net,NetTest,testConnectSSLWithSocks5Proxy,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setHostnameVerificationAlgorithm("HTTPS").setSsl(true).setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost("127.0.0.1").setPort(11080)).setTrustOptions(Trust.SERVER_JKS_ROOT_CA.get());" is 255.,2931
vert.x,io.vertx.core.net,NetTest,testConnectSSLWithSocks5Proxy,Magic Number,The method contains a magic number: 1234,2931
vert.x,io.vertx.core.net,NetTest,testConnectSSLWithSocks5Proxy,Magic Number,The method contains a magic number: 11080,2931
vert.x,io.vertx.core.net,NetTest,testConnectSSLWithSocks5Proxy,Magic Number,The method contains a magic number: 1234,2931
vert.x,io.vertx.core.net,NetTest,testUpgradeSSLWithSocks5Proxy,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setPort(1234).setHost("localhost").setSsl(true).setKeyCertOptions(Cert.SERVER_JKS_ROOT_CA.get());" is 145.,2963
vert.x,io.vertx.core.net,NetTest,testUpgradeSSLWithSocks5Proxy,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setHostnameVerificationAlgorithm("HTTPS").setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost("127.0.0.1").setPort(11080)).setTrustOptions(Trust.SERVER_JKS_ROOT_CA.get());" is 242.,2963
vert.x,io.vertx.core.net,NetTest,testUpgradeSSLWithSocks5Proxy,Magic Number,The method contains a magic number: 1234,2963
vert.x,io.vertx.core.net,NetTest,testUpgradeSSLWithSocks5Proxy,Magic Number,The method contains a magic number: 11080,2963
vert.x,io.vertx.core.net,NetTest,testUpgradeSSLWithSocks5Proxy,Magic Number,The method contains a magic number: 1234,2963
vert.x,io.vertx.core.net,NetTest,testWithHttpConnectProxy,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setPort(13128));" is 129.,2997
vert.x,io.vertx.core.net,NetTest,testWithHttpConnectProxy,Magic Number,The method contains a magic number: 13128,2997
vert.x,io.vertx.core.net,NetTest,testWithHttpConnectProxy,Magic Number,The method contains a magic number: 1234,2997
vert.x,io.vertx.core.net,NetTest,testWithHttpConnectProxy,Magic Number,The method contains a magic number: 1234,2997
vert.x,io.vertx.core.net,NetTest,testWithSocks4aProxy,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS4).setPort(11080));" is 131.,3022
vert.x,io.vertx.core.net,NetTest,testWithSocks4aProxy,Magic Number,The method contains a magic number: 11080,3022
vert.x,io.vertx.core.net,NetTest,testWithSocks4aProxy,Magic Number,The method contains a magic number: 1234,3022
vert.x,io.vertx.core.net,NetTest,testWithSocks4aProxy,Magic Number,The method contains a magic number: 1234,3022
vert.x,io.vertx.core.net,NetTest,testWithSocks4aProxyAuth,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS4).setPort(11080).setUsername("username"));" is 155.,3045
vert.x,io.vertx.core.net,NetTest,testWithSocks4aProxyAuth,Magic Number,The method contains a magic number: 11080,3045
vert.x,io.vertx.core.net,NetTest,testWithSocks4aProxyAuth,Magic Number,The method contains a magic number: 1234,3045
vert.x,io.vertx.core.net,NetTest,testWithSocks4aProxyAuth,Magic Number,The method contains a magic number: 1234,3045
vert.x,io.vertx.core.net,NetTest,testWithSocks4LocalResolver,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS4).setPort(11080));" is 131.,3069
vert.x,io.vertx.core.net,NetTest,testWithSocks4LocalResolver,Magic Number,The method contains a magic number: 11080,3069
vert.x,io.vertx.core.net,NetTest,testWithSocks4LocalResolver,Magic Number,The method contains a magic number: 1234,3069
vert.x,io.vertx.core.net,NetTest,testWithSocks4LocalResolver,Magic Number,The method contains a magic number: 1234,3069
vert.x,io.vertx.core.net,NetTest,testNonProxyHosts,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().addNonProxyHost("example.com").setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setPort(13128));" is 160.,3091
vert.x,io.vertx.core.net,NetTest,testNonProxyHosts,Magic Number,The method contains a magic number: 13128,3091
vert.x,io.vertx.core.net,NetTest,testNonProxyHosts,Magic Number,The method contains a magic number: 1234,3091
vert.x,io.vertx.core.net,NetTest,testNonProxyHosts,Magic Number,The method contains a magic number: 1234,3091
vert.x,io.vertx.core.net,NetTest,testTLSHostnameCertCheckCorrect,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setSsl(true).setPort(4043).setKeyCertOptions(Cert.SERVER_JKS_ROOT_CA.get()));" is 129.,3111
vert.x,io.vertx.core.net,NetTest,testTLSHostnameCertCheckCorrect,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setHostnameVerificationAlgorithm("HTTPS").setTrustOptions(Trust.SERVER_JKS_ROOT_CA.get());" is 138.,3111
vert.x,io.vertx.core.net,NetTest,testTLSHostnameCertCheckCorrect,Magic Number,The method contains a magic number: 4043,3111
vert.x,io.vertx.core.net,NetTest,testTLSHostnameCertCheckCorrect,Magic Number,The method contains a magic number: 4043,3111
vert.x,io.vertx.core.net,NetTest,testTLSHostnameCertCheckIncorrect,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setSsl(true).setPort(4043).setKeyCertOptions(Cert.SERVER_JKS_ROOT_CA.get()));" is 129.,3134
vert.x,io.vertx.core.net,NetTest,testTLSHostnameCertCheckIncorrect,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setHostnameVerificationAlgorithm("HTTPS").setTrustOptions(Trust.SERVER_JKS_ROOT_CA.get());" is 138.,3134
vert.x,io.vertx.core.net,NetTest,testTLSHostnameCertCheckIncorrect,Magic Number,The method contains a magic number: 4043,3134
vert.x,io.vertx.core.net,NetTest,testTLSHostnameCertCheckIncorrect,Magic Number,The method contains a magic number: 4043,3134
vert.x,io.vertx.core.net,NetTest,testUpgradeToSSLIncorrectClientOptions,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setSsl(true).setPort(4043).setKeyCertOptions(Cert.SERVER_JKS_ROOT_CA.get()));" is 129.,3157
vert.x,io.vertx.core.net,NetTest,testUpgradeToSSLIncorrectClientOptions,Magic Number,The method contains a magic number: 4043,3157
vert.x,io.vertx.core.net,NetTest,testUpgradeToSSLIncorrectClientOptions,Magic Number,The method contains a magic number: 4043,3157
vert.x,io.vertx.core.net,NetTest,testClientLocalAddress,Magic Number,The method contains a magic number: 1234,3174
vert.x,io.vertx.core.net,NetTest,testClientLocalAddress,Magic Number,The method contains a magic number: 1234,3174
vert.x,io.vertx.core.net,NetTest,testSelfSignedCertificate,Long Statement,The length of the statement "NetServerOptions serverOptions=new NetServerOptions().setSsl(true).setKeyCertOptions(certificate.keyCertOptions()).setTrustOptions(certificate.trustOptions());" is 159.,3194
vert.x,io.vertx.core.net,NetTest,testSelfSignedCertificate,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setSsl(true).setKeyCertOptions(certificate.keyCertOptions()).setTrustOptions(certificate.trustOptions());" is 159.,3194
vert.x,io.vertx.core.net,NetTest,testSelfSignedCertificate,Magic Number,The method contains a magic number: 9,3194
vert.x,io.vertx.core.net,NetTest,testSelfSignedCertificate,Magic Number,The method contains a magic number: 2,3194
vert.x,io.vertx.core.net,NetTest,testWorkerClient,Magic Number,The method contains a magic number: 2000,3243
vert.x,io.vertx.core.net,NetTest,testWorkerClient,Magic Number,The method contains a magic number: 500,3243
vert.x,io.vertx.core.net,NetTest,start,Magic Number,The method contains a magic number: 500,3252
vert.x,io.vertx.core.net,NetTest,testWorkerServer,Magic Number,The method contains a magic number: 2000,3278
vert.x,io.vertx.core.net,NetTest,testWorkerServer,Magic Number,The method contains a magic number: 500,3278
vert.x,io.vertx.core.net,NetTest,start,Magic Number,The method contains a magic number: 500,3282
vert.x,io.vertx.core.net,NetTest,testNetServerInternalTLS,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setPort(1234).setHost("localhost").setSsl(true).setKeyStoreOptions(Cert.SERVER_JKS.get()));" is 143.,3319
vert.x,io.vertx.core.net,NetTest,testNetServerInternalTLS,Magic Number,The method contains a magic number: 1234,3319
vert.x,io.vertx.core.net,NetTest,testNetServerInternal_,Long Statement,The length of the statement "DefaultFullHttpResponse response=new DefaultFullHttpResponse(HttpVersion.HTTP_1_1`HttpResponseStatus.OK`Unpooled.copiedBuffer("Hello World"`StandardCharsets.UTF_8));" is 165.,3333
vert.x,io.vertx.core.net,NetTest,testNetServerInternal_,Long Statement,The length of the statement "client.request(io.vertx.core.http.HttpMethod.GET`1234`"localhost"`"/somepath").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 234.,3333
vert.x,io.vertx.core.net,NetTest,testNetServerInternal_,Magic Number,The method contains a magic number: 2,3333
vert.x,io.vertx.core.net,NetTest,testNetServerInternal_,Magic Number,The method contains a magic number: 1234,3333
vert.x,io.vertx.core.net,NetTest,testNetServerInternal_,Magic Number,The method contains a magic number: 1234,3333
vert.x,io.vertx.core.net,NetTest,testNetServerInternal_,Magic Number,The method contains a magic number: 200,3333
vert.x,io.vertx.core.net,NetTest,testNetClientInternal,Magic Number,The method contains a magic number: 1234,3366
vert.x,io.vertx.core.net,NetTest,testNetClientInternalTLS,Long Statement,The length of the statement "testNetClientInternal_(new HttpServerOptions().setHost("localhost").setPort(1234).setSsl(true).setKeyStoreOptions(Cert.SERVER_JKS.get())`true);" is 143.,3371
vert.x,io.vertx.core.net,NetTest,testNetClientInternalTLS,Magic Number,The method contains a magic number: 1234,3371
vert.x,io.vertx.core.net,NetTest,testNetClientInternalTLSWithSuppliedSSLContext,Long Statement,The length of the statement "return new JdkSslContext(sslContext`true`null`IdentityCipherSuiteFilter.INSTANCE`ApplicationProtocolConfig.DISABLED`io.netty.handler.ssl.ClientAuth.NONE`null`false);" is 165.,3385
vert.x,io.vertx.core.net,NetTest,testNetClientInternalTLSWithSuppliedSSLContext,Long Statement,The length of the statement "testNetClientInternal_(new HttpServerOptions().setHost("localhost").setPort(1234).setSsl(true).setKeyStoreOptions(Cert.SERVER_JKS.get())`true);" is 143.,3385
vert.x,io.vertx.core.net,NetTest,testNetClientInternalTLSWithSuppliedSSLContext,Magic Number,The method contains a magic number: 1234,3385
vert.x,io.vertx.core.net,NetTest,sslContextFactory,Long Statement,The length of the statement "return new JdkSslContext(sslContext`true`null`IdentityCipherSuiteFilter.INSTANCE`ApplicationProtocolConfig.DISABLED`io.netty.handler.ssl.ClientAuth.NONE`null`false);" is 165.,3407
vert.x,io.vertx.core.net,NetTest,create,Long Statement,The length of the statement "return new JdkSslContext(sslContext`true`null`IdentityCipherSuiteFilter.INSTANCE`ApplicationProtocolConfig.DISABLED`io.netty.handler.ssl.ClientAuth.NONE`null`false);" is 165.,3410
vert.x,io.vertx.core.net,NetTest,testNetClientInternal_,Magic Number,The method contains a magic number: 2,3433
vert.x,io.vertx.core.net,NetTest,testNetClientInternal_,Magic Number,The method contains a magic number: 1234,3433
vert.x,io.vertx.core.net,NetTest,testNetClientInternal_,Magic Number,The method contains a magic number: 200,3433
vert.x,io.vertx.core.net,NetTest,testNetClientInternal_,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7ed581ad,3433
vert.x,io.vertx.core.net,NetTest,testNetSocketInternalDirectBuffer,Magic Number,The method contains a magic number: 2,3507
vert.x,io.vertx.core.net,NetTest,testNetSocketInternalRemoveVertxHandler,Magic Number,The method contains a magic number: 1000,3540
vert.x,io.vertx.core.net,NetTest,testCloseCompletionHandlerNotCalledWhenActualServerFailed,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setSsl(true).setPemKeyCertOptions(new PemKeyCertOptions().setKeyPath("invalid"))).connectHandler(c -> {" is 155.,3562
vert.x,io.vertx.core.net,NetTest,testCloseCompletionHandlerNotCalledWhenActualServerFailed,Magic Number,The method contains a magic number: 10000,3562
vert.x,io.vertx.core.net,NetTest,testServerNetSocketShouldBeClosedWhenTheClosedHandlerIsCalled,Magic Number,The method contains a magic number: 2,3580
vert.x,io.vertx.core.net,NetTest,testServerNetSocketShouldBeClosedWhenTheClosedHandlerIsCalled,Magic Number,The method contains a magic number: 2,3580
vert.x,io.vertx.core.net,NetTest,testServerNetSocketShouldBeClosedWhenTheClosedHandlerIsCalled,Magic Number,The method contains a magic number: 1000,3580
vert.x,io.vertx.core.net,NetTest,testNetSocketInternalEvent,Magic Number,The method contains a magic number: 10,3612
vert.x,io.vertx.core.net,NetTest,handlerAdded,Magic Number,The method contains a magic number: 10,3623
vert.x,io.vertx.core.net,NetTest,testIdleTimeoutSendChunkedFile,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setIdleTimeout(200).setIdleTimeoutUnit(TimeUnit.MILLISECONDS)).connectHandler((idleOnServer ? sender : receiver)::accept);" is 174.,3649
vert.x,io.vertx.core.net,NetTest,testIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 16,3649
vert.x,io.vertx.core.net,NetTest,testIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 1024,3649
vert.x,io.vertx.core.net,NetTest,testIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 1024,3649
vert.x,io.vertx.core.net,NetTest,testIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 200,3649
vert.x,io.vertx.core.net,NetTest,testIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 200,3649
vert.x,io.vertx.core.net,NetTest,testIdleTimeoutSendChunkedFile,Magic Number,The method contains a magic number: 200,3649
vert.x,io.vertx.core.net,NetTest,testHalfCloseCallsEndHandlerAfterBuffersAreDelivered,Magic Number,The method contains a magic number: 8,3700
vert.x,io.vertx.core.net,NetTest,testSslHandshakeTimeoutHappened,Long Statement,The length of the statement "NetServerOptions serverOptions=new NetServerOptions().setSsl(!onClient).setSslHandshakeTimeout(200).setKeyStoreOptions(Cert.SERVER_JKS.get()).setSni(sni).setSslHandshakeTimeoutUnit(TimeUnit.MILLISECONDS);" is 204.,3754
vert.x,io.vertx.core.net,NetTest,testSslHandshakeTimeoutHappened,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setSsl(onClient).setTrustAll(true).setSslHandshakeTimeout(200).setSslHandshakeTimeoutUnit(TimeUnit.MILLISECONDS);" is 167.,3754
vert.x,io.vertx.core.net,NetTest,testSslHandshakeTimeoutHappened,Magic Number,The method contains a magic number: 200,3754
vert.x,io.vertx.core.net,NetTest,testSslHandshakeTimeoutHappened,Magic Number,The method contains a magic number: 200,3754
vert.x,io.vertx.core.net,NetTest,testSslHandshakeTimeoutNotHappened,Long Statement,The length of the statement "NetServerOptions serverOptions=new NetServerOptions().setSsl(true).setKeyStoreOptions(Cert.SERVER_JKS.get()).setSslHandshakeTimeout(100).setSslHandshakeTimeoutUnit(TimeUnit.MILLISECONDS);" is 187.,3795
vert.x,io.vertx.core.net,NetTest,testSslHandshakeTimeoutNotHappened,Magic Number,The method contains a magic number: 100,3795
vert.x,io.vertx.core.net,NetTest,testSslHandshakeTimeoutHappenedWhenUpgradeSsl,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setSsl(false).setTrustAll(true).setSslHandshakeTimeout(200).setSslHandshakeTimeoutUnit(TimeUnit.MILLISECONDS);" is 164.,3822
vert.x,io.vertx.core.net,NetTest,testSslHandshakeTimeoutHappenedWhenUpgradeSsl,Magic Number,The method contains a magic number: 200,3822
vert.x,io.vertx.core.net,NetTest,testUnresolvedSocketAddress,Magic Number,The method contains a magic number: 8080,3911
vert.x,io.vertx.core.net,NetTest,testUnresolvedSocketAddress,Magic Number,The method contains a magic number: 8080,3911
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIdleTimeout,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setProxyProtocolTimeout(2).setUseProxyProtocol(true)).connectHandler(u -> fail("Should not be called"));" is 156.,3950
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIdleTimeout,Magic Number,The method contains a magic number: 2,3950
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIdleTimeoutNotHappened,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setProxyProtocolTimeout(100).setProxyProtocolTimeoutUnit(TimeUnit.MILLISECONDS).setUseProxyProtocol(true)).connectHandler(u -> complete());" is 191.,3973
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIdleTimeoutNotHappened,Magic Number,The method contains a magic number: 2,3973
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIdleTimeoutNotHappened,Magic Number,The method contains a magic number: 56324,3973
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIdleTimeoutNotHappened,Magic Number,The method contains a magic number: 443,3973
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIdleTimeoutNotHappened,Magic Number,The method contains a magic number: 100,3973
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolConnectSSL,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setKeyCertOptions(Cert.SERVER_JKS_ROOT_CA.get()).setUseProxyProtocol(true);" is 136.,4003
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolConnectSSL,Long Statement,The length of the statement "assertAddresses(USE_DOMAIN_SOCKETS ? null : SocketAddress.inetSocketAddress(server.actualPort()`"127.0.0.1")`event.localAddress(true));" is 135.,4003
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolConnectSSL,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setHostnameVerificationAlgorithm("HTTPS").setSsl(true).setTrustOptions(Trust.SERVER_JKS_ROOT_CA.get());" is 157.,4003
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolConnectSSL,Magic Number,The method contains a magic number: 2,4003
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolConnectSSL,Magic Number,The method contains a magic number: 56324,4003
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolConnectSSL,Magic Number,The method contains a magic number: 443,4003
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion1TCP4,Magic Number,The method contains a magic number: 56324,4049
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion1TCP4,Magic Number,The method contains a magic number: 443,4049
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion1TCP6,Magic Number,The method contains a magic number: 56324,4057
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion1TCP6,Magic Number,The method contains a magic number: 443,4057
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion2TCP4,Magic Number,The method contains a magic number: 56324,4072
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion2TCP4,Magic Number,The method contains a magic number: 443,4072
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion2TCP6,Magic Number,The method contains a magic number: 56324,4080
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion2TCP6,Magic Number,The method contains a magic number: 443,4080
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolAccepted,Long Statement,The length of the statement "assertAddresses(remote == null && testAddress.isInetSocket() ? proxy.getConnectionLocalAddress() : remote`so.remoteAddress());" is 126.,4104
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolAccepted,Long Statement,The length of the statement "assertAddresses(local == null && testAddress.isInetSocket() ? proxy.getConnectionRemoteAddress() : local`so.localAddress());" is 124.,4104
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolAccepted,Magic Number,The method contains a magic number: 2,4104
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion2UDP4,Magic Number,The method contains a magic number: 56324,4146
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion2UDP4,Magic Number,The method contains a magic number: 443,4146
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion2UDP6,Magic Number,The method contains a magic number: 56324,4154
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolVersion2UDP6,Magic Number,The method contains a magic number: 443,4154
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolRejected,Magic Number,The method contains a magic number: 2,4170
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIllegalHeader2,Magic Number,The method contains a magic number: 56324,4204
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIllegalHeader2,Magic Number,The method contains a magic number: 443,4204
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIllegal,Long Statement,The length of the statement "server=vertx.createNetServer(new NetServerOptions().setUseProxyProtocol(true)).connectHandler(u -> fail("Should not be called")).exceptionHandler(exception -> {" is 160.,4213
vert.x,io.vertx.core.net,NetTest,testHAProxyProtocolIllegal,Magic Number,The method contains a magic number: 2,4213
vert.x,io.vertx.core.net,NetTest,testConnectTimeout,Magic Number,The method contains a magic number: 1234,4247
vert.x,io.vertx.core.net,NetTest,testInvalidPort,Empty catch clause,The method has an empty catch block.,4259
vert.x,io.vertx.core.net,NetTest,testInvalidPort,Magic Number,The method contains a magic number: 65536,4259
vert.x,io.vertx.core.net,NetTest,testClientShutdown,Magic Number,The method contains a magic number: 2,4270
vert.x,io.vertx.core.net,NetTest,testClientShutdown,Magic Number,The method contains a magic number: 2,4270
vert.x,io.vertx.core.net,NetTest,testClientShutdown,Magic Number,The method contains a magic number: 2,4270
vert.x,io.vertx.core.net,NetTest,testClientShutdown,Magic Number,The method contains a magic number: 2,4270
vert.x,io.vertx.core.net,NetTest,testClientShutdown,Magic Number,The method contains a magic number: 2,4270
vert.x,io.vertx.core.net,ProxyErrorTest,getOptions,Long Statement,The length of the statement "options.getAddressResolverOptions().addServer(dnsServerAddress.getAddress().getHostAddress() + ":" + dnsServerAddress.getPort());" is 129.,61
vert.x,io.vertx.core.net,ProxyErrorTest,testProxyHttpsError,Magic Number,The method contains a magic number: 403,77
vert.x,io.vertx.core.net,ProxyErrorTest,testProxyError,Magic Number,The method contains a magic number: 403,92
vert.x,io.vertx.core.net,ProxyErrorTest,testProxyError,Magic Number,The method contains a magic number: 403,92
vert.x,io.vertx.core.net,ProxyErrorTest,testProxyAuthFail,Magic Number,The method contains a magic number: 407,97
vert.x,io.vertx.core.net,ProxyErrorTest,testProxyHostUnknown,Magic Number,The method contains a magic number: 504,102
vert.x,io.vertx.core.net,ProxyErrorTest,proxyTest,Long Statement,The length of the statement "final HttpClientOptions options=new HttpClientOptions().setSsl(url.startsWith("https")).setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(proxy.port()));" is 191.,123
vert.x,io.vertx.core.net,ProxyOptionsTest,setUp,Magic Number,The method contains a magic number: 10,36
vert.x,io.vertx.core.net,ProxyOptionsTest,setUp,Magic Number,The method contains a magic number: 10,36
vert.x,io.vertx.core.net,ProxyOptionsTest,setUp,Magic Number,The method contains a magic number: 10,36
vert.x,io.vertx.core.net,ProxyOptionsTest,testProxyOptions,Magic Number,The method contains a magic number: 65536,46
vert.x,io.vertx.core.net,ProxyOptionsTest,testOptionsJson,Long Statement,The length of the statement "json.put("type"`randType.toString()).put("host"`randHost).put("port"`randPort).put("username"`randUsername).put("password"`randPassword);" is 137.,103
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromUnresolvedAddress,Magic Number,The method contains a magic number: 8080,15
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromUnresolvedAddress,Magic Number,The method contains a magic number: 8080,15
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromResolvedAddress,Magic Number,The method contains a magic number: 8080,26
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromResolvedAddress,Magic Number,The method contains a magic number: 8080,26
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressIpV4Address,Magic Number,The method contains a magic number: 8080,38
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressIpV4Address,Magic Number,The method contains a magic number: 8080,38
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressIpV6Address,Magic Number,The method contains a magic number: 8080,50
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressIpV6Address,Magic Number,The method contains a magic number: 8080,50
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromHostName,Magic Number,The method contains a magic number: 8080,62
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromHostName,Magic Number,The method contains a magic number: 8080,62
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromIpV4AddressHost,Magic Number,The method contains a magic number: 8080,73
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromIpV4AddressHost,Magic Number,The method contains a magic number: 8080,73
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromIpV6AddressHost,Magic Number,The method contains a magic number: 8080,84
vert.x,io.vertx.core.net,SocketAddressTest,testInetSocketAddressFromIpV6AddressHost,Magic Number,The method contains a magic number: 8080,84
vert.x,io.vertx.core.net,SocketAddressTest,testSocketAddress,Magic Number,The method contains a magic number: 65536,107
vert.x,io.vertx.core.net,SSLHelperTest,testUseJdkCiphersWhenNotSpecified,Long Statement,The length of the statement "SSLHelper helper=new SSLHelper(new HttpClientOptions().setKeyStoreOptions(Cert.CLIENT_JKS.get()).setTrustOptions(Trust.SERVER_JKS.get())`null);" is 143.,38
vert.x,io.vertx.core.net,SSLHelperTest,testUseJdkCiphersWhenNotSpecified,Long Statement,The length of the statement "helper.buildContextProvider(new SSLOptions().setKeyCertOptions(Cert.CLIENT_JKS.get()).setTrustOptions(Trust.SERVER_JKS.get())`(ContextInternal)vertx.getOrCreateContext()).onComplete(onSuccess(provider -> {" is 205.,38
vert.x,io.vertx.core.net,SSLHelperTest,testUseOpenSSLCiphersWhenNotSpecified,Long Statement,The length of the statement "SSLHelper helper=new SSLHelper(new HttpClientOptions().setOpenSslEngineOptions(new OpenSSLEngineOptions()).setPemKeyCertOptions(Cert.CLIENT_PEM.get()).setTrustOptions(Trust.SERVER_PEM.get())`null);" is 197.,56
vert.x,io.vertx.core.net,SSLHelperTest,testUseOpenSSLCiphersWhenNotSpecified,Long Statement,The length of the statement "helper.buildContextProvider(new SSLOptions().setKeyCertOptions(Cert.CLIENT_PEM.get()).setTrustOptions(Trust.SERVER_PEM.get())`(ContextInternal)vertx.getOrCreateContext()).onComplete(onSuccess(provider -> {" is 205.,56
vert.x,io.vertx.core.net,SSLHelperTest,testOpenSslServerSessionContext,Long Statement,The length of the statement "SSLHelper defaultHelper=new SSLHelper(httpServerOptions.setPemKeyCertOptions(Cert.SERVER_PEM.get()).setTrustOptions(Trust.SERVER_PEM.get())`null);" is 146.,80
vert.x,io.vertx.core.net,SSLHelperTest,testOpenSslServerSessionContext,Long Statement,The length of the statement "defaultHelper.buildContextProvider(httpServerOptions.getSslOptions()`(ContextInternal)vertx.getOrCreateContext()).onComplete(onSuccess(provider -> {" is 148.,80
vert.x,io.vertx.core.net,SSLHelperTest,testPreserveEnabledCipherSuitesOrder,Long Statement,The length of the statement "assertEquals(new ArrayList<>(new HttpServerOptions(options).getEnabledCipherSuites())`Arrays.asList(engine.getEnabledCipherSuites()));" is 134.,107
vert.x,io.vertx.core.net,SSLHelperTest,testPreserveEnabledCipherSuitesOrder,Long Statement,The length of the statement "assertEquals(new ArrayList<>(new HttpServerOptions(json).getEnabledCipherSuites())`Arrays.asList(engine.getEnabledCipherSuites()));" is 131.,107
vert.x,io.vertx.core.net,SSLHelperTest,testPreserveEnabledCipherSuitesOrder,Long Statement,The length of the statement "helper.buildContextProvider(options.getSslOptions()`(ContextInternal)vertx.getOrCreateContext()).onComplete(onSuccess(sslContextProvider -> {" is 141.,107
vert.x,io.vertx.core.net,SSLHelperTest,testPreserveEnabledCipherSuitesOrder,Long Statement,The length of the statement "assertEquals(new HashSet<>(Arrays.asList(createEngine(sslContextProvider).getEnabledCipherSuites()))`new HashSet<>(Arrays.asList(engine.getEnabledCipherSuites())));" is 164.,107
vert.x,io.vertx.core.net,SSLHelperTest,testDefaultVersions,Magic Number,The method contains a magic number: 2,146
vert.x,io.vertx.core.net,SSLHelperTest,testSetVersion,Long Statement,The length of the statement "testTLSVersions(new HttpServerOptions().setEnabledSecureTransportProtocols(new HashSet<>(Arrays.asList("TLSv1.3")))`engine -> {" is 127.,156
vert.x,io.vertx.core.net,SSLHelperTest,testSetVersions,Long Statement,The length of the statement "testTLSVersions(new HttpServerOptions().setEnabledSecureTransportProtocols(new HashSet<>(Arrays.asList("TLSv1"`"TLSv1.3")))`engine -> {" is 135.,165
vert.x,io.vertx.core.net,SSLHelperTest,testSetVersions,Magic Number,The method contains a magic number: 2,165
vert.x,io.vertx.core.net,SSLHelperTest,testTLSVersions,Long Statement,The length of the statement "helper.buildContextProvider(options.getSslOptions()`(ContextInternal)vertx.getOrCreateContext()).onComplete(onSuccess(sslContextProvider -> {" is 141.,175
vert.x,docoverride.dns,Examples,example16,Magic Number,The method contains a magic number: 53,26
vert.x,docoverride.json,Examples,exampleCreateFromMap,Magic Number,The method contains a magic number: 3,36
vert.x,docoverride.json,Examples,example1,Magic Number,The method contains a magic number: 123,48
vert.x,docoverride.json,Examples,example3,Magic Number,The method contains a magic number: 123,75
vert.x,docoverride.json,Examples,example4,Magic Number,The method contains a magic number: 2,80
vert.x,examples,BufferExamples,example5,Magic Number,The method contains a magic number: 10000,34
vert.x,examples,BufferExamples,example6,Magic Number,The method contains a magic number: 123,38
vert.x,examples,BufferExamples,example7,Magic Number,The method contains a magic number: 1000,46
vert.x,examples,BufferExamples,example7,Magic Number,The method contains a magic number: 123,46
vert.x,examples,BufferExamples,example8,Magic Number,The method contains a magic number: 4,53
vert.x,examples,BufferExamples,example9,Magic Number,The method contains a magic number: 128,60
vert.x,examples,BufferExamples,example9,Magic Number,The method contains a magic number: 15,60
vert.x,examples,BufferExamples,example9,Magic Number,The method contains a magic number: 200,60
vert.x,examples,CoreExamples,example2,Magic Number,The method contains a magic number: 40,39
vert.x,examples,CoreExamples,example5,Magic Number,The method contains a magic number: 1000,54
vert.x,examples,CoreExamples,workerExecutor3,Magic Number,The method contains a magic number: 10,92
vert.x,examples,CoreExamples,workerExecutor3,Magic Number,The method contains a magic number: 2,92
vert.x,examples,CoreExamples,example12,Magic Number,The method contains a magic number: 16,276
vert.x,examples,CoreExamples,example15,Magic Number,The method contains a magic number: 1000,288
vert.x,examples,CoreExamples,example16,Magic Number,The method contains a magic number: 1000,296
vert.x,examples,CoreExamples,configureDNSServers,Long Statement,The length of the statement "Vertx vertx=Vertx.vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().addServer("192.168.0.1").addServer("192.168.0.2:40000")));" is 156.,354
vert.x,examples,CoreExamples,configureHosts,Long Statement,The length of the statement "Vertx vertx=Vertx.vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().setHostsPath("/path/to/hosts")));" is 131.,363
vert.x,examples,CoreExamples,configureSearchDomains,Long Statement,The length of the statement "Vertx vertx=Vertx.vertx(new VertxOptions().setAddressResolverOptions(new AddressResolverOptions().addSearchDomain("foo.com").addSearchDomain("bar.com")));" is 154.,371
vert.x,examples,CoreExamples,configureLinuxOptions,Long Parameter List,The method has 5 parameters. ,392
vert.x,examples,CoreExamples,configureLinuxOptions,Long Statement,The length of the statement "vertx.createHttpServer(new HttpServerOptions().setTcpFastOpen(fastOpen).setTcpCork(cork).setTcpQuickAck(quickAck).setReusePort(reusePort));" is 139.,392
vert.x,examples,CoreExamples,httpClientWithDomainSockets,Long Statement,The length of the statement "httpClient.request(new RequestOptions().setServer(addr).setHost("localhost").setPort(8080).setURI("/")).onSuccess(request -> {" is 126.,447
vert.x,examples,CoreExamples,httpClientWithDomainSockets,Magic Number,The method contains a magic number: 8080,447
vert.x,examples,DatagramExamples,example2,Long Statement,The length of the statement "socket.send(buffer`1234`"10.0.0.1").onComplete(asyncResult -> System.out.println("Send succeeded? " + asyncResult.succeeded()));" is 128.,28
vert.x,examples,DatagramExamples,example2,Long Statement,The length of the statement "socket.send("A string used as content"`1234`"10.0.0.1").onComplete(asyncResult -> System.out.println("Send succeeded? " + asyncResult.succeeded()));" is 148.,28
vert.x,examples,DatagramExamples,example2,Magic Number,The method contains a magic number: 1234,28
vert.x,examples,DatagramExamples,example2,Magic Number,The method contains a magic number: 1234,28
vert.x,examples,DatagramExamples,example3,Magic Number,The method contains a magic number: 1234,41
vert.x,examples,DatagramExamples,example4,Long Statement,The length of the statement "socket.send(buffer`1234`"230.0.0.1").onComplete(asyncResult -> System.out.println("Send succeeded? " + asyncResult.succeeded()));" is 129.,52
vert.x,examples,DatagramExamples,example4,Magic Number,The method contains a magic number: 1234,52
vert.x,examples,DatagramExamples,example5,Long Statement,The length of the statement ").listen(1234`"0.0.0.0").compose(v -> socket.listenMulticastGroup("230.0.0.1")).onComplete(asyncResult -> System.out.println("Listen succeeded? " + asyncResult.succeeded()));" is 174.,61
vert.x,examples,DatagramExamples,example5,Magic Number,The method contains a magic number: 1234,61
vert.x,examples,DatagramExamples,example6,Magic Number,The method contains a magic number: 1234,72
vert.x,examples,DatagramExamples,example7,Long Statement,The length of the statement "socket.blockMulticastGroup("230.0.0.1"`"10.0.0.2").onComplete(asyncResult -> System.out.println("block succeeded? " + asyncResult.succeeded()));" is 144.,95
vert.x,examples,DNSExamples,example1,Magic Number,The method contains a magic number: 53,27
vert.x,examples,DNSExamples,example1_,Magic Number,The method contains a magic number: 53,31
vert.x,examples,DNSExamples,example1_,Magic Number,The method contains a magic number: 10000,31
vert.x,examples,DNSExamples,example1__,Magic Number,The method contains a magic number: 10000,39
vert.x,examples,DNSExamples,example2,Magic Number,The method contains a magic number: 53,46
vert.x,examples,DNSExamples,example3,Magic Number,The method contains a magic number: 53,59
vert.x,examples,DNSExamples,example4,Magic Number,The method contains a magic number: 53,72
vert.x,examples,DNSExamples,example5,Magic Number,The method contains a magic number: 53,85
vert.x,examples,DNSExamples,example6,Magic Number,The method contains a magic number: 53,101
vert.x,examples,DNSExamples,example7,Magic Number,The method contains a magic number: 53,117
vert.x,examples,DNSExamples,example8,Magic Number,The method contains a magic number: 53,133
vert.x,examples,DNSExamples,example10,Magic Number,The method contains a magic number: 53,154
vert.x,examples,DNSExamples,example11,Magic Number,The method contains a magic number: 53,170
vert.x,examples,DNSExamples,example12,Magic Number,The method contains a magic number: 53,186
vert.x,examples,DNSExamples,example14,Magic Number,The method contains a magic number: 53,216
vert.x,examples,DNSExamples,example15,Magic Number,The method contains a magic number: 53,230
vert.x,examples,EventBusExamples,example13,Long Statement,The length of the statement "VertxOptions options=new VertxOptions().setEventBusOptions(new EventBusOptions().setSsl(true).setKeyStoreOptions(new JksOptions().setPath("keystore.jks").setPassword("wibble")).setTrustStoreOptions(new JksOptions().setPath("keystore.jks").setPassword("wibble")).setClientAuth(ClientAuth.REQUIRED));" is 298.,111
vert.x,examples,EventBusExamples,example14,Long Statement,The length of the statement "VertxOptions options=new VertxOptions().setEventBusOptions(new EventBusOptions().setClusterPublicHost("whatever").setClusterPublicPort(1234));" is 142.,133
vert.x,examples,EventBusExamples,example14,Magic Number,The method contains a magic number: 1234,133
vert.x,examples,FileSystemExamples,asyncFileWrite,Magic Number,The method contains a magic number: 5,112
vert.x,examples,FileSystemExamples,asyncFileRead,Magic Number,The method contains a magic number: 1000,137
vert.x,examples,FileSystemExamples,asyncFileRead,Magic Number,The method contains a magic number: 10,137
vert.x,examples,FileSystemExamples,asyncFileRead,Magic Number,The method contains a magic number: 100,137
vert.x,examples,FileSystemExamples,asyncFileRead,Magic Number,The method contains a magic number: 100,137
vert.x,examples,FileSystemExamples,asyncFileRead,Magic Number,The method contains a magic number: 100,137
vert.x,examples,FileSystemExamples,asyncFilePipe,Long Statement,The length of the statement "vertx.fileSystem().open("target/classes/les_miserables.txt"`new OpenOptions()).compose(file -> file.pipeTo(output).eventually(v -> file.close())).onComplete(result -> {" is 168.,161
vert.x,examples,HTTP2Examples,example0,Long Statement,The length of the statement "HttpServerOptions options=new HttpServerOptions().setUseAlpn(true).setSsl(true).setKeyStoreOptions(new JksOptions().setPath("/path/to/my/keystore"));" is 149.,36
vert.x,examples,HTTP2Examples,example2,Magic Number,The method contains a magic number: 40,54
vert.x,examples,HTTP2Examples,example2,Magic Number,The method contains a magic number: 10,54
vert.x,examples,HTTP2Examples,example4,Magic Number,The method contains a magic number: 8,70
vert.x,examples,HTTP2Examples,example7,Long Statement,The length of the statement "HttpClientOptions options=new HttpClientOptions().setProtocolVersion(HttpVersion.HTTP_2).setSsl(true).setUseAlpn(true).setTrustAll(true);" is 137.,113
vert.x,examples,HTTP2Examples,example9,Magic Number,The method contains a magic number: 40,131
vert.x,examples,HTTP2Examples,example9,Magic Number,The method contains a magic number: 10,131
vert.x,examples,HTTP2Examples,example11,Magic Number,The method contains a magic number: 8,147
vert.x,examples,HTTP2Examples,example20,Magic Number,The method contains a magic number: 100,230
vert.x,examples,HTTP2Examples,example21,Long Statement,The length of the statement "connection.updateSettings(new Http2Settings().setMaxConcurrentStreams(100)).onSuccess(v -> System.out.println("The settings update has been acknowledged "));" is 157.,234
vert.x,examples,HTTP2Examples,example21,Magic Number,The method contains a magic number: 100,234
vert.x,examples,HTTP2Examples,example23,Magic Number,The method contains a magic number: 8,246
vert.x,examples,HTTP2Examples,useMaxStreams,Magic Number,The method contains a magic number: 10,285
vert.x,examples,HTTP2Examples,useMaxStreams,Magic Number,The method contains a magic number: 3,285
vert.x,examples,HTTPExamples,example2,Magic Number,The method contains a magic number: 1000000,46
vert.x,examples,HTTPExamples,example4,Magic Number,The method contains a magic number: 8080,66
vert.x,examples,HTTPExamples,example5,Magic Number,The method contains a magic number: 8080,72
vert.x,examples,HTTPExamples,example7_1,Magic Number,The method contains a magic number: 8080,103
vert.x,examples,HTTPExamples,example26,Magic Number,The method contains a magic number: 8080,255
vert.x,examples,HTTPExamples,example26b,Empty catch clause,The method has an empty catch block.,267
vert.x,examples,HTTPExamples,example26b,Empty catch clause,The method has an empty catch block.,267
vert.x,examples,HTTPExamples,example26b,Magic Number,The method contains a magic number: 8080,267
vert.x,examples,HTTPExamples,example26c,Empty catch clause,The method has an empty catch block.,287
vert.x,examples,HTTPExamples,example26c,Magic Number,The method contains a magic number: 8080,287
vert.x,examples,HTTPExamples,example27,Magic Number,The method contains a magic number: 400,300
vert.x,examples,HTTPExamples,example27,Magic Number,The method contains a magic number: 8080,300
vert.x,examples,HTTPExamples,sendHttpServerResponse,Magic Number,The method contains a magic number: 400,312
vert.x,examples,HTTPExamples,sendHttpServerResponse,Magic Number,The method contains a magic number: 8080,312
vert.x,examples,HTTPExamples,example30,Magic Number,The method contains a magic number: 8080,337
vert.x,examples,HTTPExamples,sendRequest01,Magic Number,The method contains a magic number: 8080,404
vert.x,examples,HTTPExamples,sendRequest02,Magic Number,The method contains a magic number: 8080,426
vert.x,examples,HTTPExamples,example35,Magic Number,The method contains a magic number: 123,497
vert.x,examples,HTTPExamples,example35,Magic Number,The method contains a magic number: 245l,497
vert.x,examples,HTTPExamples,example36,Magic Number,The method contains a magic number: 12.34d,512
vert.x,examples,HTTPExamples,example36,Magic Number,The method contains a magic number: 432l,512
vert.x,examples,HTTPExamples,example40,Magic Number,The method contains a magic number: 12.3f,527
vert.x,examples,HTTPExamples,example40,Magic Number,The method contains a magic number: 321,527
vert.x,examples,HTTPExamples,example41,Magic Number,The method contains a magic number: 10,536
vert.x,examples,HTTPExamples,exampleClientComposition01,Magic Number,The method contains a magic number: 100,668
vert.x,examples,HTTPExamples,exampleClientComposition03,Long Statement,The length of the statement "Future<JsonObject> future=client.request(HttpMethod.GET`"some-uri").compose(request -> request.send().compose(response -> {" is 123.,701
vert.x,examples,HTTPExamples,exampleClientComposition03,Magic Number,The method contains a magic number: 200,701
vert.x,examples,HTTPExamples,exampleClientComposition04,Long Statement,The length of the statement "return fileSystem.open("/some/large/file"`new OpenOptions().setWrite(true)).onFailure(err -> pipe.close()).compose(file -> pipe.to(file));" is 138.,727
vert.x,examples,HTTPExamples,exampleClientComposition04,Magic Number,The method contains a magic number: 200,727
vert.x,examples,HTTPExamples,exampleFollowRedirect02,Magic Number,The method contains a magic number: 32,772
vert.x,examples,HTTPExamples,exampleFollowRedirect03,Magic Number,The method contains a magic number: 301,802
vert.x,examples,HTTPExamples,example50_2,Magic Number,The method contains a magic number: 405,862
vert.x,examples,HTTPExamples,example50_2,Magic Number,The method contains a magic number: 405,862
vert.x,examples,HTTPExamples,clientTunnel,Magic Number,The method contains a magic number: 200,889
vert.x,examples,HTTPExamples,exampleAsynchronousHandshake,Magic Number,The method contains a magic number: 101,930
vert.x,examples,HTTPExamples,exampleAsynchronousHandshake,Magic Number,The method contains a magic number: 401,930
vert.x,examples,HTTPExamples,example53,Magic Number,The method contains a magic number: 400,951
vert.x,examples,HTTPExamples,exampleWebSocketDisableOriginHeader,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setHost(host).setPort(port).setURI(requestUri).setAllowOriginHeader(false);" is 137.,979
vert.x,examples,HTTPExamples,exampleWebSocketSetOriginHeader,Long Parameter List,The method has 5 parameters. ,995
vert.x,examples,HTTPExamples,exampleWebSocketSetOriginHeader,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setHost(host).setPort(port).setURI(requestUri).addHeader(HttpHeaders.ORIGIN`origin);" is 146.,995
vert.x,examples,HTTPExamples,example55,Magic Number,The method contains a magic number: 123,1011
vert.x,examples,HTTPExamples,example55,Magic Number,The method contains a magic number: 1.23f,1011
vert.x,examples,HTTPExamples,example56_1,Magic Number,The method contains a magic number: 12,1035
vert.x,examples,HTTPExamples,example58,Long Statement,The length of the statement "HttpClientOptions options=new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.HTTP).setHost("localhost").setPort(3128).setUsername("username").setPassword("secret"));" is 191.,1057
vert.x,examples,HTTPExamples,example58,Magic Number,The method contains a magic number: 3128,1057
vert.x,examples,HTTPExamples,example59,Long Statement,The length of the statement "HttpClientOptions options=new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost("localhost").setPort(1080).setUsername("username").setPassword("secret"));" is 193.,1067
vert.x,examples,HTTPExamples,example59,Magic Number,The method contains a magic number: 1080,1067
vert.x,examples,HTTPExamples,nonProxyHosts,Long Statement,The length of the statement "HttpClientOptions options=new HttpClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost("localhost").setPort(1080).setUsername("username").setPassword("secret")).addNonProxyHost("*.foo.com").addNonProxyHost("localhost");" is 251.,1077
vert.x,examples,HTTPExamples,nonProxyHosts,Magic Number,The method contains a magic number: 1080,1077
vert.x,examples,HTTPExamples,perRequestProxyOptions,Long Statement,The length of the statement "client.request(new RequestOptions().setHost("example.com").setProxyOptions(proxyOptions)).compose(request -> request.send().compose(HttpClientResponse::body)).onSuccess(body -> {" is 178.,1089
vert.x,examples,HTTPExamples,serversharing,Magic Number,The method contains a magic number: 8080,1140
vert.x,examples,HTTPExamples,serversharingclient,Magic Number,The method contains a magic number: 100,1146
vert.x,examples,HTTPExamples,serversharingclient,Magic Number,The method contains a magic number: 8080,1146
vert.x,examples,HTTPExamples,setSSLPerRequest,Magic Number,The method contains a magic number: 8080,1175
vert.x,examples,HTTPExamples,setCompressors,Long Statement,The length of the statement "new HttpServerOptions().addCompressor(io.netty.handler.codec.compression.StandardCompressionOptions.gzip()).addCompressor(io.netty.handler.codec.compression.StandardCompressionOptions.deflate()).addCompressor(io.netty.handler.codec.compression.StandardCompressionOptions.brotli()).addCompressor(io.netty.handler.codec.compression.StandardCompressionOptions.zstd());" is 365.,1204
vert.x,examples,HTTPExamples,compressorConfig,Magic Number,The method contains a magic number: 6,1212
vert.x,examples,HTTPExamples,compressorConfig,Magic Number,The method contains a magic number: 15,1212
vert.x,examples,HTTPExamples,compressorConfig,Magic Number,The method contains a magic number: 8,1212
vert.x,examples,HTTPExamples,httpClientSharing1,Magic Number,The method contains a magic number: 4,1216
vert.x,examples,HTTPExamples,httpClientSharing2,Magic Number,The method contains a magic number: 4,1226
vert.x,examples,HTTPExamples,httpClientSharing3,Magic Number,The method contains a magic number: 2,1239
vert.x,examples,HTTPExamples,httpClientSharing3,Magic Number,The method contains a magic number: 4,1239
vert.x,examples,HTTPExamples,start,Magic Number,The method contains a magic number: 2,1242
vert.x,examples,NetExamples,example2,Magic Number,The method contains a magic number: 4321,38
vert.x,examples,NetExamples,example4,Magic Number,The method contains a magic number: 1234,50
vert.x,examples,NetExamples,example5,Magic Number,The method contains a magic number: 1234,56
vert.x,examples,NetExamples,example8,Magic Number,The method contains a magic number: 12.34f,103
vert.x,examples,NetExamples,example8,Magic Number,The method contains a magic number: 123,103
vert.x,examples,NetExamples,example11,Magic Number,The method contains a magic number: 1234,143
vert.x,examples,NetExamples,example11,Magic Number,The method contains a magic number: 10,143
vert.x,examples,NetExamples,example14,Magic Number,The method contains a magic number: 10000,171
vert.x,examples,NetExamples,example15,Magic Number,The method contains a magic number: 10000,177
vert.x,examples,NetExamples,example15,Magic Number,The method contains a magic number: 4321,177
vert.x,examples,NetExamples,example16,Magic Number,The method contains a magic number: 10,193
vert.x,examples,NetExamples,example16,Magic Number,The method contains a magic number: 500,193
vert.x,examples,NetExamples,example17,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setKeyStoreOptions(new JksOptions().setPath("/path/to/your/server-keystore.jks").setPassword("password-of-your-keystore"));" is 184.,227
vert.x,examples,NetExamples,example19,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setPfxKeyCertOptions(new PfxOptions().setPath("/path/to/your/server-keystore.pfx").setPassword("password-of-your-keystore"));" is 186.,247
vert.x,examples,NetExamples,example21,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setPemKeyCertOptions(new PemKeyCertOptions().setKeyPath("/path/to/your/server-key.pem").setCertPath("/path/to/your/server-cert.pem"));" is 195.,267
vert.x,examples,NetExamples,exampleBKS,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setKeyCertOptions(new KeyStoreOptions().setType("BKS").setPath("/path/to/your/server-keystore.bks").setPassword("password-of-your-keystore"));" is 203.,288
vert.x,examples,NetExamples,example23,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setClientAuth(ClientAuth.REQUIRED).setTrustStoreOptions(new JksOptions().setPath("/path/to/your/truststore.jks").setPassword("password-of-your-truststore"));" is 218.,300
vert.x,examples,NetExamples,example24,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setClientAuth(ClientAuth.REQUIRED).setTrustStoreOptions(new JksOptions().setValue(myTrustStoreAsABuffer).setPassword("password-of-your-truststore"));" is 210.,312
vert.x,examples,NetExamples,example25,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setClientAuth(ClientAuth.REQUIRED).setPfxTrustOptions(new PfxOptions().setPath("/path/to/your/truststore.pfx").setPassword("password-of-your-truststore"));" is 216.,325
vert.x,examples,NetExamples,example26,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setClientAuth(ClientAuth.REQUIRED).setPfxTrustOptions(new PfxOptions().setValue(myTrustStoreAsABuffer).setPassword("password-of-your-truststore"));" is 208.,337
vert.x,examples,NetExamples,example27,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setClientAuth(ClientAuth.REQUIRED).setPemTrustOptions(new PemTrustOptions().addCertPath("/path/to/your/server-ca.pem"));" is 181.,350
vert.x,examples,NetExamples,example28,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setClientAuth(ClientAuth.REQUIRED).setPemTrustOptions(new PemTrustOptions().addCertValue(myCaAsABuffer));" is 166.,361
vert.x,examples,NetExamples,example30,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setTrustStoreOptions(new JksOptions().setPath("/path/to/your/truststore.jks").setPassword("password-of-your-truststore"));" is 183.,384
vert.x,examples,NetExamples,example31,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setTrustStoreOptions(new JksOptions().setValue(myTrustStoreAsABuffer).setPassword("password-of-your-truststore"));" is 175.,395
vert.x,examples,NetExamples,example32,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setPfxTrustOptions(new PfxOptions().setPath("/path/to/your/truststore.pfx").setPassword("password-of-your-truststore"));" is 181.,407
vert.x,examples,NetExamples,example33,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setPfxTrustOptions(new PfxOptions().setValue(myTrustStoreAsABuffer).setPassword("password-of-your-truststore"));" is 173.,418
vert.x,examples,NetExamples,example34,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setPemTrustOptions(new PemTrustOptions().addCertPath("/path/to/your/ca-cert.pem"));" is 144.,430
vert.x,examples,NetExamples,example35,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setPemTrustOptions(new PemTrustOptions().addCertValue(myTrustStoreAsABuffer));" is 139.,440
vert.x,examples,NetExamples,example36,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setKeyStoreOptions(new JksOptions().setPath("/path/to/your/client-keystore.jks").setPassword("password-of-your-keystore"));" is 184.,453
vert.x,examples,NetExamples,example38,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setPfxKeyCertOptions(new PfxOptions().setPath("/path/to/your/client-keystore.pfx").setPassword("password-of-your-keystore"));" is 186.,473
vert.x,examples,NetExamples,example40,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setPemKeyCertOptions(new PemKeyCertOptions().setKeyPath("/path/to/your/client-key.pem").setCertPath("/path/to/your/client-cert.pem"));" is 195.,493
vert.x,examples,NetExamples,updateSSLOptions,Long Statement,The length of the statement "Future<Void> fut=server.updateSSLOptions(new SSLOptions().setKeyCertOptions(new JksOptions().setPath("/path/to/your/server-keystore.jks").setPassword("password-of-your-keystore")));" is 181.,514
vert.x,examples,NetExamples,example42,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setTrustStoreOptions(trustOptions).addCrlPath("/path/to/your/crl.pem");" is 132.,522
vert.x,examples,NetExamples,example43,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setSsl(true).setTrustStoreOptions(trustOptions).addCrlValue(myCrlAsABuffer);" is 124.,530
vert.x,examples,NetExamples,example44,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setKeyStoreOptions(keyStoreOptions).addEnabledCipherSuite("ECDHE-RSA-AES128-GCM-SHA256").addEnabledCipherSuite("ECDHE-ECDSA-AES128-GCM-SHA256").addEnabledCipherSuite("ECDHE-RSA-AES256-GCM-SHA384").addEnabledCipherSuite("CDHE-ECDSA-AES256-GCM-SHA384");" is 312.,539
vert.x,examples,NetExamples,addEnabledTLSPrococol,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setKeyStoreOptions(keyStoreOptions).addEnabledSecureTransportProtocol("TLSv1.1");" is 142.,550
vert.x,examples,NetExamples,removeEnabledTLSPrococol,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setSsl(true).setKeyStoreOptions(keyStoreOptions).removeEnabledSecureTransportProtocol("TLSv1.2");" is 145.,558
vert.x,examples,NetExamples,exampleSSLEngine,Long Statement,The length of the statement "options=new NetServerOptions().setSsl(true).setKeyStoreOptions(keyStoreOptions).setJdkSslEngineOptions(new JdkSSLEngineOptions());" is 130.,566
vert.x,examples,NetExamples,exampleSSLEngine,Long Statement,The length of the statement "options=new NetServerOptions().setSsl(true).setKeyStoreOptions(keyStoreOptions).setOpenSslEngineOptions(new OpenSSLEngineOptions());" is 132.,566
vert.x,examples,NetExamples,example47,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost("localhost").setPort(1080).setUsername("username").setPassword("secret"));" is 191.,593
vert.x,examples,NetExamples,example47,Magic Number,The method contains a magic number: 1080,593
vert.x,examples,NetExamples,nonProxyHosts,Long Statement,The length of the statement "NetClientOptions options=new NetClientOptions().setProxyOptions(new ProxyOptions().setType(ProxyType.SOCKS5).setHost("localhost").setPort(1080).setUsername("username").setPassword("secret")).addNonProxyHost("*.foo.com").addNonProxyHost("localhost");" is 249.,601
vert.x,examples,NetExamples,nonProxyHosts,Magic Number,The method contains a magic number: 1080,601
vert.x,examples,NetExamples,example48,Long Statement,The length of the statement "NetServerOptions serverOptions=new NetServerOptions().setSsl(true).setKeyCertOptions(certificate.keyCertOptions()).setTrustOptions(certificate.trustOptions());" is 159.,612
vert.x,examples,NetExamples,example48,Long Statement,The length of the statement "vertx.createNetServer(serverOptions).connectHandler(socket -> socket.end(Buffer.buffer("Hello!"))).listen(1234`"localhost");" is 124.,612
vert.x,examples,NetExamples,example48,Long Statement,The length of the statement "NetClientOptions clientOptions=new NetClientOptions().setSsl(true).setKeyCertOptions(certificate.keyCertOptions()).setTrustOptions(certificate.trustOptions());" is 159.,612
vert.x,examples,NetExamples,example48,Magic Number,The method contains a magic number: 1234,612
vert.x,examples,NetExamples,example48,Magic Number,The method contains a magic number: 1234,612
vert.x,examples,NetExamples,example50,Long Statement,The length of the statement "vertx.createHttpServer(new HttpServerOptions().setSsl(true).setKeyCertOptions(certificate.keyCertOptions()).setTrustOptions(certificate.trustOptions())).requestHandler(req -> req.response().end("Hello!")).listen(8080);" is 218.,647
vert.x,examples,NetExamples,example50,Magic Number,The method contains a magic number: 8080,647
vert.x,examples,NetExamples,configureSNIServer,Long Statement,The length of the statement "NetServer netServer=vertx.createNetServer(new NetServerOptions().setKeyStoreOptions(keyCertOptions).setSsl(true).setSni(true));" is 127.,670
vert.x,examples,NetExamples,configureSNIServerWithPems,Long Statement,The length of the statement "PemKeyCertOptions keyCertOptions=new PemKeyCertOptions().setKeyPaths(Arrays.asList("default-key.pem"`"host1-key.pem"`"etc...")).setCertPaths(Arrays.asList("default-cert.pem"`"host2-key.pem"`"etc..."));" is 201.,680
vert.x,examples,NetExamples,configureSNIServerWithPems,Long Statement,The length of the statement "NetServer netServer=vertx.createNetServer(new NetServerOptions().setPemKeyCertOptions(keyCertOptions).setSsl(true).setSni(true));" is 129.,680
vert.x,examples,NetExamples,useSNIInClient,Magic Number,The method contains a magic number: 1234,693
vert.x,examples,NetExamples,configureTrafficShapingForNetServer,Long Statement,The length of the statement "NetServerOptions options=new NetServerOptions().setHost("localhost").setPort(1234).setTrafficShapingOptions(new TrafficShapingOptions().setInboundGlobalBandwidth(64 * 1024).setOutboundGlobalBandwidth(128 * 1024));" is 213.,713
vert.x,examples,NetExamples,configureTrafficShapingForNetServer,Magic Number,The method contains a magic number: 1234,713
vert.x,examples,NetExamples,configureTrafficShapingForNetServer,Magic Number,The method contains a magic number: 64,713
vert.x,examples,NetExamples,configureTrafficShapingForNetServer,Magic Number,The method contains a magic number: 1024,713
vert.x,examples,NetExamples,configureTrafficShapingForNetServer,Magic Number,The method contains a magic number: 128,713
vert.x,examples,NetExamples,configureTrafficShapingForNetServer,Magic Number,The method contains a magic number: 1024,713
vert.x,examples,NetExamples,configureTrafficShapingForHttpServer,Long Statement,The length of the statement "HttpServerOptions options=new HttpServerOptions().setHost("localhost").setPort(1234).setTrafficShapingOptions(new TrafficShapingOptions().setInboundGlobalBandwidth(64 * 1024).setOutboundGlobalBandwidth(128 * 1024));" is 215.,723
vert.x,examples,NetExamples,configureTrafficShapingForHttpServer,Magic Number,The method contains a magic number: 1234,723
vert.x,examples,NetExamples,configureTrafficShapingForHttpServer,Magic Number,The method contains a magic number: 64,723
vert.x,examples,NetExamples,configureTrafficShapingForHttpServer,Magic Number,The method contains a magic number: 1024,723
vert.x,examples,NetExamples,configureTrafficShapingForHttpServer,Magic Number,The method contains a magic number: 128,723
vert.x,examples,NetExamples,configureTrafficShapingForHttpServer,Magic Number,The method contains a magic number: 1024,723
vert.x,examples,ParseToolsExamples,recordParserExample2,Magic Number,The method contains a magic number: 4,35
vert.x,examples,ParseToolsExamples,jsonParserExample1,Complex Method,Cyclomatic complexity of the method is 8,41
vert.x,examples,SharedDataExamples,localMap,Magic Number,The method contains a magic number: 123,23
vert.x,examples,SharedDataExamples,lock,Magic Number,The method contains a magic number: 5000,99
vert.x,examples,SharedDataExamples,lockWithTimeout,Magic Number,The method contains a magic number: 10000,119
vert.x,examples,SharedDataExamples,localLock,Magic Number,The method contains a magic number: 5000,135
vert.x,examples,StreamsExamples,pipe1,Magic Number,The method contains a magic number: 1234,34
vert.x,examples,StreamsExamples,pipe2,Magic Number,The method contains a magic number: 1234,46
vert.x,examples,StreamsExamples,pipe3,Magic Number,The method contains a magic number: 1234,60
vert.x,examples,StreamsExamples,pipe4,Magic Number,The method contains a magic number: 1234,74
vert.x,examples,StreamsExamples,pipe5,Magic Number,The method contains a magic number: 1234,91
vert.x,examples,StreamsExamples,pipe8,Magic Number,The method contains a magic number: 500,137
vert.x,examples,StreamsExamples,pipe8,Magic Number,The method contains a magic number: 8080,137
vert.x,examples.cli,CLIExamples,example1,Long Statement,The length of the statement "CLI cli=CLI.create("copy").setSummary("A command line interface to copy files.").addOption(new Option().setLongName("directory").setShortName("R").setDescription("enables directory support").setFlag(true)).addArgument(new Argument().setIndex(0).setDescription("The source").setArgName("source")).addArgument(new Argument().setIndex(1).setDescription("The destination").setArgName("target"));" is 391.,28
vert.x,examples.cli,CLIExamples,example2,Long Statement,The length of the statement "CLI cli=CLI.create("some-name").setSummary("A command line interface illustrating the options valuation.").addOption(new Option().setLongName("flag").setShortName("f").setFlag(true).setDescription("a flag")).addOption(new Option().setLongName("single").setShortName("s").setDescription("a single-valued option")).addOption(new Option().setLongName("multiple").setShortName("m").setMultiValued(true).setDescription("a multi-valued option"));" is 440.,46
vert.x,examples.cli,CLIExamples,example3,Long Statement,The length of the statement "CLI cli=CLI.create("some-name").addOption(new Option().setLongName("mandatory").setRequired(true).setDescription("a mandatory option"));" is 136.,58
vert.x,examples.cli,CLIExamples,example4,Long Statement,The length of the statement "CLI cli=CLI.create("some-name").addOption(new Option().setLongName("optional").setDefaultValue("hello").setDescription("an optional option with a default value"));" is 163.,66
vert.x,examples.cli,CLIExamples,example41,Long Statement,The length of the statement "CLI cli=CLI.create("some-name").addOption(new Option().setLongName("color").setDefaultValue("green").addChoice("blue").addChoice("red").addChoice("green").setDescription("a color"));" is 182.,74
vert.x,examples.cli,CLIExamples,example5,Long Statement,The length of the statement "CLI cli=CLI.create("some-name").addArgument(new Argument().setIndex(0).setDescription("the first argument").setArgName("arg1")).addArgument(new Argument().setIndex(1).setDescription("the second argument").setArgName("arg2"));" is 225.,83
vert.x,examples.cli,CLIExamples,example51,Long Statement,The length of the statement "CLI cli=CLI.create("some-name").addArgument(new Argument().setDescription("the first argument").setArgName("arg1")).addArgument(new Argument().setDescription("the second argument").setArgName("arg2"));" is 201.,95
vert.x,examples.cli,CLIExamples,example6,Long Statement,The length of the statement "CLI cli=CLI.create("copy").setSummary("A command line interface to copy files.").addOption(new Option().setLongName("directory").setShortName("R").setDescription("enables directory support").setFlag(true)).addArgument(new Argument().setIndex(0).setDescription("The source").setArgName("source")).addArgument(new Argument().setIndex(0).setDescription("The destination").setArgName("target"));" is 391.,107
vert.x,examples.cli,CLIExamples,example9,Long Statement,The length of the statement "CLI cli=CLI.create("test").addOption(new Option().setLongName("help").setShortName("h").setFlag(true).setHelp(true)).addOption(new Option().setLongName("mandatory").setRequired(true));" is 184.,139
vert.x,examples.cli,TypedCLIExamples,example1,Long Statement,The length of the statement "CLI cli=CLI.create("copy").setSummary("A command line interface to copy files.").addOption(new TypedOption<Boolean>().setType(Boolean.class).setLongName("directory").setShortName("R").setDescription("enables directory support").setFlag(true)).addArgument(new TypedArgument<File>().setType(File.class).setIndex(0).setDescription("The source").setArgName("source")).addArgument(new TypedArgument<File>().setType(File.class).setIndex(0).setDescription("The destination").setArgName("target"));" is 490.,31
vert.x,examples.cli,TypedCLIExamples,example3,Long Statement,The length of the statement "CLI cli=CLI.create("some-name").addOption(new TypedOption<Person>().setType(Person.class).setConverter(new PersonConverter()).setLongName("person"));" is 149.,59
vert.x,io.vertx.core.buffer,BufferTest,testSetGetInt,Magic Number,The method contains a magic number: 10,59
vert.x,io.vertx.core.buffer,BufferTest,testSetGetInt,Magic Number,The method contains a magic number: 4,59
vert.x,io.vertx.core.buffer,BufferTest,testSetGetInt,Magic Number,The method contains a magic number: 10,59
vert.x,io.vertx.core.buffer,BufferTest,testSetGetInt,Magic Number,The method contains a magic number: 10,59
vert.x,io.vertx.core.buffer,BufferTest,testSetGetInt,Magic Number,The method contains a magic number: 4,59
vert.x,io.vertx.core.buffer,BufferTest,testAppendBuff,Magic Number,The method contains a magic number: 100,81
vert.x,io.vertx.core.buffer,BufferTest,testAppendBuff,Magic Number,The method contains a magic number: 2,81
vert.x,io.vertx.core.buffer,BufferTest,testAppendBytes,Magic Number,The method contains a magic number: 100,98
vert.x,io.vertx.core.buffer,BufferTest,testAppendBytes,Magic Number,The method contains a magic number: 2,98
vert.x,io.vertx.core.buffer,BufferTest,testAppendBytesWithOffsetAndLen,Magic Number,The method contains a magic number: 100,115
vert.x,io.vertx.core.buffer,BufferTest,testAppendBytesWithOffsetAndLen,Magic Number,The method contains a magic number: 2,115
vert.x,io.vertx.core.buffer,BufferTest,testAppendBytesWithOffsetAndLen,Magic Number,The method contains a magic number: 2,115
vert.x,io.vertx.core.buffer,BufferTest,testAppendBufferWithOffsetAndLen,Magic Number,The method contains a magic number: 100,144
vert.x,io.vertx.core.buffer,BufferTest,testAppendBufferWithOffsetAndLen,Magic Number,The method contains a magic number: 2,144
vert.x,io.vertx.core.buffer,BufferTest,testAppendBufferWithOffsetAndLen,Magic Number,The method contains a magic number: 2,144
vert.x,io.vertx.core.buffer,BufferTest,testAppendByte,Magic Number,The method contains a magic number: 100,163
vert.x,io.vertx.core.buffer,BufferTest,testAppendByte,Magic Number,The method contains a magic number: 2,163
vert.x,io.vertx.core.buffer,BufferTest,testAppendByte2,Magic Number,The method contains a magic number: 100,181
vert.x,io.vertx.core.buffer,BufferTest,testAppendByte2,Magic Number,The method contains a magic number: 9,181
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedByte,Magic Number,The method contains a magic number: 100,189
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedByte,Magic Number,The method contains a magic number: 2,189
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedByte,Magic Number,The method contains a magic number: 101,189
vert.x,io.vertx.core.buffer,BufferTest,testAppendShort,Magic Number,The method contains a magic number: 100,196
vert.x,io.vertx.core.buffer,BufferTest,testAppendShort,Magic Number,The method contains a magic number: 102,196
vert.x,io.vertx.core.buffer,BufferTest,testAppendShort,Magic Number,The method contains a magic number: 104,196
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedShort,Magic Number,The method contains a magic number: 100,205
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedShort,Magic Number,The method contains a magic number: 2,205
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedShort,Magic Number,The method contains a magic number: 102,205
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedShort,Magic Number,The method contains a magic number: 2,205
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedShort,Magic Number,The method contains a magic number: 104,205
vert.x,io.vertx.core.buffer,BufferTest,testAppendInt,Magic Number,The method contains a magic number: 100,214
vert.x,io.vertx.core.buffer,BufferTest,testAppendInt,Magic Number,The method contains a magic number: 104,214
vert.x,io.vertx.core.buffer,BufferTest,testAppendInt,Magic Number,The method contains a magic number: 108,214
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedInt,Magic Number,The method contains a magic number: 100,223
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedInt,Magic Number,The method contains a magic number: 2,223
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedInt,Magic Number,The method contains a magic number: 104,223
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedInt,Magic Number,The method contains a magic number: 2,223
vert.x,io.vertx.core.buffer,BufferTest,testAppendUnsignedInt,Magic Number,The method contains a magic number: 108,223
vert.x,io.vertx.core.buffer,BufferTest,testAppendMedium,Magic Number,The method contains a magic number: 100,232
vert.x,io.vertx.core.buffer,BufferTest,testAppendMedium,Magic Number,The method contains a magic number: 103,232
vert.x,io.vertx.core.buffer,BufferTest,testAppendMedium,Magic Number,The method contains a magic number: 106,232
vert.x,io.vertx.core.buffer,BufferTest,testAppendLong,Magic Number,The method contains a magic number: 100,241
vert.x,io.vertx.core.buffer,BufferTest,testAppendLong,Magic Number,The method contains a magic number: 108,241
vert.x,io.vertx.core.buffer,BufferTest,testAppendLong,Magic Number,The method contains a magic number: 116,241
vert.x,io.vertx.core.buffer,BufferTest,testAppendString1,Magic Number,The method contains a magic number: 100,250
vert.x,io.vertx.core.buffer,BufferTest,testLE,Long Statement,The length of the statement "checkBEAndLE(2`Buffer.buffer().appendUnsignedShort(Short.MAX_VALUE)`Buffer.buffer().appendUnsignedShortLE(Short.MAX_VALUE));" is 124.,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Long Statement,The length of the statement "checkBEAndLE(3`Buffer.buffer().appendMedium(Integer.MAX_VALUE / 2)`Buffer.buffer().appendMediumLE(Integer.MAX_VALUE / 2));" is 122.,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Long Statement,The length of the statement "checkBEAndLE(4`Buffer.buffer().appendUnsignedInt(Integer.MAX_VALUE)`Buffer.buffer().appendUnsignedIntLE(Integer.MAX_VALUE));" is 124.,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Magic Number,The method contains a magic number: 2,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Magic Number,The method contains a magic number: 2,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Magic Number,The method contains a magic number: 3,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Magic Number,The method contains a magic number: 2,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Magic Number,The method contains a magic number: 2,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Magic Number,The method contains a magic number: 4,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Magic Number,The method contains a magic number: 4,272
vert.x,io.vertx.core.buffer,BufferTest,testLE,Magic Number,The method contains a magic number: 8,272
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 100,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 2,290
vert.x,io.vertx.core.buffer,BufferTest,testGetOutOfBounds,Magic Number,The method contains a magic number: 2,290
vert.x,io.vertx.core.buffer,BufferTest,testGetByte,Magic Number,The method contains a magic number: 100,358
vert.x,io.vertx.core.buffer,BufferTest,testGetUnsignedByte,Magic Number,The method contains a magic number: 100,369
vert.x,io.vertx.core.buffer,BufferTest,testGetSetInt,Magic Number,The method contains a magic number: 100,380
vert.x,io.vertx.core.buffer,BufferTest,testGetSetInt,Magic Number,The method contains a magic number: 4,380
vert.x,io.vertx.core.buffer,BufferTest,testGetSetInt,Magic Number,The method contains a magic number: 4,380
vert.x,io.vertx.core.buffer,BufferTest,testGetSetInt,Magic Number,The method contains a magic number: 4,380
vert.x,io.vertx.core.buffer,BufferTest,testGetSetInt,Magic Number,The method contains a magic number: 4,380
vert.x,io.vertx.core.buffer,BufferTest,testGetSetInt,Magic Number,The method contains a magic number: 4,380
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedInt,Magic Number,The method contains a magic number: 100,410
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedInt,Magic Number,The method contains a magic number: 4,410
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedInt,Magic Number,The method contains a magic number: 4,410
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedInt,Magic Number,The method contains a magic number: 4,410
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedInt,Magic Number,The method contains a magic number: 4,410
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedInt,Magic Number,The method contains a magic number: 4,410
vert.x,io.vertx.core.buffer,BufferTest,testGetSetMedium,Magic Number,The method contains a magic number: 100,440
vert.x,io.vertx.core.buffer,BufferTest,testGetSetMedium,Magic Number,The method contains a magic number: 3,440
vert.x,io.vertx.core.buffer,BufferTest,testGetSetMedium,Magic Number,The method contains a magic number: 3,440
vert.x,io.vertx.core.buffer,BufferTest,testGetSetMedium,Magic Number,The method contains a magic number: 3,440
vert.x,io.vertx.core.buffer,BufferTest,testGetSetMedium,Magic Number,The method contains a magic number: 3,440
vert.x,io.vertx.core.buffer,BufferTest,testGetSetMedium,Magic Number,The method contains a magic number: 3,440
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedMedium,Magic Number,The method contains a magic number: 100,470
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedMedium,Magic Number,The method contains a magic number: 3,470
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedMedium,Magic Number,The method contains a magic number: 3,470
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedMedium,Magic Number,The method contains a magic number: 3,470
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedMedium,Magic Number,The method contains a magic number: 3,470
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedMedium,Magic Number,The method contains a magic number: 3,470
vert.x,io.vertx.core.buffer,BufferTest,testGetSetLong,Magic Number,The method contains a magic number: 100,502
vert.x,io.vertx.core.buffer,BufferTest,testGetSetLong,Magic Number,The method contains a magic number: 8,502
vert.x,io.vertx.core.buffer,BufferTest,testGetSetLong,Magic Number,The method contains a magic number: 8,502
vert.x,io.vertx.core.buffer,BufferTest,testGetSetLong,Magic Number,The method contains a magic number: 8,502
vert.x,io.vertx.core.buffer,BufferTest,testGetSetLong,Magic Number,The method contains a magic number: 8,502
vert.x,io.vertx.core.buffer,BufferTest,testGetSetLong,Magic Number,The method contains a magic number: 8,502
vert.x,io.vertx.core.buffer,BufferTest,testGetFloat,Magic Number,The method contains a magic number: 100,532
vert.x,io.vertx.core.buffer,BufferTest,testGetFloat,Magic Number,The method contains a magic number: 4,532
vert.x,io.vertx.core.buffer,BufferTest,testGetFloat,Magic Number,The method contains a magic number: 4,532
vert.x,io.vertx.core.buffer,BufferTest,testGetFloat,Magic Number,The method contains a magic number: 4,532
vert.x,io.vertx.core.buffer,BufferTest,testGetDouble,Magic Number,The method contains a magic number: 100,545
vert.x,io.vertx.core.buffer,BufferTest,testGetDouble,Magic Number,The method contains a magic number: 8,545
vert.x,io.vertx.core.buffer,BufferTest,testGetDouble,Magic Number,The method contains a magic number: 8,545
vert.x,io.vertx.core.buffer,BufferTest,testGetDouble,Magic Number,The method contains a magic number: 8,545
vert.x,io.vertx.core.buffer,BufferTest,testGetSetShort,Magic Number,The method contains a magic number: 100,558
vert.x,io.vertx.core.buffer,BufferTest,testGetSetShort,Magic Number,The method contains a magic number: 2,558
vert.x,io.vertx.core.buffer,BufferTest,testGetSetShort,Magic Number,The method contains a magic number: 2,558
vert.x,io.vertx.core.buffer,BufferTest,testGetSetShort,Magic Number,The method contains a magic number: 2,558
vert.x,io.vertx.core.buffer,BufferTest,testGetSetShort,Magic Number,The method contains a magic number: 2,558
vert.x,io.vertx.core.buffer,BufferTest,testGetSetShort,Magic Number,The method contains a magic number: 2,558
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedShort,Magic Number,The method contains a magic number: 100,588
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedShort,Magic Number,The method contains a magic number: 2,588
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedShort,Magic Number,The method contains a magic number: 2,588
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedShort,Magic Number,The method contains a magic number: 2,588
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedShort,Magic Number,The method contains a magic number: 2,588
vert.x,io.vertx.core.buffer,BufferTest,testGetSetUnsignedShort,Magic Number,The method contains a magic number: 2,588
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 100,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 100,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 10,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 20,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 10,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 20,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 10,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 20,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 10,618
vert.x,io.vertx.core.buffer,BufferTest,testGetString,Magic Number,The method contains a magic number: 20,618
vert.x,io.vertx.core.buffer,BufferTest,testGetBytes,Magic Number,The method contains a magic number: 100,629
vert.x,io.vertx.core.buffer,BufferTest,testGetBytes2,Magic Number,The method contains a magic number: 100,637
vert.x,io.vertx.core.buffer,BufferTest,testGetBytes2,Magic Number,The method contains a magic number: 2,637
vert.x,io.vertx.core.buffer,BufferTest,testGetBytes2,Magic Number,The method contains a magic number: 4,637
vert.x,io.vertx.core.buffer,BufferTest,testGetBytes2,Magic Number,The method contains a magic number: 2,637
vert.x,io.vertx.core.buffer,BufferTest,testGetBytes2,Magic Number,The method contains a magic number: 4,637
vert.x,io.vertx.core.buffer,BufferTest,testGetBytes2,Magic Number,The method contains a magic number: 4,637
vert.x,io.vertx.core.buffer,BufferTest,testGetBytes2,Magic Number,The method contains a magic number: 2,637
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArray,Magic Number,The method contains a magic number: 100,647
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArray,Magic Number,The method contains a magic number: 2,647
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArray,Magic Number,The method contains a magic number: 4,647
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArray,Magic Number,The method contains a magic number: 2,647
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArray,Magic Number,The method contains a magic number: 2,647
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArray,Magic Number,The method contains a magic number: 4,647
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArray,Magic Number,The method contains a magic number: 4,647
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArray,Magic Number,The method contains a magic number: 2,647
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithTooSmallByteArray,Magic Number,The method contains a magic number: 100,661
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithTooSmallByteArray,Magic Number,The method contains a magic number: 4,661
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithTooSmallByteArray,Magic Number,The method contains a magic number: 4,661
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithTooSmallByteArray,Magic Number,The method contains a magic number: 4,661
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithTooSmallByteArray,Magic Number,The method contains a magic number: 2,661
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArrayFull,Magic Number,The method contains a magic number: 100,669
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArrayFull,Magic Number,The method contains a magic number: 4,669
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArrayFull,Magic Number,The method contains a magic number: 12,669
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArrayFull,Magic Number,The method contains a magic number: 2,669
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArrayFull,Magic Number,The method contains a magic number: 4,669
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArrayFull,Magic Number,The method contains a magic number: 4,669
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArrayFull,Magic Number,The method contains a magic number: 2,669
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithByteArrayFull,Magic Number,The method contains a magic number: 12,669
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithBadOffset,Magic Number,The method contains a magic number: 100,683
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithBadOffset,Magic Number,The method contains a magic number: 2,683
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithBadOffset,Magic Number,The method contains a magic number: 4,683
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithBadOffset,Magic Number,The method contains a magic number: 4,683
vert.x,io.vertx.core.buffer,BufferTest,testGetBytesWithBadOffset,Magic Number,The method contains a magic number: 2,683
vert.x,io.vertx.core.buffer,BufferTest,testSetInt,Magic Number,The method contains a magic number: 4,693
vert.x,io.vertx.core.buffer,BufferTest,testSetInt,Magic Number,The method contains a magic number: 4,703
vert.x,io.vertx.core.buffer,BufferTest,testSetInt,Magic Number,The method contains a magic number: 4,703
vert.x,io.vertx.core.buffer,BufferTest,testSetUnsignedInt,Magic Number,The method contains a magic number: 4,712
vert.x,io.vertx.core.buffer,BufferTest,testSetUnsignedInt,Magic Number,The method contains a magic number: 4,722
vert.x,io.vertx.core.buffer,BufferTest,testSetUnsignedInt,Magic Number,The method contains a magic number: 4,722
vert.x,io.vertx.core.buffer,BufferTest,testSetLong,Magic Number,The method contains a magic number: 8,733
vert.x,io.vertx.core.buffer,BufferTest,testSetLong,Magic Number,The method contains a magic number: 8,743
vert.x,io.vertx.core.buffer,BufferTest,testSetLong,Magic Number,The method contains a magic number: 8,743
vert.x,io.vertx.core.buffer,BufferTest,testSetFloat,Magic Number,The method contains a magic number: 4,792
vert.x,io.vertx.core.buffer,BufferTest,testSetFloat,Magic Number,The method contains a magic number: 4,802
vert.x,io.vertx.core.buffer,BufferTest,testSetFloat,Magic Number,The method contains a magic number: 4,802
vert.x,io.vertx.core.buffer,BufferTest,testSetDouble,Magic Number,The method contains a magic number: 8,811
vert.x,io.vertx.core.buffer,BufferTest,testSetDouble,Magic Number,The method contains a magic number: 8,821
vert.x,io.vertx.core.buffer,BufferTest,testSetDouble,Magic Number,The method contains a magic number: 8,821
vert.x,io.vertx.core.buffer,BufferTest,testSetShort,Magic Number,The method contains a magic number: 2,830
vert.x,io.vertx.core.buffer,BufferTest,testSetShort,Magic Number,The method contains a magic number: 2,840
vert.x,io.vertx.core.buffer,BufferTest,testSetShort,Magic Number,The method contains a magic number: 2,840
vert.x,io.vertx.core.buffer,BufferTest,testSetUnsignedShort,Magic Number,The method contains a magic number: 2,849
vert.x,io.vertx.core.buffer,BufferTest,testSetUnsignedShort,Magic Number,The method contains a magic number: 2,859
vert.x,io.vertx.core.buffer,BufferTest,testSetUnsignedShort,Magic Number,The method contains a magic number: 2,859
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 150,870
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 150,870
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer2,Magic Number,The method contains a magic number: 150,876
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer2,Magic Number,The method contains a magic number: 150,876
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 100,882
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 50,882
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 50,882
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 150,882
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 100,882
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 50,882
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 50,882
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesBuffer,Magic Number,The method contains a magic number: 150,882
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesWithOffsetAndLen,Magic Number,The method contains a magic number: 100,899
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesWithOffsetAndLen,Magic Number,The method contains a magic number: 2,899
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesWithOffsetAndLen,Magic Number,The method contains a magic number: 2,899
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesWithOffsetAndLen,Magic Number,The method contains a magic number: 150,899
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesWithOffsetAndLen,Magic Number,The method contains a magic number: 150,899
vert.x,io.vertx.core.buffer,BufferTest,testSetBufferWithOffsetAndLen,Magic Number,The method contains a magic number: 100,931
vert.x,io.vertx.core.buffer,BufferTest,testSetBufferWithOffsetAndLen,Magic Number,The method contains a magic number: 2,931
vert.x,io.vertx.core.buffer,BufferTest,testSetBufferWithOffsetAndLen,Magic Number,The method contains a magic number: 2,931
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesString,Magic Number,The method contains a magic number: 150,953
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesString,Magic Number,The method contains a magic number: 100,963
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesString,Magic Number,The method contains a magic number: 50,963
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesString,Magic Number,The method contains a magic number: 50,963
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesString,Magic Number,The method contains a magic number: 150,963
vert.x,io.vertx.core.buffer,BufferTest,testSetBytesString,Magic Number,The method contains a magic number: 150,963
vert.x,io.vertx.core.buffer,BufferTest,testToString,Magic Number,The method contains a magic number: 100,979
vert.x,io.vertx.core.buffer,BufferTest,testCopy,Magic Number,The method contains a magic number: 100,988
vert.x,io.vertx.core.buffer,BufferTest,testCreateBuffers,Magic Number,The method contains a magic number: 1000,1002
vert.x,io.vertx.core.buffer,BufferTest,testCreateBuffers,Magic Number,The method contains a magic number: 100,1002
vert.x,io.vertx.core.buffer,BufferTest,testCreateBuffers,Magic Number,The method contains a magic number: 100,1002
vert.x,io.vertx.core.buffer,BufferTest,testSlice1,Empty catch clause,The method has an empty catch block.,1020
vert.x,io.vertx.core.buffer,BufferTest,testSlice1,Magic Number,The method contains a magic number: 100,1020
vert.x,io.vertx.core.buffer,BufferTest,testSlice1,Magic Number,The method contains a magic number: 100,1020
vert.x,io.vertx.core.buffer,BufferTest,testSlice1,Magic Number,The method contains a magic number: 100,1020
vert.x,io.vertx.core.buffer,BufferTest,testSlice1,Magic Number,The method contains a magic number: 100,1020
vert.x,io.vertx.core.buffer,BufferTest,testSlice1,Magic Number,The method contains a magic number: 100,1020
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Empty catch clause,The method has an empty catch block.,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 100,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 10,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 20,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 10,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 10,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 10,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 100,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 10,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 10,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 10,1043
vert.x,io.vertx.core.buffer,BufferTest,testSlice2,Magic Number,The method contains a magic number: 10,1043
vert.x,io.vertx.core.buffer,BufferTest,testToJsonObject,Empty catch clause,The method has an empty catch block.,1068
vert.x,io.vertx.core.buffer,BufferTest,testToJsonObject,Magic Number,The method contains a magic number: 5,1068
vert.x,io.vertx.core.buffer,BufferTest,testToJsonObject,Magic Number,The method contains a magic number: 10,1068
vert.x,io.vertx.core.buffer,BufferTest,testToJsonArray,Empty catch clause,The method has an empty catch block.,1085
vert.x,io.vertx.core.buffer,BufferTest,testToJsonArray,Magic Number,The method contains a magic number: 5,1085
vert.x,io.vertx.core.buffer,BufferTest,testToJsonArray,Magic Number,The method contains a magic number: 10,1085
vert.x,io.vertx.core.buffer,BufferTest,testLength,Magic Number,The method contains a magic number: 100,1102
vert.x,io.vertx.core.buffer,BufferTest,testLength,Magic Number,The method contains a magic number: 100,1102
vert.x,io.vertx.core.buffer,BufferTest,testLength2,Magic Number,The method contains a magic number: 100,1109
vert.x,io.vertx.core.buffer,BufferTest,testLength2,Magic Number,The method contains a magic number: 90,1109
vert.x,io.vertx.core.buffer,BufferTest,testLength2,Magic Number,The method contains a magic number: 10,1109
vert.x,io.vertx.core.buffer,BufferTest,testLength2,Magic Number,The method contains a magic number: 90,1109
vert.x,io.vertx.core.buffer,BufferTest,testAppendDoesNotModifyByteBufIndex,Magic Number,The method contains a magic number: 6,1115
vert.x,io.vertx.core.buffer,BufferTest,testAppendDoesNotModifyByteBufIndex,Magic Number,The method contains a magic number: 6,1115
vert.x,io.vertx.core.buffer,BufferTest,testAppendExpandsBufferWhenMaxCapacityReached,Magic Number,The method contains a magic number: 8,1128
vert.x,io.vertx.core.buffer,BufferTest,testSetByteAfterCurrentWriterIndexWithoutExpandingCapacity,Magic Number,The method contains a magic number: 10,1145
vert.x,io.vertx.core.buffer,BufferTest,testSetByteAfterCurrentWriterIndexWithoutExpandingCapacity,Magic Number,The method contains a magic number: 5,1145
vert.x,io.vertx.core.buffer,BufferTest,testSetByteAfterCurrentWriterIndexWithoutExpandingCapacity,Magic Number,The method contains a magic number: 7,1145
vert.x,io.vertx.core.buffer,BufferTest,testSetByteAfterCurrentWriterIndexWithoutExpandingCapacity,Magic Number,The method contains a magic number: 8,1145
vert.x,io.vertx.core.buffer,BufferTest,testGetByteBuf,Magic Number,The method contains a magic number: 5,1154
vert.x,io.vertx.core.buffer,BufferTest,testGetByteBuf,Magic Number,The method contains a magic number: 11,1154
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 2,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 2,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 2,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 2,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 3,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 3,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 3,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 3,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 4,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 4,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 4,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 4,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 8,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 8,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 4,1167
vert.x,io.vertx.core.buffer,BufferTest,testGetXXXUpperBound,Magic Number,The method contains a magic number: 8,1167
vert.x,io.vertx.core.buffer.impl,BufferImpl,getInt,Magic Number,The method contains a magic number: 4,104
vert.x,io.vertx.core.buffer.impl,BufferImpl,getIntLE,Magic Number,The method contains a magic number: 4,109
vert.x,io.vertx.core.buffer.impl,BufferImpl,getUnsignedInt,Magic Number,The method contains a magic number: 4,114
vert.x,io.vertx.core.buffer.impl,BufferImpl,getUnsignedIntLE,Magic Number,The method contains a magic number: 4,119
vert.x,io.vertx.core.buffer.impl,BufferImpl,getLong,Magic Number,The method contains a magic number: 8,124
vert.x,io.vertx.core.buffer.impl,BufferImpl,getLongLE,Magic Number,The method contains a magic number: 8,129
vert.x,io.vertx.core.buffer.impl,BufferImpl,getDouble,Magic Number,The method contains a magic number: 8,134
vert.x,io.vertx.core.buffer.impl,BufferImpl,getFloat,Magic Number,The method contains a magic number: 4,139
vert.x,io.vertx.core.buffer.impl,BufferImpl,getShort,Magic Number,The method contains a magic number: 2,144
vert.x,io.vertx.core.buffer.impl,BufferImpl,getShortLE,Magic Number,The method contains a magic number: 2,149
vert.x,io.vertx.core.buffer.impl,BufferImpl,getUnsignedShort,Magic Number,The method contains a magic number: 2,154
vert.x,io.vertx.core.buffer.impl,BufferImpl,getUnsignedShortLE,Magic Number,The method contains a magic number: 2,159
vert.x,io.vertx.core.buffer.impl,BufferImpl,getMedium,Magic Number,The method contains a magic number: 3,164
vert.x,io.vertx.core.buffer.impl,BufferImpl,getMediumLE,Magic Number,The method contains a magic number: 3,169
vert.x,io.vertx.core.buffer.impl,BufferImpl,getUnsignedMedium,Magic Number,The method contains a magic number: 3,174
vert.x,io.vertx.core.buffer.impl,BufferImpl,getUnsignedMediumLE,Magic Number,The method contains a magic number: 3,179
vert.x,io.vertx.core.buffer.impl,BufferImpl,setInt,Magic Number,The method contains a magic number: 4,366
vert.x,io.vertx.core.buffer.impl,BufferImpl,setIntLE,Magic Number,The method contains a magic number: 4,372
vert.x,io.vertx.core.buffer.impl,BufferImpl,setUnsignedInt,Magic Number,The method contains a magic number: 4,378
vert.x,io.vertx.core.buffer.impl,BufferImpl,setUnsignedIntLE,Magic Number,The method contains a magic number: 4,384
vert.x,io.vertx.core.buffer.impl,BufferImpl,setMedium,Magic Number,The method contains a magic number: 3,390
vert.x,io.vertx.core.buffer.impl,BufferImpl,setMediumLE,Magic Number,The method contains a magic number: 3,396
vert.x,io.vertx.core.buffer.impl,BufferImpl,setLong,Magic Number,The method contains a magic number: 8,402
vert.x,io.vertx.core.buffer.impl,BufferImpl,setLongLE,Magic Number,The method contains a magic number: 8,408
vert.x,io.vertx.core.buffer.impl,BufferImpl,setDouble,Magic Number,The method contains a magic number: 8,414
vert.x,io.vertx.core.buffer.impl,BufferImpl,setFloat,Magic Number,The method contains a magic number: 4,420
vert.x,io.vertx.core.buffer.impl,BufferImpl,setShort,Magic Number,The method contains a magic number: 2,426
vert.x,io.vertx.core.buffer.impl,BufferImpl,setShortLE,Magic Number,The method contains a magic number: 2,432
vert.x,io.vertx.core.buffer.impl,BufferImpl,setUnsignedShort,Magic Number,The method contains a magic number: 2,438
vert.x,io.vertx.core.buffer.impl,BufferImpl,setUnsignedShortLE,Magic Number,The method contains a magic number: 2,444
vert.x,io.vertx.core.buffer.impl,BufferImpl,readFromBuffer,Magic Number,The method contains a magic number: 4,595
vert.x,io.vertx.core.buffer.impl,BufferImpl,readFromBuffer,Magic Number,The method contains a magic number: 4,595
vert.x,io.vertx.core.buffer.impl,BufferImpl,readFromBuffer,Magic Number,The method contains a magic number: 4,595
vert.x,io.vertx.core.buffer.impl,VertxBufferTest,testDuplicate,Magic Number,The method contains a magic number: 3,53
vert.x,io.vertx.core.buffer.impl,VertxBufferTest,testDuplicate,Magic Number,The method contains a magic number: 3,53
vert.x,io.vertx.core.buffer.impl,VertxBufferTest,testDuplicate,Magic Number,The method contains a magic number: 5,53
vert.x,io.vertx.core.buffer.impl,VertxBufferTest,testDuplicate,Magic Number,The method contains a magic number: 3,53
vert.x,io.vertx.core.cli.annotations,CLIConfigurator,define,Complex Method,Cyclomatic complexity of the method is 9,33
vert.x,io.vertx.core.cli.annotations,CLIConfigurator,createOption,Complex Method,Cyclomatic complexity of the method is 8,84
vert.x,io.vertx.core.cli.annotations,CLIConfigurator,createOption,Long Statement,The length of the statement "opt.setLongName(option.longName()).setShortName(option.shortName()).setMultiValued(option.acceptMultipleValues()).setSingleValued(option.acceptValue()).setArgName(option.argName()).setFlag(option.flag()).setHelp(option.help()).setRequired(option.required());" is 258.,84
vert.x,io.vertx.core.cli.converters,CharacterConverter,fromString,Long Statement,The length of the statement "throw new IllegalArgumentException("The input string \"" + input + "\" cannot be converted to a "+ "character. The input's length must be 1");" is 142.,32
vert.x,io.vertx.core.cli.converters,Converters,newInstance,Long Statement,The length of the statement "throw new IllegalArgumentException("Cannot create a new instance of " + type.getName() + " - it requires an "+ "public constructor without argument"`e);" is 152.,117
vert.x,io.vertx.core.cli.converters,ConvertersTest,testCreatingSingleValueUsingValueOfOnEnumeration,Empty catch clause,The method has an empty catch block.,26
vert.x,io.vertx.core.cli.converters,ConvertersTest,testCreatingSingleValueUsingValueOfOnEnumeration,Empty catch clause,The method has an empty catch block.,26
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 2l,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 2l,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 3,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 3,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 4,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 4,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 5.5f,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 5.5f,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 5.5d,51
vert.x,io.vertx.core.cli.converters,ConvertersTest,testWithPrimitives,Magic Number,The method contains a magic number: 5.5d,51
vert.x,io.vertx.core.cli.impl,DefaultCLI,getOption,Long Statement,The length of the statement "List<Predicate<Option>> equalityChecks=Arrays.asList(option -> name.equals(option.getLongName())`option -> name.equals(option.getShortName())`option -> name.equals(option.getArgName())`option -> name.equalsIgnoreCase(option.getLongName())`option -> name.equalsIgnoreCase(option.getShortName())`option -> name.equalsIgnoreCase(option.getArgName()));" is 348.,161
vert.x,io.vertx.core.cli.impl,DefaultCLI,removeOption,Long Statement,The length of the statement "options=options.stream().filter(o -> !o.getLongName().equals(name) && !o.getShortName().equals(name)).collect(Collectors.toList());" is 131.,214
vert.x,io.vertx.core.cli.impl,DefaultParser,stripLeadingHyphens,Magic Number,The method contains a magic number: 2,39
vert.x,io.vertx.core.cli.impl,DefaultParser,stripLeadingAndTrailingQuotes,Complex Conditional,The conditional expression length > 1 && str.startsWith("\"") && str.endsWith("\"") && str.substring(1`length - 1).indexOf('"') == -1 is complex.,59
vert.x,io.vertx.core.cli.impl,DefaultParser,validate,Complex Method,Cyclomatic complexity of the method is 11,140
vert.x,io.vertx.core.cli.impl,DefaultParser,checkRequiredValues,Complex Conditional,The conditional expression current.acceptValue() && !commandLine.isOptionAssigned(current) && !current.isFlag() is complex.,194
vert.x,io.vertx.core.cli.impl,DefaultParser,visit,Complex Conditional,The conditional expression current != null && current.acceptValue() && isValue(token) is complex.,202
vert.x,io.vertx.core.cli.impl,DefaultParser,isShortOption,Magic Number,The method contains a magic number: 2,259
vert.x,io.vertx.core.cli.impl,DefaultParser,isShortOption,Magic Number,The method contains a magic number: 2,259
vert.x,io.vertx.core.cli.impl,DefaultParser,handleShortAndLongOption,Complex Method,Cyclomatic complexity of the method is 13,373
vert.x,io.vertx.core.cli.impl,DefaultParser,getLongPrefix,Magic Number,The method contains a magic number: 2,460
vert.x,io.vertx.core.cli.impl,ReflectionUtils,isMultiple,Long Statement,The length of the statement "return type.isArray() || List.class.isAssignableFrom(type) || Set.class.isAssignableFrom(type)|| Collection.class.isAssignableFrom(type);" is 137.,46
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testUsage,Long Statement,The length of the statement "assertThat(builder.toString()).containsIgnoringCase("Usage: hello -n <name>").containsIgnoringCase("A command saying hello.").containsIgnoringCase("A simple cli to wish you a good day. Pass your name with `--name`").containsIgnoringCase(" -n`--name <name> your name");" is 268.,48
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testTypeExtraction,Magic Number,The method contains a magic number: 6,141
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testSingleValueInjection,Long Statement,The length of the statement "CommandLine evaluatedCLI=parse(cli`"--boolean"`"--short=1"`"--byte=1"`"--int=1"`"--long=1"`"--double=1.1"`"--float=1.1"`"--char=c"`"--string=hello");" is 149.,186
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testSingleValueInjection,Long Statement,The length of the statement "evaluatedCLI=parse(cli`"--boolean2"`"--acceptValueBoolean=false"`"--short2=1"`"--byte2=1"`"--int2=1"`"--long2=1"`"--double2=1.1"`"--float2=1.1"`"--char2=c"`"--string=hello");" is 174.,186
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testSingleValueInjection,Magic Number,The method contains a magic number: 1.1d,186
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testSingleValueInjection,Magic Number,The method contains a magic number: 1.1f,186
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testSingleValueInjection,Magic Number,The method contains a magic number: 1.1d,186
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testSingleValueInjection,Magic Number,The method contains a magic number: 1.1f,186
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 2,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 2,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 2.2,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testMultiValuesInjection,Magic Number,The method contains a magic number: 3.3,249
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,testArgumentWithDefaultValue,Magic Number,The method contains a magic number: 25,384
vert.x,io.vertx.core.cli.impl,CLIConfiguratorTest,find,Long Statement,The length of the statement "final List<Option> match=options.stream().filter(c -> c.getLongName().equalsIgnoreCase(name)).collect(Collectors.toList());" is 123.,395
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testFlag,Long Statement,The length of the statement "final CLI cli=CLI.create("test").addOption(new Option().setShortName("f").setFlag(true)).addOption(new Option().setShortName("x"));" is 131.,30
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testMissingFlag,Long Statement,The length of the statement "final CLI cli=CLI.create("test").addOption(new Option().setShortName("f").setFlag(true)).addOption(new Option().setShortName("x"));" is 131.,40
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWhenUsingOnlyFlagLongOption,Long Statement,The length of the statement "final CLI cli=CLI.create("test").addOption(new Option().setLongName("flag").setDescription("turn on/off").setFlag(true));" is 121.,74
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWhenUsingShortAndLongFlagOption,Long Statement,The length of the statement "final CLI cli=CLI.create("test").addOption(new Option().setLongName("flag").setShortName("f").setDescription("turn on/off").setFlag(true));" is 139.,87
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWhenUsingRequiredOptionAndArgument,Long Statement,The length of the statement "final CLI cli=CLI.create("test").addOption(new Option().setLongName("file").setShortName("f").setDescription("a file").setRequired(true)).addArgument(new Argument().setArgName("foo").setDescription("foo").setRequired(true));" is 224.,139
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWhenUsingRequiredOptionAndArgument,Long Statement,The length of the statement "assertThat(builder.toString()).contains("test -f <value> foo").contains(" -f`--file <value> a file").contains("<foo> foo");" is 123.,139
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWithSeveralArguments,Long Statement,The length of the statement "final CLI cli=CLI.create("test").addOption(new Option().setLongName("file").setShortName("f").setDescription("a file").setRequired(true)).addArgument(new Argument().setIndex(0).setArgName("foo").setDescription("foo")).addArgument(new Argument().setIndex(1)).addArgument(new Argument().setIndex(2).setArgName("bar").setDescription("bar"));" is 338.,154
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWithSeveralArguments,Long Statement,The length of the statement "assertThat(builder.toString()).contains("test -f <value> foo value bar").contains(" -f`--file <value> a file").contains("<foo> foo").contains("<value>").contains("<bar> bar");" is 175.,154
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWithSeveralArguments,Magic Number,The method contains a magic number: 2,154
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWithHiddenArguments,Long Statement,The length of the statement "final CLI cli=CLI.create("test").addOption(new Option().setLongName("file").setShortName("f").setDescription("a file").setRequired(true)).addArgument(new Argument().setIndex(0).setArgName("foo").setDescription("foo")).addArgument(new Argument().setIndex(1)).addArgument(new Argument().setIndex(2).setArgName("bar").setDescription("bar").setHidden(true));" is 354.,173
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWithHiddenArguments,Long Statement,The length of the statement "assertThat(builder.toString()).contains("test -f <value> foo value").contains(" -f`--file <value> a file").contains("<foo> foo").contains("<value>").doesNotContain("bar");" is 171.,173
vert.x,io.vertx.core.cli.impl,DefaultCLITest,testUsageComputationWithHiddenArguments,Magic Number,The method contains a magic number: 2,173
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testWithList,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<String>().setShortName("f").setLongName("file").setParsedAsList(true).setType(String.class)};" is 139.,160
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testWithFlag,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<Boolean>().setType(Boolean.TYPE).setShortName("f").setLongName("flag").setFlag(true).setSingleValued(true)`new TypedOption<Boolean>().setType(Boolean.TYPE).setShortName("f2").setLongName("flag2").setFlag(true).setSingleValued(true)`new TypedOption<Boolean>().setType(Boolean.TYPE).setShortName("f3").setLongName("flag3").setFlag(true)};" is 382.,176
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testArguments,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<Boolean>().setShortName("f").setLongName("flag").setType(Boolean.class).setSingleValued(true)};" is 141.,213
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testUnknownOption,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<Boolean>().setShortName("f").setLongName("flag").setType(Boolean.class).setRequired(true).setSingleValued(true)};" is 159.,230
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testNotFulfilledRequiredOptions,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<Boolean>().setShortName("f").setLongName("flag").setType(Boolean.class).setRequired(true).setSingleValued(true)};" is 159.,242
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testRequiredOptions,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<Boolean>().setShortName("f").setLongName("flag").setType(Boolean.class).setRequired(true).setFlag(true)};" is 151.,251
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testNegativeNumbers,Magic Number,The method contains a magic number: 1.5d,275
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testNegativeNumbers,Magic Number,The method contains a magic number: 1.5d,275
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testVertxRun,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<String>().setLongName("conf").setType(String.class).setSingleValued(true)`new TypedOption<Integer>().setLongName("instances").setType(Integer.class).setSingleValued(true).setDefaultValue("1")`new TypedOption<Boolean>().setLongName("worker").setType(Boolean.class).setFlag(true)`new TypedOption<String>().setLongName("classpath").setShortName("cp").setListSeparator(File.pathSeparator).setType(String.class).setSingleValued(true)`new TypedOption<Boolean>().setLongName("cluster").setType(Boolean.class).setFlag(true)`new TypedOption<Integer>().setLongName("cluster-port").setType(Integer.class).setSingleValued(true)`new TypedOption<String>().setLongName("cluster-host").setType(String.class).setSingleValued(true)`new TypedOption<Boolean>().setLongName("ha").setType(Boolean.class).setFlag(true).setSingleValued(true)`new TypedOption<Integer>().setLongName("quorum").setType(Integer.class).setSingleValued(true)`new TypedOption<String>().setLongName("ha-group").setType(String.class).setDefaultValue("__DEFAULT__").setSingleValued(true)};" is 1084.,305
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testVertxRun,Long Statement,The length of the statement "cli.addArgument(new TypedArgument<String>().setType(String.class).setArgName("verticle").setIndex(0).setRequired(false));" is 121.,305
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testVertxRun,Long Statement,The length of the statement "evaluated=cli.parse(Arrays.asList("org.acme.FooVerticle"`"-cluster"`"-cluster-host"`"127.0.0.1"`"-cluster-port"`"1234"));" is 121.,305
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testVertxRun,Magic Number,The method contains a magic number: 4,305
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testVertxRun,Magic Number,The method contains a magic number: 1234,305
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testWithDashD,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<String>().setShortName("D").setLongName("systemProperty").setMultiValued(true).setType(String.class)`new TypedOption<Boolean>().setShortName("F").setLongName("flag").setFlag(true).setType(Boolean.class)};" is 250.,414
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testWithDashD,Magic Number,The method contains a magic number: 2,414
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testConcatenatedOptions,Long Statement,The length of the statement "Option[] options=new Option[]{new TypedOption<Boolean>().setShortName("d").setFlag(true).setType(Boolean.class)`new TypedOption<Boolean>().setShortName("e").setFlag(true).setType(Boolean.class)`new TypedOption<Boolean>().setShortName("f").setFlag(true).setType(Boolean.class)};" is 277.,433
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testThatOnlyTheLastArgumentCanBeMultivalued,Magic Number,The method contains a magic number: 2,472
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testThatOnlyOneArgumentCanBeMultivalued,Magic Number,The method contains a magic number: 2,482
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testWithMultipleRequiredArgument,Empty catch clause,The method has an empty catch block.,536
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testThatArgumentIndexCanBeGenerated,Magic Number,The method contains a magic number: 2,559
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testThatArgumentIndexCanBeGeneratedWithPartiallyNumberedArguments,Magic Number,The method contains a magic number: 2,572
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testHelpOption,Empty catch clause,The method has an empty catch block.,585
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testHelpOptionUsingAnnotation,Empty catch clause,The method has an empty catch block.,627
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testOptionsWithChoices,Empty catch clause,The method has an empty catch block.,668
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testOptionsWithChoicesAndDefault,Empty catch clause,The method has an empty catch block.,690
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testOptionsWithChoicesAndDefault,Long Statement,The length of the statement "cli.addOption(new Option().setLongName("color").addChoice("red").addChoice("blue").addChoice("green").setDefaultValue("green"));" is 128.,690
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testOptionsWithChoicesUsingEnum,Empty catch clause,The method has an empty catch block.,716
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testOptionsWithChoicesUsingEnum,Long Statement,The length of the statement "assertThat(builder.toString()).contains("[--retention {CLASS` RUNTIME` SOURCE}]").contains(" --retention {CLASS` RUNTIME` SOURCE}");" is 132.,716
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testOptionsWithChoicesUsingAnnotations,Empty catch clause,The method has an empty catch block.,738
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testOptionsWithChoicesUsingAnnotations,Long Statement,The length of the statement "assertThat(builder.toString()).contains("[--retention {CLASS` RUNTIME` SOURCE}]").contains(" --retention {CLASS` RUNTIME` SOURCE}");" is 132.,738
vert.x,io.vertx.core.cli.impl,DefaultParserTest,testGetOptionValueWithCaseSensitivityConflict,Long Statement,The length of the statement "final CLI cli=CLI.create("test").addOption(new Option().setShortName("a").setLongName("longname")).addOption(new Option().setShortName("A").setLongName("LONGNAME"));" is 165.,805
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,setUp,Long Statement,The length of the statement "cli.addOption(new TypedOption<Boolean>().setType(Boolean.class).setShortName("a").setLongName("enable-a").setFlag(true).setDescription("turn [a] on or off"));" is 158.,33
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,setUp,Long Statement,The length of the statement "cli.addOption(new TypedOption<String>().setType(String.class).setShortName("b").setLongName("bfile").setSingleValued(true).setDescription("set the value of [b]"));" is 163.,33
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,setUp,Long Statement,The length of the statement "cli.addOption(new TypedOption<Boolean>().setType(Boolean.class).setShortName("c").setLongName("copt").setSingleValued(false).setDescription("turn [c] on or off"));" is 163.,33
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testSimpleShort,Magic Number,The method contains a magic number: 2,54
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testSimpleLong,Magic Number,The method contains a magic number: 2,68
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testUnrecognizedOption,Magic Number,The method contains a magic number: 3,95
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testDoubleDash1,Magic Number,The method contains a magic number: 2,114
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testShortWithEqual,Long Statement,The length of the statement "cli.addOption(new TypedOption<String>().setType(String.class).setSingleValued(true).setLongName("foo").setShortName("f"));" is 122.,187
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testShortWithoutEqual,Long Statement,The length of the statement "cli.addOption(new TypedOption<String>().setType(String.class).setSingleValued(true).setLongName("foo").setShortName("f"));" is 122.,197
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testLongWithEqualDoubleDash,Long Statement,The length of the statement "cli.addOption(new TypedOption<String>().setType(String.class).setSingleValued(true).setLongName("foo").setShortName("f"));" is 122.,206
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testLongWithEqualSingleDash,Long Statement,The length of the statement "cli.addOption(new TypedOption<String>().setType(String.class).setSingleValued(true).setLongName("foo").setShortName("f"));" is 122.,215
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testLongWithoutEqualSingleDash,Long Statement,The length of the statement "cli.addOption(new TypedOption<String>().setType(String.class).setSingleValued(true).setLongName("foo").setShortName("f"));" is 122.,224
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testAmbiguousLongWithoutEqualSingleDash,Long Statement,The length of the statement "TypedOption<String> f=new TypedOption<String>().setType(String.class).setLongName("foo").setShortName("f").setSingleValued(true);" is 129.,233
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testAmbiguousLongWithoutEqualSingleDash,Long Statement,The length of the statement "TypedOption<Boolean> b=new TypedOption<Boolean>().setType(Boolean.class).setLongName("bar").setShortName("b").setFlag(true);" is 124.,233
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testLongWithoutEqualDoubleDash,Long Statement,The length of the statement "TypedOption<String> f=new TypedOption<String>().setType(String.class).setLongName("foo").setShortName("f").setSingleValued(true);" is 129.,250
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testLongWithUnexpectedArgument1,Long Statement,The length of the statement "TypedOption<Boolean> f=new TypedOption<Boolean>().setLongName("foo").setShortName("f").setType(Boolean.class).setSingleValued(false).setFlag(true);" is 147.,264
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testLongWithUnexpectedArgument2,Long Statement,The length of the statement "TypedOption<Boolean> f=new TypedOption<Boolean>().setLongName("foo").setShortName("f").setType(Boolean.class).setSingleValued(false);" is 133.,283
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testShortWithUnexpectedArgument,Long Statement,The length of the statement "TypedOption<Boolean> f=new TypedOption<Boolean>().setLongName("foo").setShortName("f").setType(Boolean.class).setSingleValued(false);" is 133.,300
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testPropertiesOption1,Magic Number,The method contains a magic number: 4,318
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testAmbiguousPartialLongOption1,Magic Number,The method contains a magic number: 2,392
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testAmbiguousPartialLongOption2,Magic Number,The method contains a magic number: 2,413
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testAmbiguousPartialLongOption3,Magic Number,The method contains a magic number: 2,433
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testAmbiguousPartialLongOption4,Magic Number,The method contains a magic number: 2,453
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testWithRequiredOption,Long Statement,The length of the statement "TypedOption<String> b=new TypedOption<String>().setShortName("b").setLongName("bfile").setSingleValued(true).setDescription("set the value of [b]").setType(String.class).setRequired(true);" is 188.,489
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testOptionAndRequiredOption,Long Statement,The length of the statement "TypedOption<String> b=new TypedOption<String>().setShortName("b").setLongName("bfile").setSingleValued(true).setDescription("set the value of [b]").setType(String.class).setRequired(true);" is 188.,505
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testMissingRequiredOption,Long Statement,The length of the statement "TypedOption<String> b=new TypedOption<String>().setShortName("b").setLongName("bfile").setSingleValued(true).setDescription("set the value of [b]").setType(String.class).setRequired(true);" is 188.,520
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testMissingRequiredOptions,Long Statement,The length of the statement "TypedOption<String> b=new TypedOption<String>().setShortName("b").setLongName("bfile").setSingleValued(true).setDescription("set the value of [b]").setType(String.class).setRequired(true);" is 188.,538
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testMissingRequiredOptions,Long Statement,The length of the statement "TypedOption<Boolean> c=new TypedOption<Boolean>().setShortName("c").setLongName("copt").setSingleValued(false).setDescription("turn [c] on or off").setType(Boolean.class).setRequired(true);" is 189.,538
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testMissingRequiredOptions,Magic Number,The method contains a magic number: 2,538
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testBursting,Magic Number,The method contains a magic number: 2,556
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testUnrecognizedOptionWithBursting,Magic Number,The method contains a magic number: 3,568
vert.x,io.vertx.core.cli.impl,IntensiveDefaultParserTest,testMultiValues,Magic Number,The method contains a magic number: 2,588
vert.x,io.vertx.core.cli.impl,TypedArgumentTest,testThatMissingArgumentsAreDetected,Empty catch clause,The method has an empty catch block.,45
vert.x,io.vertx.core.cli.impl,TypedArgumentTest,testThatMissingArgumentsAreDetected,Empty catch clause,The method has an empty catch block.,45
vert.x,io.vertx.core.cli.impl,TypedArgumentTest,testMixedOfRequiredAnOptionalArguments,Empty catch clause,The method has an empty catch block.,69
vert.x,io.vertx.core.cli.impl,TypedArgumentTest,testThatArgumentsAreOrdered,Magic Number,The method contains a magic number: 2,92
vert.x,io.vertx.core.cli.impl,TypedArgumentTest,testThatArgumentsAreOrdered,Magic Number,The method contains a magic number: 3,92
vert.x,io.vertx.core.cli.impl,TypedArgumentTest,testThatDefaultValuesAreHandled,Long Statement,The length of the statement "cli.addArgument(new TypedArgument<String>().setIndex(0).setArgName("1").setType(String.class).setDefaultValue("hello").setRequired(false));" is 139.,110
vert.x,io.vertx.core.cli.impl,TypedArgumentTest,testThatConvertersAreHandled,Long Statement,The length of the statement "final TypedArgument<Person4> arg=new TypedArgument<Person4>().setIndex(0).setArgName("person").setType(Person4.class).setConverter(ReflectionUtils.newInstance(Person4Converter.class)).setDefaultValue("Bill`Ballantine").setRequired(false);" is 238.,154
vert.x,io.vertx.core.datagram.impl,DatagramSocketImpl,DatagramSocketImpl,Long Statement,The length of the statement "DatagramChannel channel=transport.datagramChannel(options.isIpV6() ? InternetProtocolFamily.IPv6 : InternetProtocolFamily.IPv4);" is 128.,71
vert.x,io.vertx.core.datagram.impl,DatagramSocketImpl,listenMulticastGroup,Long Statement,The length of the statement "return context.failedFuture("A valid network interface could not be determined from the socket bind address or multicast interface");" is 133.,106
vert.x,io.vertx.core.datagram.impl,DatagramSocketImpl,listenMulticastGroup,Long Statement,The length of the statement "fut=channel.joinGroup(InetAddress.getByName(multicastAddress)`NetworkInterface.getByName(networkInterface)`sourceAddress);" is 122.,128
vert.x,io.vertx.core.datagram.impl,DatagramSocketImpl,unlistenMulticastGroup,Long Statement,The length of the statement "return context.failedFuture("A valid network interface could not be determined from the socket bind address or multicast interface");" is 133.,147
vert.x,io.vertx.core.datagram.impl,DatagramSocketImpl,unlistenMulticastGroup,Long Statement,The length of the statement "fut=channel.leaveGroup(InetAddress.getByName(multicastAddress)`NetworkInterface.getByName(networkInterface)`sourceAddress);" is 123.,169
vert.x,io.vertx.core.datagram.impl,DatagramSocketImpl,send,Long Statement,The length of the statement "ChannelFuture f2=channel.writeAndFlush(new DatagramPacket(((BufferInternal)packet).getByteBuf()`new InetSocketAddress(f1.getNow().getAddress()`port)));" is 151.,258
vert.x,io.vertx.core.datagram.impl,DatagramSocketImpl,send,Magic Number,The method contains a magic number: 65535,258
vert.x,io.vertx.core.datagram.impl,DatagramSocketImpl,sender,Magic Number,The method contains a magic number: 65535,286
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,address,Long Statement,The length of the statement "throw new DecoderException("Invalid content length` or reader index when decoding address [index: " + data.readerIndex() + "` expected length: "+ octets+ "` actual: "+ size+ "].");" is 180.,123
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,address,Long Statement,The length of the statement "throw new DecoderException("Could not convert address " + data.toString(data.readerIndex()`size`CharsetUtil.UTF_8) + " to InetAddress.");" is 137.,123
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,readName,Magic Number,The method contains a magic number: 0xc0,142
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,readName,Magic Number,The method contains a magic number: 0xc0,142
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,readName,Magic Number,The method contains a magic number: 0x3f,142
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,readName,Magic Number,The method contains a magic number: 8,142
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,getName,Magic Number,The method contains a magic number: 0xc0,174
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,getName,Magic Number,The method contains a magic number: 0xc0,174
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,getName,Magic Number,The method contains a magic number: 0x3f,174
vert.x,io.vertx.core.dns.impl.decoder,RecordDecoder,getName,Magic Number,The method contains a magic number: 8,174
vert.x,io.vertx.core.dns.impl.decoder,StartOfAuthorityRecord,StartOfAuthorityRecord,Long Parameter List,The method has 7 parameters. ,28
vert.x,io.vertx.core.dns.impl,DnsClientImpl,DnsClientImpl,Long Statement,The length of the statement "channel=transport.datagramChannel(this.dnsServer.getAddress() instanceof Inet4Address ? InternetProtocolFamily.IPv4 : InternetProtocolFamily.IPv6);" is 147.,56
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Long Statement,The length of the statement "reverseName.append(addr[3] & 0xff).append(".").append(addr[2] & 0xff).append(".").append(addr[1] & 0xff).append(".").append(addr[0] & 0xff);" is 140.,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 64,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 3,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 0xff,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 2,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 0xff,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 0xff,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 0xff,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 16,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 15,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 0xf,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 15,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 4,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 0xf,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,reverseLookup,Magic Number,The method contains a magic number: 15,156
vert.x,io.vertx.core.dns.impl,DnsClientImpl,dnsMessageId,Magic Number,The method contains a magic number: 16,210
vert.x,io.vertx.core.dns.impl,DnsClientImpl,dnsMessageId,Magic Number,The method contains a magic number: 65535,210
vert.x,io.vertx.core.dns.impl,SrvRecordImpl,SrvRecordImpl,Long Parameter List,The method has 8 parameters. ,30
vert.x,io.vertx.core.eventbus.impl,CodecManager,CodecManager,Long Statement,The length of the statement "this.systemCodecs=codecs(NULL_MESSAGE_CODEC`PING_MESSAGE_CODEC`STRING_MESSAGE_CODEC`BUFFER_MESSAGE_CODEC`JSON_OBJECT_MESSAGE_CODEC`JSON_ARRAY_MESSAGE_CODEC`BYTE_ARRAY_MESSAGE_CODEC`INT_MESSAGE_CODEC`LONG_MESSAGE_CODEC`FLOAT_MESSAGE_CODEC`DOUBLE_MESSAGE_CODEC`BOOLEAN_MESSAGE_CODEC`SHORT_MESSAGE_CODEC`CHAR_MESSAGE_CODEC`BYTE_MESSAGE_CODEC`REPLY_EXCEPTION_MESSAGE_CODEC`clusterSerializableCodec`serializableCodec);" is 413.,62
vert.x,io.vertx.core.eventbus.impl,CodecManager,lookupCodec,Complex Conditional,The conditional expression body instanceof ClusterSerializable && (local || acceptClusterSerializable(body.getClass().getName())) is complex.,69
vert.x,io.vertx.core.eventbus.impl,CodecManager,lookupCodec,Complex Conditional,The conditional expression body instanceof Serializable && (local || acceptSerializable(body.getClass().getName())) is complex.,69
vert.x,io.vertx.core.eventbus.impl,CodecManager,lookupCodec,Complex Method,Cyclomatic complexity of the method is 23,69
vert.x,io.vertx.core.eventbus.impl,EventBusImpl,createMessage,Long Parameter List,The method has 5 parameters. ,252
vert.x,io.vertx.core.eventbus.impl,EventBusImpl,addRegistration,Long Parameter List,The method has 5 parameters. ,260
vert.x,io.vertx.core.eventbus.impl,EventBusImpl,addLocalRegistration,Long Statement,The length of the statement "ConcurrentCyclicSequence<HandlerHolder> actualHandlers=handlerMap.merge(address`handlers`(old`prev) -> old.add(prev.first()));" is 126.,272
vert.x,io.vertx.core.eventbus.impl,EventBusImpl,deliverMessageLocally,Complex Method,Cyclomatic complexity of the method is 9,345
vert.x,io.vertx.core.eventbus.impl,HandlerRegistration,discard,Long Statement,The length of the statement "msg.reply(new ReplyException(ReplyFailure.TIMEOUT`"Discarded the request. address: " + replyAddress + "` repliedAddress: "+ msg.address()));" is 140.,94
vert.x,io.vertx.core.eventbus.impl,MessageConsumerImpl,MessageConsumerImpl,Long Parameter List,The method has 5 parameters. ,52
vert.x,io.vertx.core.eventbus.impl,MessageImpl,MessageImpl,Long Parameter List,The method has 6 parameters. ,40
vert.x,io.vertx.core.eventbus.impl,OutboundDeliveryContext,OutboundDeliveryContext,Long Parameter List,The method has 5 parameters. ,39
vert.x,io.vertx.core.eventbus.impl,OutboundDeliveryContext,written,Complex Method,Cyclomatic complexity of the method is 10,52
vert.x,io.vertx.core.eventbus.impl,OutboundDeliveryContext,execute,Long Statement,The length of the statement "message.trace=tracer.sendRequest(ctx`SpanKind.RPC`tracingPolicy`message`message.send ? "send" : "publish"`biConsumer`MessageTagExtractor.INSTANCE);" is 147.,92
vert.x,io.vertx.core.eventbus.impl,ReplyHandler,ReplyHandler,Long Parameter List,The method has 6 parameters. ,35
vert.x,io.vertx.core.eventbus.impl,ReplyHandler,trace,Complex Conditional,The conditional expression tracer != null && src && trace != null is complex.,46
vert.x,io.vertx.core.eventbus.impl,ReplyHandler,handle,Long Statement,The length of the statement "doFail(new ReplyException(ReplyFailure.TIMEOUT`"Timed out after waiting " + timeout + "(ms) for a reply. address: "+ address+ "` repliedAddress: "+ repliedAddress));" is 165.,73
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredEventBus,createMessage,Long Parameter List,The method has 5 parameters. ,151
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredEventBus,getServerHandler,Magic Number,The method contains a magic number: 4,298
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredEventBus,getServerHandler,Magic Number,The method contains a magic number: 4,298
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredEventBus,handle,Magic Number,The method contains a magic number: 4,304
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredHandlerHolder,ClusteredHandlerHolder,Long Parameter List,The method has 5 parameters. ,22
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,ClusteredMessage,Long Parameter List,The method has 7 parameters. ,52
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,encodeToWire,Magic Number,The method contains a magic number: 1024,110
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,encodeToWire,Magic Number,The method contains a magic number: 4,110
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,readFromWire,Magic Number,The method contains a magic number: 4,136
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,readFromWire,Magic Number,The method contains a magic number: 4,136
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,readFromWire,Magic Number,The method contains a magic number: 4,136
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,readFromWire,Magic Number,The method contains a magic number: 4,136
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,encodeHeaders,Magic Number,The method contains a magic number: 4,199
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,decodeHeaders,Magic Number,The method contains a magic number: 4,216
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,decodeHeaders,Magic Number,The method contains a magic number: 4,216
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,decodeHeaders,Magic Number,The method contains a magic number: 4,216
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,decodeHeaders,Magic Number,The method contains a magic number: 4,216
vert.x,io.vertx.core.eventbus.impl.clustered,ClusteredMessage,decodeHeaders,Magic Number,The method contains a magic number: 4,216
vert.x,io.vertx.core.eventbus.impl.clustered,ConnectionHolder,schedulePing,Long Statement,The length of the statement "ClusteredMessage pingMessage=new ClusteredMessage<>(remoteNodeId`PING_ADDRESS`null`null`new PingMessageCodec()`true`eventBus);" is 126.,119
vert.x,io.vertx.core.eventbus.impl.codecs,BooleanMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 3,43
vert.x,io.vertx.core.eventbus.impl.codecs,BufferMessageCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,28
vert.x,io.vertx.core.eventbus.impl.codecs,BufferMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 11,45
vert.x,io.vertx.core.eventbus.impl.codecs,ByteArrayMessageCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,28
vert.x,io.vertx.core.eventbus.impl.codecs,ByteArrayMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 12,47
vert.x,io.vertx.core.eventbus.impl.codecs,ByteMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 2,43
vert.x,io.vertx.core.eventbus.impl.codecs,CharMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 10,43
vert.x,io.vertx.core.eventbus.impl.codecs,ClusterSerializableCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,37
vert.x,io.vertx.core.eventbus.impl.codecs,ClusterSerializableCodec,systemCodecID,Magic Number,The method contains a magic number: 16,73
vert.x,io.vertx.core.eventbus.impl.codecs,DoubleMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 8,43
vert.x,io.vertx.core.eventbus.impl.codecs,FloatMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 7,43
vert.x,io.vertx.core.eventbus.impl.codecs,IntMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 5,43
vert.x,io.vertx.core.eventbus.impl.codecs,JsonArrayMessageCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,30
vert.x,io.vertx.core.eventbus.impl.codecs,JsonArrayMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 14,47
vert.x,io.vertx.core.eventbus.impl.codecs,JsonObjectMessageCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,30
vert.x,io.vertx.core.eventbus.impl.codecs,JsonObjectMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 13,47
vert.x,io.vertx.core.eventbus.impl.codecs,LongMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 6,43
vert.x,io.vertx.core.eventbus.impl.codecs,ReplyExceptionMessageCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,39
vert.x,io.vertx.core.eventbus.impl.codecs,ReplyExceptionMessageCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,39
vert.x,io.vertx.core.eventbus.impl.codecs,ReplyExceptionMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 15,70
vert.x,io.vertx.core.eventbus.impl.codecs,SerializableCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,38
vert.x,io.vertx.core.eventbus.impl.codecs,SerializableCodec,systemCodecID,Magic Number,The method contains a magic number: 17,56
vert.x,io.vertx.core.eventbus.impl.codecs,ShortMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 4,43
vert.x,io.vertx.core.eventbus.impl.codecs,StringMessageCodec,decodeFromWire,Magic Number,The method contains a magic number: 4,30
vert.x,io.vertx.core.eventbus.impl.codecs,StringMessageCodec,systemCodecID,Magic Number,The method contains a magic number: 9,49
vert.x,io.vertx.core.file.impl,AsyncFileImpl,AsyncFileImpl,Complex Method,Cyclomatic complexity of the method is 14,85
vert.x,io.vertx.core.file.impl,AsyncFileImpl,doWrite,Complex Method,Cyclomatic complexity of the method is 9,166
vert.x,io.vertx.core.file.impl,AsyncFileImpl,setWriteQueueMaxSize,Magic Number,The method contains a magic number: 2,226
vert.x,io.vertx.core.file.impl,AsyncFileImpl,setWriteQueueMaxSize,Magic Number,The method contains a magic number: 2,226
vert.x,io.vertx.core.file.impl,AsyncFileImpl,doRead,Long Parameter List,The method has 5 parameters. ,476
vert.x,io.vertx.core.file.impl,AsyncFileImpl,checkContext,Long Statement,The length of the statement "throw new IllegalStateException("AsyncFile must only be used in the context that created it` expected: " + context + " actual "+ vertx.getContext());" is 149.,520
vert.x,io.vertx.core.file.impl,FileCache,runHook,Empty catch clause,The method has an empty catch block.,83
vert.x,io.vertx.core.file.impl,FileCache,runHook,Magic Number,The method contains a magic number: 10,83
vert.x,io.vertx.core.file.impl,FileCache,runHook,Magic Number,The method contains a magic number: 1000,83
vert.x,io.vertx.core.file.impl,FileCache,close,Empty catch clause,The method has an empty catch block.,109
vert.x,io.vertx.core.file.impl,FileCache,cacheFile,Empty catch clause,The method has an empty catch block.,177
vert.x,io.vertx.core.file.impl,FileCache,cacheFile,Empty catch clause,The method has an empty catch block.,197
vert.x,io.vertx.core.file.impl,FileResolverImpl,resolveFile,Complex Method,Cyclomatic complexity of the method is 14,102
vert.x,io.vertx.core.file.impl,FileResolverImpl,isValidWindowsCachePath,Complex Method,Cyclomatic complexity of the method is 9,183
vert.x,io.vertx.core.file.impl,FileResolverImpl,isValidWindowsCachePath,Magic Number,The method contains a magic number: 32,183
vert.x,io.vertx.core.file.impl,FileResolverImpl,isValidWindowsCachePath,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@649c9a4b,183
vert.x,io.vertx.core.file.impl,FileResolverImpl,isValidCachePath,Complex Conditional,The conditional expression c == ' ' && (i + 1 == len || fileName.charAt(i + 1) == '/') is complex.,201
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackUrlResource,Complex Method,Cyclomatic complexity of the method is 9,233
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackUrlResource,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@b1945ba,233
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Complex Conditional,The conditional expression path.charAt(i) == '!' && (path.startsWith(".jar"`i - 4) || path.startsWith(".zip"`i - 4) || path.startsWith(".war"`i - 4)) is complex.,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Complex Method,Cyclomatic complexity of the method is 9,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Long Statement,The length of the statement "if (path.charAt(i) == '!' && (path.startsWith(".jar"`i - 4) || path.startsWith(".zip"`i - 4) || path.startsWith(".war"`i - 4))) {" is 129.,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Magic Number,The method contains a magic number: 4,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Magic Number,The method contains a magic number: 4,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Magic Number,The method contains a magic number: 4,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Magic Number,The method contains a magic number: 4,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Magic Number,The method contains a magic number: 4,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Magic Number,The method contains a magic number: 5,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Magic Number,The method contains a magic number: 2,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromJarURL,Magic Number,The method contains a magic number: 2,278
vert.x,io.vertx.core.file.impl,FileResolverImpl,closeQuietly,Empty catch clause,The method has an empty catch block.,342
vert.x,io.vertx.core.file.impl,FileResolverImpl,isBundleUrlDirectory,Long Statement,The length of the statement "return url.toExternalForm().endsWith("/") || getValidClassLoaderResource(getClassLoader()`url.getPath().substring(1) + "/") != null;" is 132.,352
vert.x,io.vertx.core.file.impl,FileResolverImpl,unpackFromBundleURL,Complex Conditional,The conditional expression (getClassLoader() != null && isBundleUrlDirectory(url)) || isDir is complex.,364
vert.x,io.vertx.core.file.impl,FileSystemImpl,mkdirInternal,Long Statement,The length of the statement "FileAttribute<?> attrs=perms == null ? null : PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(perms));" is 123.,743
vert.x,io.vertx.core.file.impl,FileSystemImpl,createTempDirectoryInternal,Long Statement,The length of the statement "FileAttribute<?> attrs=perms == null ? null : PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(perms));" is 123.,771
vert.x,io.vertx.core.file.impl,FileSystemImpl,createTempFileInternal,Long Statement,The length of the statement "FileAttribute<?> attrs=perms == null ? null : PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(perms));" is 123.,799
vert.x,io.vertx.core.file.impl,FileSystemImpl,createTempFileInternal,Long Statement,The length of the statement "final String message="Unable to create temporary file with prefix '" + prefix + "' and suffix '"+ suffix+ "' at "+ parentDir;" is 125.,799
vert.x,io.vertx.core.file.impl,FileSystemImpl,perform,Long Statement,The length of the statement "final String message="Unable to create temporary file with prefix '" + prefix + "' and suffix '"+ suffix+ "' at "+ parentDir;" is 125.,802
vert.x,io.vertx.core.file.impl,FileSystemImpl,createFileInternal,Long Statement,The length of the statement "FileAttribute<?> attrs=perms == null ? null : PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(perms));" is 123.,925
vert.x,io.vertx.core.http.impl,AssembledFullHttpResponse,AssembledFullHttpResponse,Long Parameter List,The method has 6 parameters. ,27
vert.x,io.vertx.core.http.impl,AssembledHttpResponse,AssembledHttpResponse,Long Parameter List,The method has 5 parameters. ,39
vert.x,io.vertx.core.http.impl,CleanableHttpClient,request,Long Parameter List,The method has 5 parameters. ,182
vert.x,io.vertx.core.http.impl,CookieJar,CookieJar,Magic Number,The method contains a magic number: 4,34
vert.x,io.vertx.core.http.impl,CookieJar,cookieUniqueIdComparator,Complex Method,Cyclomatic complexity of the method is 10,132
vert.x,io.vertx.core.http.impl,CookieJar,getAll,Magic Number,The method contains a magic number: 4,206
vert.x,io.vertx.core.http.impl,CookieJar,removeOrInvalidateAll,Magic Number,The method contains a magic number: 4,250
vert.x,io.vertx.core.http.impl,EndpointKey,equals,Long Statement,The length of the statement "return ssl == that.ssl && serverAddr.equals(that.serverAddr) && peerAddr.equals(that.peerAddr) && equals(proxyOptions`that.proxyOptions);" is 137.,38
vert.x,io.vertx.core.http.impl,EndpointKey,hashCode,Magic Number,The method contains a magic number: 31,46
vert.x,io.vertx.core.http.impl,EndpointKey,hashCode,Magic Number,The method contains a magic number: 31,46
vert.x,io.vertx.core.http.impl,EndpointKey,hashCode,Magic Number,The method contains a magic number: 31,46
vert.x,io.vertx.core.http.impl,EndpointKey,equals,Long Statement,The length of the statement "return Objects.equals(options1.getHost()`options2.getHost()) && options1.getPort() == options2.getPort() && Objects.equals(options1.getUsername()`options2.getUsername()) && Objects.equals(options1.getPassword()`options2.getPassword());" is 235.,57
vert.x,io.vertx.core.http.impl,Http1xClientConnection,Http1xClientConnection,Long Parameter List,The method has 7 parameters. ,149
vert.x,io.vertx.core.http.impl,Http1xClientConnection,createRequest,Complex Method,Cyclomatic complexity of the method is 11,210
vert.x,io.vertx.core.http.impl,Http1xClientConnection,createRequest,Long Parameter List,The method has 7 parameters. ,210
vert.x,io.vertx.core.http.impl,Http1xClientConnection,beginRequest,Long Parameter List,The method has 7 parameters. ,268
vert.x,io.vertx.core.http.impl,Http1xClientConnection,beginRequest,Long Statement,The length of the statement "stream.trace=tracer.sendRequest(stream.context`SpanKind.RPC`options.getTracingPolicy()`request`operation`headers`HttpUtils.CLIENT_HTTP_REQUEST_TAG_EXTRACTOR);" is 158.,268
vert.x,io.vertx.core.http.impl,Http1xClientConnection,checkLifecycle,Complex Conditional,The conditional expression close || (shutdown && requests.isEmpty() && responses.isEmpty()) is complex.,755
vert.x,io.vertx.core.http.impl,Http1xClientConnection,validateMessage,Long Statement,The length of the statement "if (version != io.netty.handler.codec.http.HttpVersion.HTTP_1_0 && version != io.netty.handler.codec.http.HttpVersion.HTTP_1_1) {" is 129.,774
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleHttpMessage,Long Statement,The length of the statement "handleResponseBegin(stream`new HttpResponseHead(version`response.status().code()`response.status().reasonPhrase()`new HeadersAdaptor(response.headers())));" is 155.,814
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleResponseBegin,Complex Conditional,The conditional expression (request.method == HttpMethod.CONNECT && response.statusCode == 200) || (request.method == HttpMethod.GET && request.headers != null && request.headers.contains(CONNECTION`UPGRADE`true) && response.statusCode == 101) is complex.,858
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleResponseBegin,Complex Method,Cyclomatic complexity of the method is 11,858
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleResponseBegin,Long Statement,The length of the statement "if (HttpHeaderValues.CLOSE.contentEqualsIgnoreCase(responseConnectionHeader) || HttpHeaderValues.CLOSE.contentEqualsIgnoreCase(requestConnectionHeader)) {" is 154.,858
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleResponseBegin,Long Statement,The length of the statement "else if (response.version == HttpVersion.HTTP_1_0 && !HttpHeaderValues.KEEP_ALIVE.contentEqualsIgnoreCase(responseConnectionHeader)) {" is 134.,858
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleResponseBegin,Long Statement,The length of the statement "if ((request.method == HttpMethod.CONNECT && response.statusCode == 200) || (request.method == HttpMethod.GET && request.headers != null && request.headers.contains(CONNECTION`UPGRADE`true) && response.statusCode == 101)) {" is 223.,858
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleResponseBegin,Magic Number,The method contains a magic number: 100,858
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleResponseBegin,Magic Number,The method contains a magic number: 200,858
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleResponseBegin,Magic Number,The method contains a magic number: 101,858
vert.x,io.vertx.core.http.impl,Http1xClientConnection,toWebSocket,Complex Method,Cyclomatic complexity of the method is 12,978
vert.x,io.vertx.core.http.impl,Http1xClientConnection,toWebSocket,Long Parameter List,The method has 9 parameters. ,978
vert.x,io.vertx.core.http.impl,Http1xClientConnection,toWebSocket,Long Statement,The length of the statement "ArrayList<WebSocketClientExtensionHandshaker> extensionHandshakers=initializeWebSocketExtensionHandshakers(client.options());" is 125.,978
vert.x,io.vertx.core.http.impl,Http1xClientConnection,toWebSocket,Long Statement,The length of the statement "p.addBefore("handler"`"webSocketsExtensionsHandler"`new WebSocketClientExtensionHandler(extensionHandshakers.toArray(new WebSocketClientExtensionHandshaker[0])));" is 162.,978
vert.x,io.vertx.core.http.impl,Http1xClientConnection,toWebSocket,Long Statement,The length of the statement "WebSocketClientHandshaker handshaker=newHandshaker(wsuri`version`subp`!extensionHandshakers.isEmpty()`allowOriginHeader`nettyHeaders`maxWebSocketFrameSize`!options.isSendUnmaskedFrames());" is 188.,978
vert.x,io.vertx.core.http.impl,Http1xClientConnection,toWebSocket,Long Statement,The length of the statement "WebSocketImpl ws=new WebSocketImpl(context`Http1xClientConnection.this`version != V00`options.getWebSocketClosingTimeout()`options.getMaxWebSocketFrameSize()`options.getMaxWebSocketMessageSize()`registerWriteHandlers);" is 218.,978
vert.x,io.vertx.core.http.impl,Http1xClientConnection,newHandshaker,Complex Method,Cyclomatic complexity of the method is 9,1080
vert.x,io.vertx.core.http.impl,Http1xClientConnection,newHandshaker,Long Parameter List,The method has 8 parameters. ,1080
vert.x,io.vertx.core.http.impl,Http1xClientConnection,newHandshaker,Long Statement,The length of the statement "WebSocketDecoderConfig config=WebSocketDecoderConfig.newBuilder().expectMaskedFrames(false).allowExtensions(allowExtensions).maxFramePayloadLength(maxFramePayloadLength).allowMaskMismatch(false).closeOnProtocolViolation(false).build();" is 235.,1080
vert.x,io.vertx.core.http.impl,Http1xClientConnection,newHandshaker,Long Statement,The length of the statement "return new WebSocketClientHandshaker13(webSocketURL`V13`subprotocol`allowExtensions`customHeaders`maxFramePayloadLength`performMasking`false`-1){" is 145.,1080
vert.x,io.vertx.core.http.impl,Http1xClientConnection,newHandshaker,Long Statement,The length of the statement "return new WebSocketClientHandshaker08(webSocketURL`V08`subprotocol`allowExtensions`customHeaders`maxFramePayloadLength`performMasking`false`-1){" is 145.,1080
vert.x,io.vertx.core.http.impl,Http1xClientConnection,newHandshaker,Long Statement,The length of the statement "return new WebSocketClientHandshaker07(webSocketURL`V07`subprotocol`allowExtensions`customHeaders`maxFramePayloadLength`performMasking`false`-1){" is 145.,1080
vert.x,io.vertx.core.http.impl,Http1xClientConnection,initializeWebSocketExtensionHandshakers,Long Statement,The length of the statement "extensionHandshakers.add(new PerMessageDeflateClientExtensionHandshaker(options.getWebSocketCompressionLevel()`ZlibCodecFactory.isSupportingWindowSizeAndMemLevel()`PerMessageDeflateServerExtensionHandshaker.MAX_WINDOW_SIZE`options.getWebSocketCompressionAllowClientNoContext()`options.getWebSocketCompressionRequestServerNoContext()));" is 335.,1165
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleClosed,Complex Method,Cyclomatic complexity of the method is 10,1201
vert.x,io.vertx.core.http.impl,Http1xClientConnection,handleIdle,Complex Conditional,The conditional expression webSocket == null && responses.isEmpty() && requests.isEmpty() is complex.,1247
vert.x,io.vertx.core.http.impl,Http1xClientConnection,expirationTimestampOf,Magic Number,The method contains a magic number: 1000,1345
vert.x,io.vertx.core.http.impl,Http1xConnectionBase,sizeof,Complex Method,Cyclomatic complexity of the method is 11,162
vert.x,io.vertx.core.http.impl,Http1xServerConnection,Http1xServerConnection,Long Identifier,The length of the field handle100ContinueAutomatically is 30.,112
vert.x,io.vertx.core.http.impl,Http1xServerConnection,Http1xServerConnection,Long Parameter List,The method has 7 parameters. ,112
vert.x,io.vertx.core.http.impl,Http1xServerConnection,handleNext,Long Statement,The length of the statement "Handler<HttpServerRequest> handler=next_.nettyRequest().decoderResult().isSuccess() ? requestHandler : invalidRequestHandler;" is 125.,242
vert.x,io.vertx.core.http.impl,Http1xServerConnection,createWebSocket,Long Statement,The length of the statement "webSocket=new ServerWebSocketImpl(promise.context()`this`handshaker.version() != WebSocketVersion.V00`options.getWebSocketClosingTimeout()`request`handshaker`options.getMaxWebSocketFrameSize()`options.getMaxWebSocketMessageSize()`options.isRegisterWebSocketWriteHandlers());" is 274.,294
vert.x,io.vertx.core.http.impl,Http1xServerConnection,createHandshaker,Long Statement,The length of the statement "WebSocketDecoderConfig config=WebSocketDecoderConfig.newBuilder().allowExtensions(options.getPerMessageWebSocketCompressionSupported() || options.getPerFrameWebSocketCompressionSupported()).maxFramePayloadLength(options.getMaxWebSocketFrameSize()).allowMaskMismatch(options.isAcceptUnmaskedFrames()).closeOnProtocolViolation(false).build();" is 340.,328
vert.x,io.vertx.core.http.impl,Http1xServerConnection,createHandshaker,Long Statement,The length of the statement "request.response().putHeader(HttpHeaderNames.SEC_WEBSOCKET_VERSION`WebSocketVersion.V13.toHttpHeaderValue()).setStatusCode(UPGRADE_REQUIRED.code()).end();" is 154.,328
vert.x,io.vertx.core.http.impl,Http1xServerConnection,write103EarlyHints,Long Statement,The length of the statement "chctx.writeAndFlush(new DefaultFullHttpResponse(HTTP_1_1`HttpResponseStatus.EARLY_HINTS`Unpooled.buffer(0)`headers`EmptyHttpHeaders.INSTANCE)).addListener(promise);" is 164.,465
vert.x,io.vertx.core.http.impl,Http1xServerRequest,pendingQueue,Magic Number,The method contains a magic number: 8,127
vert.x,io.vertx.core.http.impl,Http1xServerRequest,webSocket,Long Statement,The length of the statement "request=new DefaultFullHttpRequest(request.protocolVersion()`request.method()`request.uri()`body.getByteBuf()`request.headers()`EmptyHttpHeaders.INSTANCE);" is 155.,447
vert.x,io.vertx.core.http.impl,Http1xServerRequest,webSocket,Magic Number,The method contains a magic number: 8192,447
vert.x,io.vertx.core.http.impl,Http1xServerRequest,webSocket,Magic Number,The method contains a magic number: 413,447
vert.x,io.vertx.core.http.impl,Http1xServerRequest,setExpectMultipart,Long Statement,The length of the statement "throw new IllegalStateException("Request method must be one of POST` PUT` PATCH or DELETE to decode a multipart request");" is 122.,483
vert.x,io.vertx.core.http.impl,Http1xServerRequest,reportRequestBegin,Long Statement,The length of the statement "trace=tracer.receiveRequest(context`SpanKind.RPC`conn.tracingPolicy()`this`request.method().name()`request.headers()`HttpUtils.SERVER_REQUEST_TAG_EXTRACTOR);" is 157.,602
vert.x,io.vertx.core.http.impl,Http1xServerRequest,endDecode,Empty catch clause,The method has an empty catch block.,613
vert.x,io.vertx.core.http.impl,Http1xServerRequest,handleException,Complex Method,Cyclomatic complexity of the method is 8,639
vert.x,io.vertx.core.http.impl,Http1xServerRequest,routed,Complex Conditional,The conditional expression METRICS_ENABLED && !response.ended() && conn.metrics != null is complex.,724
vert.x,io.vertx.core.http.impl,Http1xServerRequestHandler,handle,Magic Number,The method contains a magic number: 101,38
vert.x,io.vertx.core.http.impl,Http1xServerRequestHandler,handle,Magic Number,The method contains a magic number: 400,38
vert.x,io.vertx.core.http.impl,Http1xServerRequestHandler,handle,Magic Number,The method contains a magic number: 501,38
vert.x,io.vertx.core.http.impl,Http1xServerResponse,Http1xServerResponse,Long Parameter List,The method has 6 parameters. ,103
vert.x,io.vertx.core.http.impl,Http1xServerResponse,Http1xServerResponse,Long Statement,The length of the statement "this.keepAlive=(version == HttpVersion.HTTP_1_1 && !request.headers().contains(io.vertx.core.http.HttpHeaders.CONNECTION`HttpHeaders.CLOSE`true)) || (version == HttpVersion.HTTP_1_0 && request.headers().contains(io.vertx.core.http.HttpHeaders.CONNECTION`HttpHeaders.KEEP_ALIVE`true));" is 284.,103
vert.x,io.vertx.core.http.impl,Http1xServerResponse,setStatusCode,Long Statement,The length of the statement "status=statusMessage != null ? new HttpResponseStatus(statusCode`statusMessage) : HttpResponseStatus.valueOf(statusCode);" is 121.,148
vert.x,io.vertx.core.http.impl,Http1xServerResponse,completeHandshake,Magic Number,The method contains a magic number: 101,418
vert.x,io.vertx.core.http.impl,Http1xServerResponse,sendFile,Complex Method,Cyclomatic complexity of the method is 8,449
vert.x,io.vertx.core.http.impl,Http1xServerResponse,prepareHeaders,Complex Conditional,The conditional expression contentLength >= 0 && !headers.contains(HttpHeaders.CONTENT_LENGTH) && !headers.contains(HttpHeaders.TRANSFER_ENCODING) is complex.,634
vert.x,io.vertx.core.http.impl,Http1xServerResponse,prepareHeaders,Complex Method,Cyclomatic complexity of the method is 8,634
vert.x,io.vertx.core.http.impl,Http1xServerResponse,prepareHeaders,Long Statement,The length of the statement "if (contentLength >= 0 && !headers.contains(HttpHeaders.CONTENT_LENGTH) && !headers.contains(HttpHeaders.TRANSFER_ENCODING)) {" is 126.,634
vert.x,io.vertx.core.http.impl,Http1xServerResponse,write,Complex Conditional,The conditional expression !headWritten && !headers.contains(HttpHeaders.TRANSFER_ENCODING) && !headers.contains(HttpHeaders.CONTENT_LENGTH) is complex.,679
vert.x,io.vertx.core.http.impl,Http1xServerResponse,write,Long Statement,The length of the statement "else if (!headWritten && !headers.contains(HttpHeaders.TRANSFER_ENCODING) && !headers.contains(HttpHeaders.CONTENT_LENGTH)) {" is 125.,679
vert.x,io.vertx.core.http.impl,Http1xServerResponse,write,Long Statement,The length of the statement "throw new IllegalStateException("You must set the Content-Length header to be the total size of the message " + "body BEFORE sending any data if you are not using HTTP chunked encoding.");" is 188.,679
vert.x,io.vertx.core.http.impl,Http1xUpgradeToH2CHandler,channelRead,Complex Method,Cyclomatic complexity of the method is 23,48
vert.x,io.vertx.core.http.impl,Http1xUpgradeToH2CHandler,channelRead,Long Method,The method has 108 lines of code.,48
vert.x,io.vertx.core.http.impl,Http1xUpgradeToH2CHandler,channelRead,Magic Number,The method contains a magic number: 7,48
vert.x,io.vertx.core.http.impl,Http1xUpgradeToH2CHandler,channelRead,Magic Number,The method contains a magic number: 14,48
vert.x,io.vertx.core.http.impl,Http1xUpgradeToH2CHandler,channelRead,Magic Number,The method contains a magic number: 2,48
vert.x,io.vertx.core.http.impl,Http1xUpgradeToH2CHandler,channelRead,Magic Number,The method contains a magic number: 3,48
vert.x,io.vertx.core.http.impl,Http2ClientConnection,concurrency,Long Statement,The length of the statement "long http2MaxConcurrency=client.options().getHttp2MultiplexingLimit() <= 0 ? Long.MAX_VALUE : client.options().getHttp2MultiplexingLimit();" is 139.,74
vert.x,io.vertx.core.http.impl,Http2ClientConnection,recycle,Magic Number,The method contains a magic number: 1000L,154
vert.x,io.vertx.core.http.impl,Http2ClientConnection,onPushPromiseRead,Long Parameter List,The method has 5 parameters. ,187
vert.x,io.vertx.core.http.impl,Http2ClientConnection,createHttp2ConnectionHandler,Long Parameter List,The method has 5 parameters. ,667
vert.x,io.vertx.core.http.impl,Http2ClientConnection,createHttp2ConnectionHandler,Long Statement,The length of the statement "VertxHttp2ConnectionHandler<Http2ClientConnection> handler=new VertxHttp2ConnectionHandlerBuilder<Http2ClientConnection>().server(false).useDecompression(client.options().isTryUseCompression()).gracefulShutdownTimeoutMillis(0).initialSettings(client.options().getInitialSettings()).connectionFactory(connHandler -> {" is 316.,667
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,onPriorityRead,Long Parameter List,The method has 5 parameters. ,189
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,onPriorityRead,Long Statement,The length of the statement "StreamPriority streamPriority=new StreamPriority().setDependency(streamDependency).setWeight(weight).setExclusive(exclusive);" is 125.,189
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,onHeadersRead,Long Parameter List,The method has 8 parameters. ,201
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,onHeadersRead,Long Statement,The length of the statement "StreamPriority streamPriority=new StreamPriority().setDependency(streamDependency).setWeight(weight).setExclusive(exclusive);" is 125.,201
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,onHeadersRead,Long Parameter List,The method has 5 parameters. ,210
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,onPushPromiseRead,Long Parameter List,The method has 5 parameters. ,277
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,onUnknownFrame,Long Parameter List,The method has 5 parameters. ,290
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,onDataRead,Long Parameter List,The method has 5 parameters. ,308
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,goAway,Long Statement,The length of the statement "handler.writeGoAway(errorCode`lastStreamId`debugData != null ? ((BufferInternal)debugData).getByteBuf() : Unpooled.EMPTY_BUFFER);" is 129.,340
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,ping,Magic Number,The method contains a magic number: 8,444
vert.x,io.vertx.core.http.impl,Http2ConnectionBase,checkShutdown,Complex Conditional,The conditional expression (!conn.goAwayReceived() && !conn.goAwaySent()) || conn.numActiveStreams() > 0 is complex.,480
vert.x,io.vertx.core.http.impl,Http2ServerConnection,Http2ServerConnection,Long Parameter List,The method has 7 parameters. ,57
vert.x,io.vertx.core.http.impl,Http2ServerConnection,isMalformedRequest,Complex Conditional,The conditional expression headers.scheme() != null || headers.path() != null || headers.authority() == null is complex.,89
vert.x,io.vertx.core.http.impl,Http2ServerConnection,isMalformedRequest,Complex Conditional,The conditional expression headers.method() == null || headers.scheme() == null || headers.path() == null || headers.path().length() == 0 is complex.,89
vert.x,io.vertx.core.http.impl,Http2ServerConnection,isMalformedRequest,Complex Method,Cyclomatic complexity of the method is 9,89
vert.x,io.vertx.core.http.impl,Http2ServerConnection,determineContentEncoding,Long Statement,The length of the statement "String acceptEncoding=headers.get(HttpHeaderNames.ACCEPT_ENCODING) != null ? headers.get(HttpHeaderNames.ACCEPT_ENCODING).toString() : null;" is 140.,142
vert.x,io.vertx.core.http.impl,Http2ServerConnection,createStream,Long Statement,The length of the statement "Http2ServerStream vertxStream=new Http2ServerStream(this`streamContextSupplier.get()`headers`serverOrigin`options.getTracingPolicy()`streamEnded);" is 146.,150
vert.x,io.vertx.core.http.impl,Http2ServerConnection,stream,Complex Conditional,The conditional expression stream == null && id == 1 && handler.upgraded is complex.,161
vert.x,io.vertx.core.http.impl,Http2ServerConnection,sendPush,Long Parameter List,The method has 7 parameters. ,192
vert.x,io.vertx.core.http.impl,Http2ServerConnection,doSendPush,Long Parameter List,The method has 7 parameters. ,201
vert.x,io.vertx.core.http.impl,Http2ServerConnection,doSendPush,Long Statement,The length of the statement "String s=(ssl && authority.port() == 443) || (!ssl && authority.port() == 80) || authority.port() <= 0 ? authority.host() : authority.host() + ':' + authority.port();" is 166.,201
vert.x,io.vertx.core.http.impl,Http2ServerConnection,doSendPush,Magic Number,The method contains a magic number: 443,201
vert.x,io.vertx.core.http.impl,Http2ServerConnection,doSendPush,Magic Number,The method contains a magic number: 80,201
vert.x,io.vertx.core.http.impl,Http2ServerRequest,handleEnd,Empty catch clause,The method has an empty catch block.,167
vert.x,io.vertx.core.http.impl,Http2ServerRequest,setExpectMultipart,Long Statement,The length of the statement "throw new IllegalStateException("Request method must be one of POST` PUT` PATCH or DELETE to decode a multipart request");" is 122.,414
vert.x,io.vertx.core.http.impl,Http2ServerRequest,setExpectMultipart,Long Statement,The length of the statement "HttpRequest req=new DefaultHttpRequest(io.netty.handler.codec.http.HttpVersion.HTTP_1_1`stream.method.toNetty()`stream.uri);" is 124.,414
vert.x,io.vertx.core.http.impl,Http2ServerResponse,write,Complex Conditional,The conditional expression end && !headWritten && needsContentLengthHeader() is complex.,393
vert.x,io.vertx.core.http.impl,Http2ServerResponse,write,Complex Conditional,The conditional expression hasBody || (!sent && end) is complex.,393
vert.x,io.vertx.core.http.impl,Http2ServerResponse,write,Complex Method,Cyclomatic complexity of the method is 9,393
vert.x,io.vertx.core.http.impl,Http2ServerResponse,needsContentLengthHeader,Long Statement,The length of the statement "return stream.method != HttpMethod.HEAD && status != HttpResponseStatus.NOT_MODIFIED && !headers.contains(HttpHeaderNames.CONTENT_LENGTH);" is 138.,436
vert.x,io.vertx.core.http.impl,Http2ServerResponse,handlerWritabilityChanged,Complex Conditional,The conditional expression !ended && writable && drainHandler != null is complex.,503
vert.x,io.vertx.core.http.impl,Http2ServerStream,Http2ServerStream,Long Parameter List,The method has 6 parameters. ,50
vert.x,io.vertx.core.http.impl,Http2ServerStream,Http2ServerStream,Long Parameter List,The method has 6 parameters. ,66
vert.x,io.vertx.core.http.impl,Http2ServerStream,Http2ServerStream,Magic Number,The method contains a magic number: 3,66
vert.x,io.vertx.core.http.impl,Http2ServerStream,onHeaders,Complex Conditional,The conditional expression conn.options.isHandle100ContinueAutomatically() && ((value != null && HttpHeaderValues.CONTINUE.equals(value)) || headers.contains(HttpHeaderNames.EXPECT`HttpHeaderValues.CONTINUE)) is complex.,96
vert.x,io.vertx.core.http.impl,Http2ServerStream,onHeaders,Long Statement,The length of the statement "if (conn.options.isHandle100ContinueAutomatically() && ((value != null && HttpHeaderValues.CONTINUE.equals(value)) || headers.contains(HttpHeaderNames.EXPECT`HttpHeaderValues.CONTINUE))) {" is 188.,96
vert.x,io.vertx.core.http.impl,Http2ServerStream,onHeaders,Long Statement,The length of the statement "trace=tracer.receiveRequest(context`SpanKind.RPC`tracingPolicy`request`method().name()`new Http2HeadersAdaptor(headers)`HttpUtils.SERVER_REQUEST_TAG_EXTRACTOR);" is 160.,96
vert.x,io.vertx.core.http.impl,Http2ServerStream,onClose,Complex Conditional,The conditional expression metrics != null && (!requestEnded || !responseEnded) is complex.,202
vert.x,io.vertx.core.http.impl,Http2ServerStream,onClose,Complex Conditional,The conditional expression !halfClosedRemote && (!requestEnded || !responseEnded) is complex.,202
vert.x,io.vertx.core.http.impl,Http2ServerStream,onClose,Long Statement,The length of the statement "tracer.sendResponse(context`failure == null ? request.response() : null`trace`failure`HttpUtils.SERVER_RESPONSE_TAG_EXTRACTOR);" is 127.,202
vert.x,io.vertx.core.http.impl,HttpChannelConnector,HttpChannelConnector,Long Parameter List,The method has 9 parameters. ,62
vert.x,io.vertx.core.http.impl,HttpChannelConnector,connect,Long Statement,The length of the statement "netClient.connectInternal(proxyOptions`server`peerAddress`this.options.isForceSni() ? peerAddress.host() : null`ssl`useAlpn`false`promise`context`0);" is 149.,87
vert.x,io.vertx.core.http.impl,HttpChannelConnector,wrap,Complex Method,Cyclomatic complexity of the method is 8,91
vert.x,io.vertx.core.http.impl,HttpChannelConnector,applyHttp2ConnectionOptions,Complex Conditional,The conditional expression idleTimeout > 0 || readIdleTimeout > 0 || writeIdleTimeout > 0 is complex.,152
vert.x,io.vertx.core.http.impl,HttpChannelConnector,applyHttp2ConnectionOptions,Long Statement,The length of the statement "pipeline.addLast("idle"`new IdleStateHandler(readIdleTimeout`writeIdleTimeout`idleTimeout`options.getIdleTimeoutUnit()));" is 121.,152
vert.x,io.vertx.core.http.impl,HttpChannelConnector,applyHttp1xConnectionOptions,Complex Conditional,The conditional expression idleTimeout > 0 || readIdleTimeout > 0 || writeIdleTimeout > 0 is complex.,161
vert.x,io.vertx.core.http.impl,HttpChannelConnector,applyHttp1xConnectionOptions,Long Statement,The length of the statement "pipeline.addLast("idle"`new IdleStateHandler(readIdleTimeout`writeIdleTimeout`idleTimeout`options.getIdleTimeoutUnit()));" is 121.,161
vert.x,io.vertx.core.http.impl,HttpChannelConnector,applyHttp1xConnectionOptions,Long Statement,The length of the statement "pipeline.addLast("codec"`new HttpClientCodec(options.getMaxInitialLineLength()`options.getMaxHeaderSize()`options.getMaxChunkSize()`false`!HttpHeaders.DISABLE_HTTP_HEADERS_VALIDATION`options.getDecoderInitialBufferSize()));" is 223.,161
vert.x,io.vertx.core.http.impl,HttpChannelConnector,http1xConnected,Long Parameter List,The method has 7 parameters. ,183
vert.x,io.vertx.core.http.impl,HttpChannelConnector,http1xConnected,Long Statement,The length of the statement "Http1xClientConnection conn=new Http1xClientConnection(upgrade ? HttpVersion.HTTP_1_1 : version`client`chctx`ssl`server`context`this.metrics);" is 142.,183
vert.x,io.vertx.core.http.impl,HttpChannelConnector,http1xConnected,Long Statement,The length of the statement "HttpRequestHead request=new HttpRequestHead(OPTIONS`"/"`HttpHeaders.headers()`server.toString()`"http://" + server + "/"`null);" is 127.,183
vert.x,io.vertx.core.http.impl,HttpChannelConnector,connectFailed,Empty catch clause,The method has an empty catch block.,250
vert.x,io.vertx.core.http.impl,HttpClientImpl,HttpClientImpl,Complex Conditional,The conditional expression options.getPoolCleanerPeriod() > 0 && (options.getKeepAliveTimeout() > 0L || options.getHttp2KeepAliveTimeout() > 0L) is complex.,137
vert.x,io.vertx.core.http.impl,HttpClientImpl,HttpClientImpl,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3ef74009,137
vert.x,io.vertx.core.http.impl,HttpClientImpl,httpEndpointProvider,Complex Conditional,The conditional expression proxyOptions != null && !key.ssl && proxyOptions.getType() == ProxyType.HTTP is complex.,239
vert.x,io.vertx.core.http.impl,HttpClientImpl,httpEndpointProvider,Long Statement,The length of the statement "ClientMetrics metrics=HttpClientImpl.this.metrics != null ? HttpClientImpl.this.metrics.createEndpointMetrics(key.serverAddr`maxPoolSize) : null;" is 145.,239
vert.x,io.vertx.core.http.impl,HttpClientImpl,httpEndpointProvider,Long Statement,The length of the statement "HttpChannelConnector connector=new HttpChannelConnector(HttpClientImpl.this`netClient`proxyOptions`metrics`options.getProtocolVersion()`key.ssl`options.isUseAlpn()`key.peerAddr`key.serverAddr);" is 193.,239
vert.x,io.vertx.core.http.impl,HttpClientImpl,httpEndpointProvider,Long Statement,The length of the statement "return new SharedClientHttpStreamEndpoint(HttpClientImpl.this`metrics`options.getMaxWaitQueueSize()`options.getMaxPoolSize()`options.getHttp2MaxPoolSize()`connector`dispose);" is 174.,239
vert.x,io.vertx.core.http.impl,HttpClientImpl,webSocketConnectionManager,Long Statement,The length of the statement "ClientMetrics metrics=HttpClientImpl.this.metrics != null ? HttpClientImpl.this.metrics.createEndpointMetrics(key.serverAddr`maxPoolSize) : null;" is 145.,261
vert.x,io.vertx.core.http.impl,HttpClientImpl,webSocketConnectionManager,Long Statement,The length of the statement "HttpChannelConnector connector=new HttpChannelConnector(HttpClientImpl.this`netClient`key.proxyOptions`metrics`HttpVersion.HTTP_1_1`key.ssl`false`key.peerAddr`key.serverAddr);" is 175.,261
vert.x,io.vertx.core.http.impl,HttpClientImpl,connect,Long Statement,The length of the statement "HttpChannelConnector connector=new HttpChannelConnector(this`netClient`null`null`options.getProtocolVersion()`options.isSsl()`options.isUseAlpn()`peer`server);" is 159.,327
vert.x,io.vertx.core.http.impl,HttpClientImpl,webSocket,Long Statement,The length of the statement "EndpointKey key=new EndpointKey(connectOptions.isSsl() != null ? connectOptions.isSsl() : options.isSsl()`proxyOptions`addr`addr);" is 130.,336
vert.x,io.vertx.core.http.impl,HttpClientImpl,webSocket,Long Statement,The length of the statement "return conn.toWebSocket(ctx`connectOptions.getURI()`connectOptions.getHeaders()`connectOptions.getAllowOriginHeader()`connectOptions.getVersion()`connectOptions.getSubProtocols()`connectOptions.getTimeout()`connectOptions.isRegisterWriteHandlers()`HttpClientImpl.this.options.getMaxWebSocketFrameSize());" is 304.,336
vert.x,io.vertx.core.http.impl,HttpClientImpl,webSocketAbs,Long Statement,The length of the statement "WebSocketConnectOptions options=new WebSocketConnectOptions().setHost(uri.getHost()).setPort(port).setSsl(ssl).setURI(relativeUri.toString()).setHeaders(headers).setVersion(version).setSubProtocols(subProtocols);" is 212.,387
vert.x,io.vertx.core.http.impl,HttpClientImpl,webSocketAbs,Magic Number,The method contains a magic number: 3,387
vert.x,io.vertx.core.http.impl,HttpClientImpl,webSocketAbs,Magic Number,The method contains a magic number: 443,387
vert.x,io.vertx.core.http.impl,HttpClientImpl,webSocketAbs,Magic Number,The method contains a magic number: 80,387
vert.x,io.vertx.core.http.impl,HttpClientImpl,request,Long Parameter List,The method has 5 parameters. ,452
vert.x,io.vertx.core.http.impl,HttpClientImpl,request,Long Statement,The length of the statement "return doRequest(address`port`host`new RequestOptions().setMethod(method).setPort(port).setHost(host).setURI(requestURI));" is 122.,452
vert.x,io.vertx.core.http.impl,HttpClientImpl,addressResolver,Long Statement,The length of the statement "this.endpointResolver=new EndpointResolver<>(httpEndpointProvider`addressResolver`(key`addr) -> new EndpointKey(key.ssl`key.proxyOptions`addr`addr));" is 149.,546
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Complex Conditional,The conditional expression !useAlpn && useSSL && this.options.getProtocolVersion() == HttpVersion.HTTP_2 is complex.,555
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Long Statement,The length of the statement "return doRequest(method`peerAddress`server`host`port`useSSL`requestURI`headers`request.getTraceOperation()`timeout`followRedirects`request.getProxyOptions());" is 158.,555
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Complex Conditional,The conditional expression proxyOptions != null && !useSSL && proxyOptions.getType() == ProxyType.HTTP is complex.,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Complex Conditional,The conditional expression proxyOptions != null && !useSSL && proxyOptions.getType() == ProxyType.HTTP is complex.,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Complex Method,Cyclomatic complexity of the method is 13,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Long Parameter List,The method has 12 parameters. ,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Long Statement,The length of the statement "ContextInternal connCtx=ctx.isEventLoopContext() ? ctx : vertx.createEventLoopContext(ctx.nettyEventLoop()`ctx.workerPool()`ctx.classLoader());" is 143.,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Long Statement,The length of the statement "future=endpointResolver.withEndpoint(server`key`endpoint -> createDecoratedHttpClientStream(timeout`ctx`connCtx`(EndpointResolver.ResolvedEndpoint<?`?`?`Lease<HttpClientConnection>>)endpoint));" is 193.,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Long Statement,The length of the statement "HttpClientRequest req=new HttpClientRequestImpl(this`stream`ctx.promise()`useSSL`method`peerAddress`host`port`u`traceOperation);" is 128.,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Long Statement,The length of the statement "req.headers().add("Proxy-Authorization"`"Basic " + Base64.getEncoder().encodeToString((proxyOptions.getUsername() + ":" + proxyOptions.getPassword()).getBytes()));" is 163.,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,doRequest,Magic Number,The method contains a magic number: 80,582
vert.x,io.vertx.core.http.impl,HttpClientImpl,createDecoratedHttpClientStream,Long Statement,The length of the statement "HttpClientStream wrapped=new StatisticsGatheringHttpClientStream<>(stream`resolver`resolvedEndpoint.state()`conn.remoteAddress());" is 130.,669
vert.x,io.vertx.core.http.impl,HttpClientInternal,request,Long Parameter List,The method has 5 parameters. ,46
vert.x,io.vertx.core.http.impl,HttpClientPush,HttpClientPush,Magic Number,The method contains a magic number: 80,32
vert.x,io.vertx.core.http.impl,HttpClientRequestBase,HttpClientRequestBase,Long Parameter List,The method has 9 parameters. ,51
vert.x,io.vertx.core.http.impl,HttpClientRequestBase,HttpClientRequestBase,Long Statement,The length of the statement "HttpClientResponseImpl response=new HttpClientResponseImpl(this`stream.version()`stream`resp.statusCode`resp.statusMessage`resp.headers);" is 137.,51
vert.x,io.vertx.core.http.impl,HttpClientRequestBase,authority,Complex Conditional,The conditional expression (port == 80 && !ssl) || (port == 443 && ssl) || port < 0 is complex.,75
vert.x,io.vertx.core.http.impl,HttpClientRequestBase,authority,Magic Number,The method contains a magic number: 80,75
vert.x,io.vertx.core.http.impl,HttpClientRequestBase,authority,Magic Number,The method contains a magic number: 443,75
vert.x,io.vertx.core.http.impl,HttpClientRequestBase,handlePush,Long Statement,The length of the statement "HttpClientRequestPushPromise pushReq=new HttpClientRequestPushPromise(push.stream`client`ssl`push.method`push.uri`push.host`push.port`push.headers);" is 148.,162
vert.x,io.vertx.core.http.impl,HttpClientRequestBase,timeoutEx,Long Statement,The length of the statement "return new NoStackTraceTimeoutException("The timeout period of " + timeoutMs + "ms has been exceeded while executing "+ method+ " "+ uri+ " for server "+ server);" is 162.,206
vert.x,io.vertx.core.http.impl,HttpClientRequestImpl,HttpClientRequestImpl,Long Parameter List,The method has 10 parameters. ,63
vert.x,io.vertx.core.http.impl,HttpClientRequestImpl,handleResponse,Complex Conditional,The conditional expression followRedirects > 0 && statusCode >= 300 && statusCode < 400 is complex.,323
vert.x,io.vertx.core.http.impl,HttpClientRequestImpl,handleResponse,Magic Number,The method contains a magic number: 300,323
vert.x,io.vertx.core.http.impl,HttpClientRequestImpl,handleResponse,Magic Number,The method contains a magic number: 400,323
vert.x,io.vertx.core.http.impl,HttpClientRequestImpl,write,Long Statement,The length of the statement "throw new IllegalStateException("You must set the Content-Length header to be the total size of the message " + "body BEFORE sending any data if you are not using HTTP chunked encoding.");" is 188.,397
vert.x,io.vertx.core.http.impl,HttpClientRequestPushPromise,HttpClientRequestPushPromise,Long Parameter List,The method has 8 parameters. ,32
vert.x,io.vertx.core.http.impl,HttpClientRequestPushPromise,HttpClientRequestPushPromise,Long Statement,The length of the statement "super(client`stream`stream.connection().getContext().promise()`ssl`method`SocketAddress.inetSocketAddress(port`host)`host`port`uri);" is 132.,32
vert.x,io.vertx.core.http.impl,HttpClientResponseImpl,HttpClientResponseImpl,Long Parameter List,The method has 6 parameters. ,59
vert.x,io.vertx.core.http.impl,HttpClientStream,writeHead,Long Parameter List,The method has 6 parameters. ,50
vert.x,io.vertx.core.http.impl,HttpNetSocket,sendFile,Long Statement,The length of the statement "return HttpUtils.resolveFile(conn.getContext()`filename`offset`length).compose(file -> file.pipe().endOnComplete(false).to(this).eventually(v -> file.close()));" is 160.,196
vert.x,io.vertx.core.http.impl,HttpRequestHead,HttpRequestHead,Long Parameter List,The method has 6 parameters. ,32
vert.x,io.vertx.core.http.impl,HttpServerConnectionHandler,HttpServerConnectionHandler,Long Parameter List,The method has 6 parameters. ,42
vert.x,io.vertx.core.http.impl,HttpServerConnectionHandler,HttpServerConnectionHandler,Long Statement,The length of the statement "this.invalidRequestHandler=invalidRequestHandler == null ? HttpServerRequest.DEFAULT_INVALID_REQUEST_HANDLER : invalidRequestHandler;" is 133.,42
vert.x,io.vertx.core.http.impl,HttpServerConnectionHandler,initializeWebSocketExtensions,Long Statement,The length of the statement "extensionHandshakers.add(new PerMessageDeflateServerExtensionHandshaker(server.options.getWebSocketCompressionLevel()`ZlibCodecFactory.isSupportingWindowSizeAndMemLevel()`PerMessageDeflateServerExtensionHandshaker.MAX_WINDOW_SIZE`server.options.getWebSocketAllowServerNoContext()`server.options.getWebSocketPreferredClientNoContext()));" is 336.,87
vert.x,io.vertx.core.http.impl,HttpServerConnectionHandler,initializeWebSocketExtensions,Long Statement,The length of the statement "WebSocketServerExtensionHandler extensionHandler=new WebSocketServerExtensionHandler(extensionHandshakers.toArray(new WebSocketServerExtensionHandshaker[0]));" is 158.,87
vert.x,io.vertx.core.http.impl,HttpServerFileUploadImpl,HttpServerFileUploadImpl,Long Parameter List,The method has 8 parameters. ,57
vert.x,io.vertx.core.http.impl,HttpServerImpl,childHandler,Long Statement,The length of the statement "HttpServerConnectionHandler hello=new HttpServerConnectionHandler(this`requestHandler`invalidRequestHandler`wsHandler`connectionHandler`exceptionHandler == null ? DEFAULT_EXCEPTION_HANDLER : exceptionHandler);" is 209.,137
vert.x,io.vertx.core.http.impl,HttpServerImpl,childHandler,Long Statement,The length of the statement "return new HttpServerWorker(connContext`streamContextSupplier`this`vertx`options`serverOrigin`disableH2c`hello`hello.exceptionHandler`trafficShapingHandler);" is 157.,137
vert.x,io.vertx.core.http.impl,HttpServerImpl,createSSLHelper,Long Statement,The length of the statement "return new SSLHelper(options`options.getAlpnVersions().stream().map(HttpVersion::alpnName).collect(Collectors.toList()));" is 121.,163
vert.x,io.vertx.core.http.impl,HttpServerWorker,HttpServerWorker,Long Parameter List,The method has 10 parameters. ,66
vert.x,io.vertx.core.http.impl,HttpServerWorker,HttpServerWorker,Long Statement,The length of the statement "compressionOptions=new CompressionOptions[]{StandardCompressionOptions.gzip(compressionLevel`15`8)`StandardCompressionOptions.deflate(compressionLevel`15`8)};" is 158.,66
vert.x,io.vertx.core.http.impl,HttpServerWorker,HttpServerWorker,Magic Number,The method contains a magic number: 15,66
vert.x,io.vertx.core.http.impl,HttpServerWorker,HttpServerWorker,Magic Number,The method contains a magic number: 8,66
vert.x,io.vertx.core.http.impl,HttpServerWorker,HttpServerWorker,Magic Number,The method contains a magic number: 15,66
vert.x,io.vertx.core.http.impl,HttpServerWorker,HttpServerWorker,Magic Number,The method contains a magic number: 8,66
vert.x,io.vertx.core.http.impl,HttpServerWorker,accept,Long Statement,The length of the statement "ch.pipeline().addLast("idle"`idle=new IdleStateHandler(0`0`options.getProxyProtocolTimeout()`options.getProxyProtocolTimeoutUnit()));" is 133.,103
vert.x,io.vertx.core.http.impl,HttpServerWorker,configurePipeline,Complex Conditional,The conditional expression idleTimeout > 0 || readIdleTimeout > 0 || writeIdleTimeout > 0 is complex.,131
vert.x,io.vertx.core.http.impl,HttpServerWorker,configurePipeline,Complex Method,Cyclomatic complexity of the method is 11,131
vert.x,io.vertx.core.http.impl,HttpServerWorker,configurePipeline,Long Statement,The length of the statement "pipeline.addLast("idle"`idle=new IdleStateHandler(readIdleTimeout`writeIdleTimeout`idleTimeout`options.getIdleTimeoutUnit()));" is 126.,131
vert.x,io.vertx.core.http.impl,HttpServerWorker,sendServiceUnavailable,Long Statement,The length of the statement "ch.writeAndFlush(Unpooled.copiedBuffer("HTTP/1.1 503 Service Unavailable\r\n" + "Content-Length:0\r\n" + "\r\n"`StandardCharsets.ISO_8859_1)).addListener(ChannelFutureListener.CLOSE);" is 183.,212
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp2,Complex Conditional,The conditional expression idleTimeout > 0 || readIdleTimeout > 0 || writeIdleTimeout > 0 is complex.,226
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp2,Long Statement,The length of the statement "pipeline.addBefore("handler"`"idle"`new IdleStateHandler(readIdleTimeout`writeIdleTimeout`idleTimeout`options.getIdleTimeoutUnit()));" is 133.,226
vert.x,io.vertx.core.http.impl,HttpServerWorker,buildHttp2ConnectionHandler,Long Statement,The length of the statement "VertxHttp2ConnectionHandler<Http2ServerConnection> handler=new VertxHttp2ConnectionHandlerBuilder<Http2ServerConnection>().server(true).useCompression(compressionOptions).useDecompression(options.isDecompressionSupported()).initialSettings(options.getInitialSettings()).connectionFactory(connHandler -> {" is 304.,240
vert.x,io.vertx.core.http.impl,HttpServerWorker,buildHttp2ConnectionHandler,Long Statement,The length of the statement "Http2ServerConnection conn=new Http2ServerConnection(ctx`streamContextSupplier`serverOrigin`connHandler`encodingDetector`options`metrics);" is 138.,240
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp1OrH2C,Complex Conditional,The conditional expression options.isSsl() || options.isCompressionSupported() || !vertx.transport().supportFileRegion()|| trafficShapingHandler != null is complex.,265
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp1OrH2C,Complex Conditional,The conditional expression idleTimeout > 0 || readIdleTimeout > 0 || writeIdleTimeout > 0 is complex.,265
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp1OrH2C,Complex Method,Cyclomatic complexity of the method is 8,265
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp1OrH2C,Long Statement,The length of the statement "if (options.isSsl() || options.isCompressionSupported() || !vertx.transport().supportFileRegion()|| trafficShapingHandler != null) {" is 132.,265
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp1OrH2C,Long Statement,The length of the statement "pipeline.addLast("idle"`new IdleStateHandler(readIdleTimeout`writeIdleTimeout`idleTimeout`options.getIdleTimeoutUnit()));" is 121.,265
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp1OrH2C,Long Statement,The length of the statement "pipeline.addLast("h2c"`new Http1xUpgradeToH2CHandler(this`sslChannelProvider`options.isCompressionSupported()`options.isDecompressionSupported()));" is 147.,265
vert.x,io.vertx.core.http.impl,HttpServerWorker,configureHttp1,Long Statement,The length of the statement "Http1xServerConnection conn=new Http1xServerConnection(streamContextSupplier`sslChannelProvider`options`chctx`context`serverOrigin`metrics);" is 140.,297
vert.x,io.vertx.core.http.impl,HttpUtils,len,Magic Number,The method contains a magic number: 2,70
vert.x,io.vertx.core.http.impl,HttpUtils,len,Magic Number,The method contains a magic number: 2,118
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Complex Conditional,The conditional expression (unescaped >= 0x41 && unescaped <= 0x5A) || (unescaped >= 0x61 && unescaped <= 0x7A) || (unescaped >= 0x30 && unescaped <= 0x39)|| (unescaped == 0x2D)|| (unescaped == 0x2E)|| (unescaped == 0x5F)|| (unescaped == 0x7E) is complex.,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Long Statement,The length of the statement "if ((unescaped >= 0x41 && unescaped <= 0x5A) || (unescaped >= 0x61 && unescaped <= 0x7A) || (unescaped >= 0x30 && unescaped <= 0x39)|| (unescaped == 0x2D)|| (unescaped == 0x2E)|| (unescaped == 0x5F)|| (unescaped == 0x7E)) {" is 223.,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 3,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 3,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 16,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x41,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x5A,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x61,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x7A,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x30,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x39,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x2D,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x2E,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x5F,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 0x7E,288
vert.x,io.vertx.core.http.impl,HttpUtils,decodeUnreserved,Magic Number,The method contains a magic number: 3,288
vert.x,io.vertx.core.http.impl,HttpUtils,removeDots,Complex Method,Cyclomatic complexity of the method is 15,326
vert.x,io.vertx.core.http.impl,HttpUtils,removeDots,Magic Number,The method contains a magic number: 2,326
vert.x,io.vertx.core.http.impl,HttpUtils,removeDots,Magic Number,The method contains a magic number: 3,326
vert.x,io.vertx.core.http.impl,HttpUtils,removeDots,Magic Number,The method contains a magic number: 2,326
vert.x,io.vertx.core.http.impl,HttpUtils,removeDots,Magic Number,The method contains a magic number: 3,326
vert.x,io.vertx.core.http.impl,HttpUtils,resolveURIReference,Complex Method,Cyclomatic complexity of the method is 8,404
vert.x,io.vertx.core.http.impl,HttpUtils,parsePath,Magic Number,The method contains a magic number: 3,459
vert.x,io.vertx.core.http.impl,HttpUtils,absoluteURI,Complex Conditional,The conditional expression scheme != null && (scheme.equals("http") || scheme.equals("https")) is complex.,504
vert.x,io.vertx.core.http.impl,HttpUtils,absoluteURI,Complex Conditional,The conditional expression authority.port() > 0 && (ssl && authority.port() != 443) || (!ssl && authority.port() != 80) is complex.,504
vert.x,io.vertx.core.http.impl,HttpUtils,absoluteURI,Magic Number,The method contains a magic number: 443,504
vert.x,io.vertx.core.http.impl,HttpUtils,absoluteURI,Magic Number,The method contains a magic number: 80,504
vert.x,io.vertx.core.http.impl,HttpUtils,fromVertxInitialSettings,Complex Method,Cyclomatic complexity of the method is 9,540
vert.x,io.vertx.core.http.impl,HttpUtils,toVertxSettings,Complex Method,Cyclomatic complexity of the method is 8,585
vert.x,io.vertx.core.http.impl,HttpUtils,toVertxSettings,Magic Number,The method contains a magic number: 6,585
vert.x,io.vertx.core.http.impl,HttpUtils,decodeSettings,Empty catch clause,The method has an empty catch block.,619
vert.x,io.vertx.core.http.impl,HttpUtils,decodeSettings,Magic Number,The method contains a magic number: 2,619
vert.x,io.vertx.core.http.impl,HttpUtils,decodeSettings,Magic Number,The method contains a magic number: 4,619
vert.x,io.vertx.core.http.impl,HttpUtils,generateWSCloseFrameByteBuf,Long Statement,The length of the statement "if (reason != null) return Unpooled.copiedBuffer(Unpooled.copyShort(statusCode)`Unpooled.copiedBuffer(reason`StandardCharsets.UTF_8));" is 134.,647
vert.x,io.vertx.core.http.impl,HttpUtils,toNettyHttpVersion,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6cfd6693,715
vert.x,io.vertx.core.http.impl,HttpUtils,parseKeepAliveHeaderTimeout,Complex Method,Cyclomatic complexity of the method is 10,734
vert.x,io.vertx.core.http.impl,HttpUtils,parseKeepAliveHeaderTimeout,Magic Number,The method contains a magic number: 10,734
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Complex Method,Cyclomatic complexity of the method is 13,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Long Identifier,The length of the field HIGHEST_INVALID_VALUE_CHAR_MASK is 31.,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Magic Number,The method contains a magic number: 0x7F,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Magic Number,The method contains a magic number: 0x09,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Magic Number,The method contains a magic number: 0x0a,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Magic Number,The method contains a magic number: 0x0d,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Magic Number,The method contains a magic number: 2,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Magic Number,The method contains a magic number: 2,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Magic Number,The method contains a magic number: 2,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6c33e785,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2dc65b2c,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateValueChar,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2935a195,808
vert.x,io.vertx.core.http.impl,HttpUtils,validateHeaderName,Magic Number,The method contains a magic number: 0x7F,895
vert.x,io.vertx.core.http.impl,HttpUtils,validateHeaderName0,Magic Number,The method contains a magic number: 0x7f,911
vert.x,io.vertx.core.http.impl,HttpUtils,validateHeaderName0,Magic Number,The method contains a magic number: 0x7F,911
vert.x,io.vertx.core.http.impl,HttpUtils,isValidMultipartContentType,Long Statement,The length of the statement "return MULTIPART_FORM_DATA.regionMatches(true`0`contentType`0`MULTIPART_FORM_DATA.length()) || APPLICATION_X_WWW_FORM_URLENCODED.regionMatches(true`0`contentType`0`APPLICATION_X_WWW_FORM_URLENCODED.length());" is 208.,924
vert.x,io.vertx.core.http.impl,HttpUtils,isValidMultipartMethod,Long Statement,The length of the statement "return method.equals(HttpMethod.POST) || method.equals(HttpMethod.PUT) || method.equals(HttpMethod.PATCH)|| method.equals(HttpMethod.DELETE);" is 141.,929
vert.x,io.vertx.core.http.impl,HttpUtils,isConnectOrUpgrade,Long Statement,The length of the statement "return method == io.vertx.core.http.HttpMethod.CONNECT || (method == io.vertx.core.http.HttpMethod.GET && headers.contains(io.vertx.core.http.HttpHeaders.CONNECTION`io.vertx.core.http.HttpHeaders.UPGRADE`true));" is 211.,959
vert.x,io.vertx.core.http.impl,NettyFileUpload,NettyFileUpload,Long Parameter List,The method has 8 parameters. ,49
vert.x,io.vertx.core.http.impl,NettyFileUploadDataFactory,createFileUpload,Long Parameter List,The method has 7 parameters. ,41
vert.x,io.vertx.core.http.impl,NettyFileUploadDataFactory,createFileUpload,Long Statement,The length of the statement "NettyFileUpload nettyUpload=new NettyFileUpload(context`request`name`filename`contentType`contentTransferEncoding`charset`size);" is 128.,41
vert.x,io.vertx.core.http.impl,NettyFileUploadDataFactory,createFileUpload,Long Statement,The length of the statement "HttpServerFileUploadImpl upload=new HttpServerFileUploadImpl(context`nettyUpload`name`filename`contentType`contentTransferEncoding`charset`size);" is 145.,41
vert.x,io.vertx.core.http.impl,ServerWebSocketImpl,ServerWebSocketImpl,Long Identifier,The length of the parameter registerWebSocketWriteHandlers is 30.,54
vert.x,io.vertx.core.http.impl,ServerWebSocketImpl,ServerWebSocketImpl,Long Parameter List,The method has 9 parameters. ,54
vert.x,io.vertx.core.http.impl,ServerWebSocketImpl,ServerWebSocketImpl,Long Statement,The length of the statement "super(context`conn`request.headers()`supportsContinuation`maxWebSocketFrameSize`maxWebSocketMessageSize`registerWebSocketWriteHandlers);" is 136.,54
vert.x,io.vertx.core.http.impl,ServerWebSocketImpl,ServerWebSocketImpl,Magic Number,The method contains a magic number: 1000L,54
vert.x,io.vertx.core.http.impl,ServerWebSocketImpl,close,Magic Number,The method contains a magic number: 101,122
vert.x,io.vertx.core.http.impl,ServerWebSocketImpl,close,Magic Number,The method contains a magic number: 101,122
vert.x,io.vertx.core.http.impl,ServerWebSocketImpl,setHandshake,Magic Number,The method contains a magic number: 500,207
vert.x,io.vertx.core.http.impl,SharedClientHttpStreamEndpoint,SharedClientHttpStreamEndpoint,Long Parameter List,The method has 7 parameters. ,65
vert.x,io.vertx.core.http.impl,SharedClientHttpStreamEndpoint,SharedClientHttpStreamEndpoint,Long Statement,The length of the statement "ConnectionPool<HttpClientConnection> pool=ConnectionPool.pool(this`new int[]{http1MaxSize`http2MaxSize}`queueMaxSize).connectionSelector(LIFO_SELECTOR).contextProvider(client.contextProvider());" is 194.,65
vert.x,io.vertx.core.http.impl,StatisticsGatheringHttpClientStream,writeHead,Long Parameter List,The method has 6 parameters. ,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,VertxHttp2ConnectionHandler,Long Parameter List,The method has 5 parameters. ,50
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,onGoAwaySent,Long Statement,The length of the statement "connection.onGoAwaySent(new GoAway().setErrorCode(errorCode).setLastStreamId(lastStreamId).setDebugData(BufferInternal.buffer(debugData)));" is 139.,212
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,onGoAwayReceived,Long Statement,The length of the statement "connection.onGoAwayReceived(new GoAway().setErrorCode(errorCode).setLastStreamId(lastStreamId).setDebugData(BufferInternal.buffer(debugData)));" is 143.,217
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,writeHeaders,Long Parameter List,The method has 8 parameters. ,224
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,writeFrame,Long Parameter List,The method has 5 parameters. ,284
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,onDataRead,Long Parameter List,The method has 5 parameters. ,361
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,onHeadersRead,Long Parameter List,The method has 5 parameters. ,366
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,onHeadersRead,Long Parameter List,The method has 8 parameters. ,371
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,onPriorityRead,Long Parameter List,The method has 5 parameters. ,376
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,onPushPromiseRead,Long Parameter List,The method has 5 parameters. ,445
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandler,onUnknownFrame,Long Parameter List,The method has 5 parameters. ,460
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "@Override public int onDataRead( ChannelHandlerContext ctx` int streamId` ByteBuf data` int padding` boolean endOfStream) throws Http2Exception {" is 145.,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int padding` boolean endOfStream) throws Http2Exception {" is 157.,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "@Override public void onHeadersRead( ChannelHandlerContext ctx` int streamId` Http2Headers headers` int streamDependency` short weight` boolean exclusive` int padding` boolean endOfStream) throws Http2Exception {" is 212.,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "@Override public void onPriorityRead( ChannelHandlerContext ctx` int streamId` int streamDependency` short weight` boolean exclusive) throws Http2Exception {" is 157.,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "@Override public void onPushPromiseRead( ChannelHandlerContext ctx` int streamId` int promisedStreamId` Http2Headers headers` int padding) throws Http2Exception {" is 162.,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "@Override public void onGoAwayRead( ChannelHandlerContext ctx` int lastStreamId` long errorCode` ByteBuf debugData) throws Http2Exception {" is 139.,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "@Override public void onWindowUpdateRead( ChannelHandlerContext ctx` int streamId` int windowSizeIncrement) throws Http2Exception {" is 131.,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "@Override public void onUnknownFrame( ChannelHandlerContext ctx` byte frameType` int streamId` Http2Flags flags` ByteBuf payload) throws Http2Exception {" is 153.,78
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,onDataRead,Long Parameter List,The method has 5 parameters. ,85
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,onHeadersRead,Long Parameter List,The method has 5 parameters. ,89
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,onHeadersRead,Long Parameter List,The method has 8 parameters. ,93
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,onPriorityRead,Long Parameter List,The method has 5 parameters. ,97
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,onPushPromiseRead,Long Parameter List,The method has 5 parameters. ,121
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,onUnknownFrame,Long Parameter List,The method has 5 parameters. ,133
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "VertxHttp2ConnectionHandler<C> handler=new VertxHttp2ConnectionHandler<>(connectionFactory`useDecompression`decoder`encoder`initialSettings);" is 141.,141
vert.x,io.vertx.core.http.impl,VertxHttp2ConnectionHandlerBuilder,build,Long Statement,The length of the statement "VertxHttp2ConnectionHandler<C> handler=new VertxHttp2ConnectionHandler<>(connectionFactory`useDecompression`decoder`encoder`initialSettings);" is 141.,141
vert.x,io.vertx.core.http.impl,VertxHttp2Stream,VertxHttp2Stream,Magic Number,The method contains a magic number: 5,52
vert.x,io.vertx.core.http.impl,VertxHttp2Stream,doWriteHeaders,Long Statement,The length of the statement "conn.handler.writeHeaders(stream`headers`end`priority.getDependency()`priority.getWeight()`priority.isExclusive()`checkFlush`(FutureListener<Void>)promise);" is 156.,200
vert.x,io.vertx.core.http.impl,VertxHttpRequestDecoder,VertxHttpRequestDecoder,Long Statement,The length of the statement "super(options.getMaxInitialLineLength()`options.getMaxHeaderSize()`options.getMaxChunkSize()`!HttpHeaders.DISABLE_HTTP_HEADERS_VALIDATION`options.getDecoderInitialBufferSize());" is 177.,23
vert.x,io.vertx.core.http.impl,VertxHttpRequestDecoder,createMessage,Long Statement,The length of the statement "return new DefaultHttpRequest(HttpVersion.valueOf(initialLine[2])`HttpMethod.valueOf(initialLine[0])`initialLine[1]`HeadersMultiMap.httpHeaders());" is 147.,32
vert.x,io.vertx.core.http.impl,VertxHttpRequestDecoder,createMessage,Magic Number,The method contains a magic number: 2,32
vert.x,io.vertx.core.http.impl,VertxHttpResponseEncoder,acceptOutboundMessage,Complex Conditional,The conditional expression msgClazz == AssembledFullHttpResponse.class || msgClazz == DefaultFullHttpResponse.class || msgClazz == AssembledHttpResponse.class || msgClazz == DefaultHttpContent.class || msgClazz == AssembledLastHttpContent.class || msgClazz == DefaultFileRegion.class is complex.,44
vert.x,io.vertx.core.http.impl,VertxHttpResponseEncoder,acceptOutboundMessage,Long Statement,The length of the statement "if (msgClazz == AssembledFullHttpResponse.class || msgClazz == DefaultFullHttpResponse.class || msgClazz == AssembledHttpResponse.class || msgClazz == DefaultHttpContent.class || msgClazz == AssembledLastHttpContent.class || msgClazz == DefaultFileRegion.class) {" is 263.,44
vert.x,io.vertx.core.http.impl,WebSocketHandshakeInboundHandler,handshakeComplete,Long Statement,The length of the statement "throw new UpgradeRejectedException(msg`sc`new HeadersAdaptor(response.headers())`content != null ? BufferInternal.buffer(content) : null);" is 138.,107
vert.x,io.vertx.core.http.impl,WebSocketHandshakeInboundHandler,handshakeComplete,Magic Number,The method contains a magic number: 101,107
vert.x,io.vertx.core.http.impl,WebSocketImpl,WebSocketImpl,Long Identifier,The length of the parameter registerWebSocketWriteHandlers is 30.,35
vert.x,io.vertx.core.http.impl,WebSocketImpl,WebSocketImpl,Long Parameter List,The method has 7 parameters. ,35
vert.x,io.vertx.core.http.impl,WebSocketImpl,WebSocketImpl,Long Statement,The length of the statement "super(context`conn`null`supportsContinuation`maxWebSocketFrameSize`maxWebSocketMessageSize`registerWebSocketWriteHandlers);" is 123.,35
vert.x,io.vertx.core.http.impl,WebSocketImpl,WebSocketImpl,Magic Number,The method contains a magic number: 1000L,35
vert.x,io.vertx.core.http.impl,WebSocketImplBase,WebSocketImplBase,Long Identifier,The length of the parameter registerWebSocketWriteHandlers is 30.,92
vert.x,io.vertx.core.http.impl,WebSocketImplBase,WebSocketImplBase,Long Parameter List,The method has 7 parameters. ,92
vert.x,io.vertx.core.http.impl,WebSocketImplBase,close,Magic Number,The method contains a magic number: 1000,153
vert.x,io.vertx.core.http.impl,WebSocketImplBase,writePing,Magic Number,The method contains a magic number: 125,279
vert.x,io.vertx.core.http.impl,WebSocketImplBase,writePong,Magic Number,The method contains a magic number: 125,287
vert.x,io.vertx.core.http.impl,WebSocketImplBase,encodeFrame,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2e7b93de,344
vert.x,io.vertx.core.http.impl,WebSocketImplBase,receiveFrame,Complex Method,Cyclomatic complexity of the method is 10,444
vert.x,io.vertx.core.http.impl,HttpServerHandlerBenchmark,setup,Long Statement,The length of the statement "ContextInternal context=vertx.createEventLoopContext(vertxChannel.eventLoop()`null`Thread.currentThread().getContextClassLoader());" is 131.,205
vert.x,io.vertx.core.http.impl,HttpServerHandlerBenchmark,setup,Long Statement,The length of the statement "headers.add(HEADER_CONTENT_TYPE`RESPONSE_TYPE_PLAIN).add(HEADER_SERVER`SERVER).add(HEADER_DATE`DATE_STRING).add(HEADER_CONTENT_LENGTH`HELLO_WORLD_LENGTH);" is 154.,205
vert.x,io.vertx.core.http.impl,HttpServerHandlerBenchmark,setup,Long Statement,The length of the statement "Http1xServerConnection conn=new Http1xServerConnection(() -> context`null`new HttpServerOptions()`chctx`context`"localhost"`null);" is 130.,205
vert.x,io.vertx.core.http.impl,HttpServerHandlerBenchmark,setup,Long Statement,The length of the statement "nettyChannel=new EmbeddedChannel(new HttpRequestDecoder(options.getMaxInitialLineLength()`options.getMaxHeaderSize()`options.getMaxChunkSize()`false`options.getDecoderInitialBufferSize()){" is 188.,205
vert.x,io.vertx.core.http.impl,HttpServerHandlerBenchmark,setup,Long Statement,The length of the statement "private final ByteBuf PLAINTEXT_CONTENT_BUFFER=Unpooled.unreleasableBuffer(Unpooled.directBuffer().writeBytes(STATIC_PLAINTEXT));" is 129.,205
vert.x,io.vertx.core.http.impl,HttpServerHandlerBenchmark,setup,Long Statement,The length of the statement "private void writeResponse( ChannelHandlerContext ctx` HttpRequest request` ByteBuf buf` CharSequence contentType` CharSequence contentLength){" is 143.,205
vert.x,io.vertx.core.http.impl,HttpServerHandlerBenchmark,writeResponse,Long Parameter List,The method has 5 parameters. ,299
vert.x,io.vertx.core.http.impl,CookieJarTest,testInsert,Magic Number,The method contains a magic number: 2,13
vert.x,io.vertx.core.http.impl,CookieJarTest,testInsert,Magic Number,The method contains a magic number: 3,13
vert.x,io.vertx.core.http.impl,CookieJarTest,testSameName,Magic Number,The method contains a magic number: 2,45
vert.x,io.vertx.core.http.impl,CookieJarTest,testSameName,Magic Number,The method contains a magic number: 3,45
vert.x,io.vertx.core.http.impl,CookieJarTest,testSameName,Magic Number,The method contains a magic number: 4,45
vert.x,io.vertx.core.http.impl,CookieJarTest,testSameName,Magic Number,The method contains a magic number: 5,45
vert.x,io.vertx.core.http.impl,CookieJarTest,testSameName,Magic Number,The method contains a magic number: 6,45
vert.x,io.vertx.core.http.impl,CookieJarTest,testSameName,Magic Number,The method contains a magic number: 7,45
vert.x,io.vertx.core.http.impl,CookieJarTest,testFilterByName,Magic Number,The method contains a magic number: 2,72
vert.x,io.vertx.core.http.impl,EndPointKeyTest,testEndPointKey,Magic Number,The method contains a magic number: 8080,25
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,add,Magic Number,The method contains a magic number: 0x0000000F,112
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,add,Magic Number,The method contains a magic number: 0x0000000F,136
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,remove,Magic Number,The method contains a magic number: 0x0000000F,168
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,set,Magic Number,The method contains a magic number: 0x0000000F,202
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,containsInternal,Complex Conditional,The conditional expression e.hash == h && (name == key || AsciiString.contentEqualsIgnoreCase(name`key)) is complex.,235
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,containsInternal,Complex Conditional,The conditional expression (ignoreCase && AsciiString.contentEqualsIgnoreCase(value`other)) || (!ignoreCase && AsciiString.contentEquals(value`other)) is complex.,235
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,containsInternal,Complex Method,Cyclomatic complexity of the method is 11,235
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,containsInternal,Long Statement,The length of the statement "if ((ignoreCase && AsciiString.contentEqualsIgnoreCase(value`other)) || (!ignoreCase && AsciiString.contentEquals(value`other))) {" is 130.,235
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,containsInternal,Magic Number,The method contains a magic number: 0x0000000F,235
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,getAll,Complex Conditional,The conditional expression e.hash == h && (name == key || AsciiString.contentEqualsIgnoreCase(name`key)) is complex.,306
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,getAll,Magic Number,The method contains a magic number: 0x0000000F,306
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,encoderHeader,Magic Number,The method contains a magic number: 4,500
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,encoderHeader,Magic Number,The method contains a magic number: 2,500
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,encoderHeader,Magic Number,The method contains a magic number: 2,500
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,remove0,Complex Conditional,The conditional expression e.hash == h && (name == key || AsciiString.contentEqualsIgnoreCase(name`key)) is complex.,594
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,set0,Magic Number,The method contains a magic number: 0x0000000F,628
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,get0,Complex Conditional,The conditional expression e.hash == h && (name == key || AsciiString.contentEqualsIgnoreCase(name`key)) is complex.,638
vert.x,io.vertx.core.http.impl.headers,HeadersMultiMap,get0,Magic Number,The method contains a magic number: 0x0000000F,638
vert.x,io.vertx.core.http.impl.ws,WebSocketFrameImpl,parseCloseFrame,Magic Number,The method contains a magic number: 2,219
vert.x,io.vertx.core.http.impl.ws,WebSocketFrameImpl,parseCloseFrame,Magic Number,The method contains a magic number: 1000,219
vert.x,io.vertx.core.http.impl.ws,WebSocketFrameImpl,parseCloseFrame,Magic Number,The method contains a magic number: 2,219
vert.x,io.vertx.core.http.impl.ws,WebSocketFrameImpl,parseCloseFrame,Magic Number,The method contains a magic number: 2,219
vert.x,io.vertx.core.http.impl.ws,WebSocketFrameImpl,parseCloseFrame,Magic Number,The method contains a magic number: 2,219
vert.x,io.vertx.core.impl,ContextBase,ContextBase,Long Parameter List,The method has 7 parameters. ,53
vert.x,io.vertx.core.impl,DeploymentManager,deployVerticle,Long Statement,The length of the statement "return doDeploy(options`v -> "java:" + v.getClass().getName()`currentContext`currentContext`cl`verticleSupplier).map(Deployment::deploymentID);" is 143.,59
vert.x,io.vertx.core.impl,DeploymentManager,doDeploy,Long Parameter List,The method has 6 parameters. ,144
vert.x,io.vertx.core.impl,DeploymentManager,doDeploy,Complex Method,Cyclomatic complexity of the method is 8,170
vert.x,io.vertx.core.impl,DeploymentManager,doDeploy,Long Parameter List,The method has 6 parameters. ,170
vert.x,io.vertx.core.impl,DeploymentManager,doDeploy,Long Statement,The length of the statement "WorkerPool workerPool=poolName != null ? vertx.createSharedWorkerPool(poolName`options.getWorkerPoolSize()`options.getMaxWorkerExecuteTime()`options.getMaxWorkerExecuteTimeUnit()) : null;" is 187.,170
vert.x,io.vertx.core.impl,DeploymentManager,doDeploy,Long Statement,The length of the statement "ContextBase context=(options.isWorker() ? vertx.createWorkerContext(deployment`closeFuture`workerPool`tccl) : vertx.createEventLoopContext(deployment`closeFuture`workerPool`tccl));" is 180.,170
vert.x,io.vertx.core.impl,DeploymentManager,doDeploy,Long Statement,The length of the statement "deployment.doUndeploy(vertx.getOrCreateContext()).onComplete(ar2 -> promise.fail("Verticle deployment failed.Could not be added as child of parent verticle"));" is 159.,170
vert.x,io.vertx.core.impl,DuplicatedContext,executeBlockingInternal,Long Statement,The length of the statement "return ContextBase.executeBlocking(this`action`delegate.internalWorkerPool`ordered ? delegate.internalOrderedTasks : null);" is 123.,132
vert.x,io.vertx.core.impl,EventLoopContext,EventLoopContext,Long Parameter List,The method has 7 parameters. ,25
vert.x,io.vertx.core.impl,EventLoopContext,runOnContext,Empty catch clause,The method has an empty catch block.,40
vert.x,io.vertx.core.impl,HAManager,HAManager,Long Parameter List,The method has 7 parameters. ,120
vert.x,io.vertx.core.impl,HAManager,doDeployVerticle,Long Statement,The length of the statement "verticleFactoryManager.deployVerticle(verticleName`deploymentOptions).map(Deployment::deploymentID).onComplete(wrappedHandler);" is 127.,264
vert.x,io.vertx.core.impl,HAManager,checkQuorumWhenAdded,Magic Number,The method contains a magic number: 200,336
vert.x,io.vertx.core.impl,HAManager,checkQuorumWhenAdded,Magic Number,The method contains a magic number: 10000,336
vert.x,io.vertx.core.impl,HAManager,undeployHADeployments,Long Statement,The length of the statement "log.info("Successfully undeployed HA deployment " + deploymentID + "-"+ dep.verticleIdentifier()+ " as there is no quorum");" is 124.,429
vert.x,io.vertx.core.impl,HAManager,checkFailover,Long Statement,The length of the statement "log.info("node" + nodeID + " says: Node "+ failedNodeID+ " has failed. This node will deploy "+ deployments.size()+ " deploymentIDs from that node.");" is 150.,472
vert.x,io.vertx.core.impl,HAManager,runOnContextAndWait,Empty catch clause,The method has an empty catch block.,503
vert.x,io.vertx.core.impl,HAManager,runOnContextAndWait,Magic Number,The method contains a magic number: 30,503
vert.x,io.vertx.core.impl,HAManager,processFailover,Magic Number,The method contains a magic number: 120,520
vert.x,io.vertx.core.impl,IsolatingClassLoader,loadClass,Empty catch clause,The method has an empty catch block.,35
vert.x,io.vertx.core.impl,IsolatingClassLoader,isVertxOrSystemClass,Long Statement,The length of the statement "return name.startsWith("java.") || name.startsWith("javax.") || name.startsWith("sun.*")|| name.startsWith("com.sun.")|| name.startsWith("io.vertx.core")|| name.startsWith("io.netty.")|| name.startsWith("com.fasterxml.jackson");" is 228.,136
vert.x,io.vertx.core.impl,SharedResourceHolder,createSharedResource,Long Parameter List,The method has 5 parameters. ,34
vert.x,io.vertx.core.impl,VerticleManager,doDeployVerticle,Long Parameter List,The method has 5 parameters. ,173
vert.x,io.vertx.core.impl,VerticleManager,doDeployVerticle,Long Parameter List,The method has 7 parameters. ,184
vert.x,io.vertx.core.impl,VerticleManager,doDeployVerticle,Long Parameter List,The method has 6 parameters. ,209
vert.x,io.vertx.core.impl,VerticleManager,doDeployVerticle,Long Statement,The length of the statement "return p.future().compose(callable -> deploymentManager.doDeploy(options`v -> identifier`parentContext`callingContext`cl`callable));" is 132.,209
vert.x,io.vertx.core.impl,VertxBuilder,vertx,Long Statement,The length of the statement "VertxImpl vertx=new VertxImpl(options`null`null`metrics`tracer`transport`fileResolver`threadFactory`executorServiceFactory);" is 124.,224
vert.x,io.vertx.core.impl,VertxBuilder,clusteredVertx,Long Statement,The length of the statement "VertxImpl vertx=new VertxImpl(options`clusterManager`clusterNodeSelector == null ? new DefaultNodeSelector() : clusterNodeSelector`metrics`tracer`transport`fileResolver`threadFactory`executorServiceFactory);" is 207.,243
vert.x,io.vertx.core.impl,VertxBuilder,checkTracing,Long Statement,The length of the statement "log.warn("Tracing options are configured but no tracer is instantiated. " + "Make sure you have the VertxTracerFactory in your classpath and META-INF/services/io.vertx.core.spi.VertxServiceProvider " + "contains the factory FQCN` or tracingOptions.getFactory() returns a non null value");" is 288.,360
vert.x,io.vertx.core.impl,VertxBuilder,checkMetrics,Complex Conditional,The conditional expression options.getMetricsOptions() != null && options.getMetricsOptions().isEnabled() && this.metrics == null is complex.,368
vert.x,io.vertx.core.impl,VertxBuilder,checkMetrics,Long Statement,The length of the statement "log.warn("Metrics options are configured but no metrics object is instantiated. " + "Make sure you have the VertxMetricsFactory in your classpath and META-INF/services/io.vertx.core.spi.VertxServiceProvider " + "contains the factory FQCN` or metricsOptions.getFactory() returns a non null value");" is 297.,368
vert.x,io.vertx.core.impl,VertxBuilder,nativeTransport,Empty catch clause,The method has an empty catch block.,376
vert.x,io.vertx.core.impl,VertxBuilder,nativeTransport,Empty catch clause,The method has an empty catch block.,376
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Identifier,The length of the identifier acceptorEventLoopThreadFactory is 30.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Parameter List,The method has 9 parameters. ,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "BlockedThreadChecker checker=new BlockedThreadChecker(options.getBlockedThreadCheckInterval()`options.getBlockedThreadCheckIntervalUnit()`options.getWarningExceptionTime()`options.getWarningExceptionTimeUnit());" is 211.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "ThreadFactory acceptorEventLoopThreadFactory=createThreadFactory(threadFactory`checker`useDaemonThread`maxEventLoopExecuteTime`maxEventLoopExecuteTimeUnit`"vert.x-acceptor-thread-"`false);" is 188.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "ThreadFactory workerThreadFactory=createThreadFactory(threadFactory`checker`useDaemonThread`maxWorkerExecuteTime`maxWorkerExecuteTimeUnit`"vert.x-worker-thread-"`true);" is 168.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "PoolMetrics workerPoolMetrics=metrics != null ? metrics.createPoolMetrics("worker"`"vert.x-worker-thread"`options.getWorkerPoolSize()) : null;" is 142.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "ThreadFactory internalWorkerThreadFactory=createThreadFactory(threadFactory`checker`useDaemonThread`maxWorkerExecuteTime`maxWorkerExecuteTimeUnit`"vert.x-internal-blocking-"`true);" is 180.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "ExecutorService internalWorkerExec=executorServiceFactory.createExecutor(internalWorkerThreadFactory`internalBlockingPoolSize`internalBlockingPoolSize);" is 152.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "PoolMetrics internalBlockingPoolMetrics=metrics != null ? metrics.createPoolMetrics("worker"`"vert.x-internal-blocking"`internalBlockingPoolSize) : null;" is 153.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "eventLoopThreadFactory=createThreadFactory(threadFactory`checker`useDaemonThread`maxEventLoopExecTime`maxEventLoopExecTimeUnit`"vert.x-eventloop-thread-"`false);" is 161.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "eventLoopGroup=transport.eventLoopGroup(Transport.IO_EVENT_LOOP_GROUP`options.getEventLoopPoolSize()`eventLoopThreadFactory`NETTY_IO_RATIO);" is 140.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "acceptorEventLoopGroup=transport.eventLoopGroup(Transport.ACCEPTOR_EVENT_LOOP_GROUP`1`acceptorEventLoopThreadFactory`100);" is 122.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Long Statement,The length of the statement "this.eventBus=clusterManager != null ? new ClusteredEventBus(this`options`clusterManager`nodeSelector) : new EventBusImpl(this);" is 128.,146
vert.x,io.vertx.core.impl,VertxImpl,VertxImpl,Magic Number,The method contains a magic number: 100,146
vert.x,io.vertx.core.impl,VertxImpl,createHaManager,Long Statement,The length of the statement "haManager=new HAManager(this`deploymentManager`verticleManager`clusterManager`clusterManager.getSyncMap(CLUSTER_MAP_NAME)`options.getQuorumSize()`options.getHAGroup());" is 168.,238
vert.x,io.vertx.core.impl,VertxImpl,createEventLoopContext,Long Statement,The length of the statement "return new EventLoopContext(this`eventLoopGroup.next()`internalWorkerPool`workerPool != null ? workerPool : this.workerPool`deployment`closeFuture`disableTCCL ? null : tccl);" is 174.,477
vert.x,io.vertx.core.impl,VertxImpl,createEventLoopContext,Long Statement,The length of the statement "return new EventLoopContext(this`eventLoop`internalWorkerPool`workerPool != null ? workerPool : this.workerPool`null`closeFuture`disableTCCL ? tccl : null);" is 156.,482
vert.x,io.vertx.core.impl,VertxImpl,createWorkerContext,Long Statement,The length of the statement "return new WorkerContext(this`internalWorkerPool`workerPool != null ? workerPool : this.workerPool`deployment`closeFuture`disableTCCL ? null : tccl);" is 149.,492
vert.x,io.vertx.core.impl,VertxImpl,scheduleTimeout,Long Parameter List,The method has 7 parameters. ,527
vert.x,io.vertx.core.impl,VertxImpl,scheduleTimeout,Long Parameter List,The method has 6 parameters. ,555
vert.x,io.vertx.core.impl,VertxImpl,close,Long Statement,The length of the statement "fut=fut.transform(ar -> addressResolver.close()).transform(ar -> Future.future(h -> eventBus.close((Promise)h))).transform(ar -> closeClusterManager()).transform(ar -> {" is 169.,595
vert.x,io.vertx.core.impl,VertxImpl,deleteCacheDirAndShutdown,Magic Number,The method contains a magic number: 10,788
vert.x,io.vertx.core.impl,VertxImpl,deleteCacheDirAndShutdown,Magic Number,The method contains a magic number: 10,788
vert.x,io.vertx.core.impl,VertxImpl,operationComplete,Magic Number,The method contains a magic number: 10,801
vert.x,io.vertx.core.impl,VertxImpl,createSharedWorkerPool,Long Parameter List,The method has 5 parameters. ,933
vert.x,io.vertx.core.impl,VertxImpl,createSharedWorkerPool,Long Statement,The length of the statement "ThreadFactory workerThreadFactory=createThreadFactory(threadFactory`checker`useDaemonThread`maxExecuteTime`maxExecuteTimeUnit`name + "-"`true);" is 143.,933
vert.x,io.vertx.core.impl,VertxImpl,createThreadFactory,Long Parameter List,The method has 7 parameters. ,959
vert.x,io.vertx.core.impl,VertxImpl,createThreadFactory,Long Statement,The length of the statement "VertxThread thread=threadFactory.newVertxThread(runnable`prefix + threadCount.getAndIncrement()`worker`maxExecuteTime`maxExecuteTimeUnit);" is 138.,959
vert.x,io.vertx.core.impl,VertxThread,VertxThread,Long Parameter List,The method has 5 parameters. ,29
vert.x,io.vertx.core.impl,WorkerContext,WorkerContext,Long Parameter List,The method has 6 parameters. ,27
vert.x,io.vertx.core.impl,WorkerContext,runOnContext,Empty catch clause,The method has an empty catch block.,36
vert.x,io.vertx.core.impl,BenchmarkContext,create,Long Statement,The length of the statement "return new BenchmarkContext(impl`impl.internalWorkerPool`impl.workerPool`Thread.currentThread().getContextClassLoader());" is 121.,24
vert.x,io.vertx.core.impl,VertxExecutorService,VertxExecutorService,Long Statement,The length of the statement "super(maxThreads`maxThreads`0L`TimeUnit.MILLISECONDS`new LinkedBlockingQueue<>()`r -> VertxThreadFactory.INSTANCE.newVertxThread(r`prefix`false`10000`TimeUnit.NANOSECONDS));" is 173.,25
vert.x,io.vertx.core.impl,VertxExecutorService,VertxExecutorService,Magic Number,The method contains a magic number: 10000,25
vert.x,io.vertx.core.impl,CloseFutureTest,testUseCaseGC,Magic Number,The method contains a magic number: 20_000,133
vert.x,io.vertx.core.impl,CloseSequenceTest,testCompletion,Magic Number,The method contains a magic number: 2,38
vert.x,io.vertx.core.impl,CloseSequenceTest,testConcurrent,Magic Number,The method contains a magic number: 2,91
vert.x,io.vertx.core.impl,GlobalEventExecutorNotificationTest,testProxyConnectError,Long Statement,The length of the statement "testConnectErrorNotifiesOnEventLoop(new NetClientOptions().setProxyOptions(new ProxyOptions().setPort(1234).setType(ProxyType.SOCKS5).setHost("localhost")));" is 157.,45
vert.x,io.vertx.core.impl,GlobalEventExecutorNotificationTest,testProxyConnectError,Magic Number,The method contains a magic number: 1234,45
vert.x,io.vertx.core.impl,GlobalEventExecutorNotificationTest,testConnectErrorNotifiesOnEventLoop,Magic Number,The method contains a magic number: 1234,54
vert.x,io.vertx.core.impl,GlobalEventExecutorNotificationTest,testConnectErrorNotifiesOnEventLoop,Magic Number,The method contains a magic number: 1234,54
vert.x,io.vertx.core.impl,GlobalEventExecutorNotificationTest,testNetBindError,Magic Number,The method contains a magic number: 1234,76
vert.x,io.vertx.core.impl,GlobalEventExecutorNotificationTest,testHttpBindError,Magic Number,The method contains a magic number: 8080,96
vert.x,io.vertx.core.impl,ServiceLoaderTransportTest,testServiceLoaderTransportNotAvailable,Long Statement,The length of the statement "Vertx vertx=TestUtils.runWithServiceLoader(Transport.class`FakeTransport.class`() -> Vertx.vertx(new VertxOptions().setPreferNativeTransport(true)));" is 149.,13
vert.x,io.vertx.core.impl,VertxFactoryTest,testCreateClustered,Magic Number,The method contains a magic number: 10,59
vert.x,io.vertx.core.impl,VertxFactoryTest,testFactoryClusterManagerOverridesMetaInf,Magic Number,The method contains a magic number: 10,131
vert.x,io.vertx.core.impl,VertxFactoryTest,testThatThreadFactoryCanCreateThreadsDuringTheirInitialization,Long Statement,The length of the statement "@Override public VertxThread newVertxThread( Runnable target` String name` boolean worker` long maxExecTime` TimeUnit maxExecTimeUnit){" is 135.,163
vert.x,io.vertx.core.impl,VertxFactoryTest,testThatThreadFactoryCanCreateThreadsDuringTheirInitialization,Long Statement,The length of the statement "factory.threadFactory(tf).executorServiceFactory(new CustomExecutorServiceFactory()).init().vertx().close().toCompletionStage().toCompletableFuture().join();" is 157.,163
vert.x,io.vertx.core.impl,VertxFactoryTest,newVertxThread,Long Parameter List,The method has 5 parameters. ,167
vert.x,io.vertx.core.impl.btc,BlockedThreadChecker,defaultBlockedThreadHandler,Long Statement,The length of the statement "final String message="Thread " + bte.thread().getName() + " has been blocked for "+ (bte.duration() / 1_000_000)+ " ms` time limit is "+ (bte.maxExecTime() / 1_000_000)+ " ms";" is 176.,92
vert.x,io.vertx.core.impl.btc,BlockedThreadChecker,defaultBlockedThreadHandler,Magic Number,The method contains a magic number: 1_000_000,92
vert.x,io.vertx.core.impl.btc,BlockedThreadChecker,defaultBlockedThreadHandler,Magic Number,The method contains a magic number: 1_000_000,92
vert.x,io.vertx.core.impl.cpu,CpuCoreSensor,determineProcessors,Empty catch clause,The method has an empty catch block.,61
vert.x,io.vertx.core.impl.cpu,CpuCoreSensor,readCPUMask,Complex Method,Cyclomatic complexity of the method is 8,78
vert.x,io.vertx.core.impl.cpu,CpuCoreSensor,readCPUMask,Long Statement,The length of the statement "try (final FileInputStream stream=new FileInputStream(file);final InputStreamReader inputReader=new InputStreamReader(stream`StandardCharsets.US_ASCII);final BufferedReader reader=new BufferedReader(inputReader)){" is 213.,78
vert.x,io.vertx.core.impl.cpu,CpuCoreSensor,readCPUMask,Magic Number,The method contains a magic number: 10,78
vert.x,io.vertx.core.impl.cpu,CpuCoreSensor,readCPUMask,Magic Number,The method contains a magic number: 10,78
vert.x,io.vertx.core.impl.cpu,CpuCoreSensorTest,readRegular2,Magic Number,The method contains a magic number: 2,34
vert.x,io.vertx.core.impl.launcher,CommandLineUtils,getJar,Complex Conditional,The conditional expression !classpath.isEmpty() && !classpath.contains(File.pathSeparator) && classpath.endsWith(".jar") is complex.,23
vert.x,io.vertx.core.impl.launcher,VertxCommandLauncher,printCommandNotFound,Long Statement,The length of the statement "buildWrapped(builder`0`"The command '" + command + "' is not a valid command."+ getNewLine()+ "See '"+ getCommandLinePrefix()+ " --help'");" is 139.,284
vert.x,io.vertx.core.impl.launcher,VertxCommandLauncher,isAskingForHelp,Long Statement,The length of the statement "return command.equalsIgnoreCase("--help") || command.equalsIgnoreCase("-help") || command.equalsIgnoreCase("-h")|| command.equalsIgnoreCase("?")|| command.equalsIgnoreCase("/?");" is 178.,328
vert.x,io.vertx.core.impl.launcher,VertxCommandLauncher,dispatch,Complex Method,Cyclomatic complexity of the method is 9,349
vert.x,io.vertx.core.impl.launcher,VertxCommandLauncher,dispatch,Magic Number,The method contains a magic number: 2,349
vert.x,io.vertx.core.impl.launcher,LauncherExtensibilityTest,testExtendingMainVerticle,Magic Number,The method contains a magic number: 200,52
vert.x,io.vertx.core.impl.launcher,LauncherExtensibilityTest,testThatCustomLauncherCanUpdateConfigurationWhenNoneArePassed,Magic Number,The method contains a magic number: 200,110
vert.x,io.vertx.core.impl.launcher,LauncherExtensibilityTest,testThatCustomLauncherCanUpdateConfiguration,Magic Number,The method contains a magic number: 200,142
vert.x,io.vertx.core.impl.launcher,LauncherExtensibilityTest,testThatCustomLauncherCanCustomizeMetricsOption,Magic Number,The method contains a magic number: 200,174
vert.x,io.vertx.core.impl.launcher,LauncherExtensibilityTest,testThatCustomLauncherCanCustomizeClusterManager,Magic Number,The method contains a magic number: 200,205
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testUsage,Long Statement,The length of the statement "assertThat(baos.toString()).contains("hello").contains("bye").doesNotContain("hidden").contains("A command saying hello");" is 122.,39
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testUsageOnDifferentStream,Long Statement,The length of the statement "assertThat(baos.toString()).contains("hello").contains("bye").doesNotContain("hidden").contains("A command saying hello");" is 122.,50
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testCommandUsageForHello,Long Statement,The length of the statement "assertThat(baos.toString()).contains("Usage: ").contains("A command saying hello.").contains("A simple command to wish you a good day.").contains("-n`--name <name>").contains("your name");" is 188.,70
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testComplexCommandUsage,Long Statement,The length of the statement "assertThat(baos.toString()).contains("-o1 <opt>"`" [-o2] ").contains("arg1"`"[arg2]").contains("A command with options and arguments.").contains("This is a complex command.").contains("-o1`--option1 <opt>").contains("-o2`--option2");" is 233.,148
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testComplexCommandExecutions,Long Statement,The length of the statement "assertThat(baos.toString()).contains("Option 1 : vertx").contains("Option 2 : true").contains("Arg 1 : this is arg 1").contains("Arg 2 : 25");" is 142.,179
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testComplexCommandExecutions,Long Statement,The length of the statement "assertThat(baos.toString()).contains("Option 1 : vertx").contains("Option 2 : false").contains("Arg 1 : this is arg 1").contains("Arg 2 : 0");" is 142.,179
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testComplexCommandExecutions,Long Statement,The length of the statement "assertThat(baos.toString()).contains("Option 1 : vertx").contains("Option 2 : false").contains("Arg 1 : this is arg 1").contains("Arg 2 : 24").contains("xxx"`"yyy");" is 165.,179
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testComplexCommandExecutions,Long Statement,The length of the statement "assertThat(baos.toString()).doesNotContain("Option 1 : vertx").doesNotContain("Arg 1 : this is arg 1").contains("Usage").contains("The option"`"is required");" is 158.,179
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testComplexCommandExecutions,Long Statement,The length of the statement "assertThat(baos.toString()).doesNotContain("Option 1 : vertx").contains("Usage").contains("The argument 'arg1' is required");" is 125.,179
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testUsingDifferentPrinter,Long Statement,The length of the statement "assertThat(baos.toString()).contains("Option 1 : vertx").contains("Option 2 : true").contains("Arg 1 : this is arg 1").contains("Arg 2 : 25");" is 142.,231
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testUsingDifferentPrinter,Long Statement,The length of the statement "assertThat(baos.toString()).contains("Option 1 : vertx").contains("Option 2 : false").contains("Arg 1 : this is arg 1").contains("Arg 2 : 0");" is 142.,231
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testUsingDifferentPrinter,Long Statement,The length of the statement "assertThat(baos.toString()).contains("Option 1 : vertx").contains("Option 2 : false").contains("Arg 1 : this is arg 1").contains("Arg 2 : 24").contains("xxx"`"yyy");" is 165.,231
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testUsingDifferentPrinter,Long Statement,The length of the statement "assertThat(baos.toString()).doesNotContain("Option 1 : vertx").doesNotContain("Arg 1 : this is arg 1").contains("Usage").contains("The option"`"is required");" is 158.,231
vert.x,io.vertx.core.impl.launcher,VertxCommandLineInterfaceTest,testUsingDifferentPrinter,Long Statement,The length of the statement "assertThat(baos.toString()).doesNotContain("Option 1 : vertx").contains("Usage").contains("The argument 'arg1' is required");" is 125.,231
vert.x,io.vertx.core.impl.launcher.commands,BareCommand,startVertx,Complex Method,Cyclomatic complexity of the method is 14,195
vert.x,io.vertx.core.impl.launcher.commands,BareCommand,startVertx,Magic Number,The method contains a magic number: 2,195
vert.x,io.vertx.core.impl.launcher.commands,BareCommand,configureFromSystemProperties,Complex Method,Cyclomatic complexity of the method is 10,364
vert.x,io.vertx.core.impl.launcher.commands,BareCommand,getTerminationRunnable,Magic Number,The method contains a magic number: 2,447
vert.x,io.vertx.core.impl.launcher.commands,ExecUtils,quoteArgument,Long Statement,The length of the statement "while (cleanedArgument.startsWith(SINGLE_QUOTE) && cleanedArgument.endsWith(SINGLE_QUOTE) || cleanedArgument.startsWith(DOUBLE_QUOTE) && cleanedArgument.endsWith(DOUBLE_QUOTE)) {" is 178.,64
vert.x,io.vertx.core.impl.launcher.commands,ExecUtils,exitBecauseOfVertxInitializationIssue,Long Identifier,The length of the field VERTX_INITIALIZATION_EXIT_CODE is 30.,141
vert.x,io.vertx.core.impl.launcher.commands,ExecUtils,exitBecauseOfSystemConfigurationIssue,Long Identifier,The length of the field SYSTEM_CONFIGURATION_EXIT_CODE is 30.,162
vert.x,io.vertx.core.impl.launcher.commands,FileSelector,matchPathPattern,Complex Method,Cyclomatic complexity of the method is 24,82
vert.x,io.vertx.core.impl.launcher.commands,FileSelector,match,Complex Method,Cyclomatic complexity of the method is 22,224
vert.x,io.vertx.core.impl.launcher.commands,RunCommand,setOnRedeployCommandOld,Long Statement,The length of the statement "out.println("[WARNING] the 'onRedeploy' option is deprecated` and will be removed in vert.x 3.3. Use " + "'on-redeploy' instead.");" is 131.,143
vert.x,io.vertx.core.impl.launcher.commands,RunCommand,setUp,Complex Conditional,The conditional expression !isClustered() && (commandLine.isOptionAssigned(executionContext.cli().getOption("cluster-host")) || commandLine.isOptionAssigned(executionContext.cli().getOption("cluster-port")) || commandLine.isOptionAssigned(executionContext.cli().getOption("cluster-public-host"))|| commandLine.isOptionAssigned(executionContext.cli().getOption("cluster-public-port"))) is complex.,191
vert.x,io.vertx.core.impl.launcher.commands,RunCommand,setUp,Complex Conditional,The conditional expression !ha && (commandLine.isOptionAssigned(haGroupOption) || commandLine.isOptionAssigned(quorumOption)) is complex.,191
vert.x,io.vertx.core.impl.launcher.commands,RunCommand,setUp,Long Statement,The length of the statement "if (!isClustered() && (commandLine.isOptionAssigned(executionContext.cli().getOption("cluster-host")) || commandLine.isOptionAssigned(executionContext.cli().getOption("cluster-port")) || commandLine.isOptionAssigned(executionContext.cli().getOption("cluster-public-host"))|| commandLine.isOptionAssigned(executionContext.cli().getOption("cluster-public-port")))) {" is 364.,191
vert.x,io.vertx.core.impl.launcher.commands,RunCommand,initializeRedeployment,Long Statement,The length of the statement "watcher=new Watcher(getCwd()`redeploy`this::startAsBackgroundApplication`this::stopBackgroundApplication`onRedeployCommand`redeployGracePeriod`redeployScanPeriod);" is 163.,267
vert.x,io.vertx.core.impl.launcher.commands,RunCommand,startAsBackgroundApplication,Complex Method,Cyclomatic complexity of the method is 16,327
vert.x,io.vertx.core.impl.launcher.commands,StartCommand,run,Long Statement,The length of the statement "Optional<String> maybeCommand=cliArguments.stream().filter(arg -> executionContext.launcher().getCommandNames().contains(arg)).findFirst();" is 139.,85
vert.x,io.vertx.core.impl.launcher.commands,StopCommand,terminateWindowsApplication,Long Statement,The length of the statement "String command="\"Get-CimInstance -ClassName Win32_Process -Filter \\\"" + filter + "\\\""+ " | "+ "Invoke-CimMethod -MethodName Terminate\"";" is 142.,112
vert.x,io.vertx.core.impl.launcher.commands,Watcher,Watcher,Long Parameter List,The method has 7 parameters. ,58
vert.x,io.vertx.core.impl.launcher.commands,Watcher,changesHaveOccurred,Complex Method,Cyclomatic complexity of the method is 17,135
vert.x,io.vertx.core.impl.launcher.commands,Watcher,match,Complex Conditional,The conditional expression (relFromCwd != null && FileSelector.matchPath(include`relFromCwd`!ExecUtils.isWindows())) || FileSelector.matchPath(include`file.getAbsolutePath()`!ExecUtils.isWindows()) is complex.,220
vert.x,io.vertx.core.impl.launcher.commands,Watcher,match,Complex Method,Cyclomatic complexity of the method is 8,220
vert.x,io.vertx.core.impl.launcher.commands,Watcher,match,Long Statement,The length of the statement "LOGGER.warn("A change in " + file.getAbsolutePath() + " has been detected` but the file does not belong to a "+ "watched roots: "+ roots);" is 138.,220
vert.x,io.vertx.core.impl.launcher.commands,Watcher,match,Long Statement,The length of the statement "if ((relFromCwd != null && FileSelector.matchPath(include`relFromCwd`!ExecUtils.isWindows())) || FileSelector.matchPath(include`file.getAbsolutePath()`!ExecUtils.isWindows())) {" is 177.,220
vert.x,io.vertx.core.impl.launcher.commands,Watcher,executeUserCommand,Long Statement,The length of the statement "final Process process=new ProcessBuilder(command).redirectError(ProcessBuilder.Redirect.INHERIT).redirectOutput(ProcessBuilder.Redirect.INHERIT).start();" is 153.,323
vert.x,io.vertx.core.impl.launcher.commands,BareCommandTest,assertWaitUntil,Magic Number,The method contains a magic number: 20000,38
vert.x,io.vertx.core.impl.launcher.commands,BareCommandTest,testRegularBareCommand,Long Statement,The length of the statement "assertThat(error.toString()).contains("Starting clustering...").contains("Any deploymentIDs waiting on a quorum will now be deployed");" is 135.,51
vert.x,io.vertx.core.impl.launcher.commands,BareCommandTest,testOldBare,Long Statement,The length of the statement "assertThat(error.toString()).contains("Starting clustering...").contains("Any deploymentIDs waiting on a quorum will now be deployed");" is 135.,66
vert.x,io.vertx.core.impl.launcher.commands,BareCommandTest,testRegularBareCommandWithClusterHost,Long Statement,The length of the statement "assertThat(error.toString()).contains("Starting clustering...").doesNotContain("No cluster-host specified").contains("Any deploymentIDs waiting on a quorum will now be deployed");" is 179.,80
vert.x,io.vertx.core.impl.launcher.commands,BareCommandTest,testOldBareWithClusterHost,Long Statement,The length of the statement "assertThat(error.toString()).contains("Starting clustering...").doesNotContain("No cluster-host specified").contains("Any deploymentIDs waiting on a quorum will now be deployed");" is 179.,95
vert.x,io.vertx.core.impl.launcher.commands,ClasspathHandlerTest,setUp,Long Statement,The length of the statement "Iterable<? extends JavaFileObject> compilationUnits1=fileManager.getJavaFileObjectsFromFiles(Collections.singletonList(new File("src/test/classpath/verticle/MyVerticle.java")));" is 177.,36
vert.x,io.vertx.core.impl.launcher.commands,ClasspathHandlerTest,testCPInRunCommand,Magic Number,The method contains a magic number: 200,62
vert.x,io.vertx.core.impl.launcher.commands,ClasspathHandlerTest,testCPInBareCommand,Magic Number,The method contains a magic number: 200,79
vert.x,io.vertx.core.impl.launcher.commands,CommandTestBase,tearDown,Empty catch clause,The method has an empty catch block.,61
vert.x,io.vertx.core.impl.launcher.commands,CommandTestBase,tearDown,Empty catch clause,The method has an empty catch block.,61
vert.x,io.vertx.core.impl.launcher.commands,CommandTestBase,assertWaitUntil,Magic Number,The method contains a magic number: 20000,102
vert.x,io.vertx.core.impl.launcher.commands,CommandTestBase,assertWaitUntil,Magic Number,The method contains a magic number: 20000,106
vert.x,io.vertx.core.impl.launcher.commands,CommandTestBase,awaitLatch,Magic Number,The method contains a magic number: 10,114
vert.x,io.vertx.core.impl.launcher.commands,ComplexCommand,run,Magic Number,The method contains a magic number: 2,62
vert.x,io.vertx.core.impl.launcher.commands,ExecUtilsTest,testAddArgument,Long Statement,The length of the statement "assertThat(args).contains("hello"`"-foo"`"--bar"`"--baz=hello"`"\"with spaces\""`"\"with'single'_quotes\""`Utils.isWindows() ? "\"with\\\"double\\\"quotes\"" : "'with\"double\"quotes'"`Utils.isWindows() ? "\"with \\\"double\\\" quotes and spaces\"" : "'with \"double\" quotes and spaces'"`"\"with 'single' quotes and spaces\""`"wrapped_in_single_quotes"`"wrapped_in_double_quotes");" is 382.,52
vert.x,io.vertx.core.impl.launcher.commands,FileSelectorTest,test,Long Statement,The length of the statement "assertThat(FileSelector.matchPath("**" + separator + "*.js"`"src/main" + separator + "js"+ separator+ "foo.js")).isTrue();" is 122.,27
vert.x,io.vertx.core.impl.launcher.commands,FileSelectorTest,test,Long Statement,The length of the statement "assertThat(FileSelector.matchPath("**" + separator + "*.js"`"src" + separator + "main"+ separator+ "js"+ separator+ "dir"+ separator+ "foo.js")).isTrue();" is 154.,27
vert.x,io.vertx.core.impl.launcher.commands,FileSelectorTest,test,Long Statement,The length of the statement "assertThat(FileSelector.matchPath("*" + separator + "*.js"`"src" + separator + "main"+ separator+ "js"+ separator+ "dir"+ separator+ "foo.js")).isFalse();" is 154.,27
vert.x,io.vertx.core.impl.launcher.commands,FileSelectorTest,test,Long Statement,The length of the statement "assertThat(FileSelector.match("not" + separator + "*"+ separator+ "something.js"`"foo" + separator + "bar"+ separator+ "something.js")).isFalse();" is 146.,27
vert.x,io.vertx.core.impl.launcher.commands,FileSelectorTest,test,Long Statement,The length of the statement "assertThat(FileSelector.match("**" + separator + "not"+ separator+ "something.js"`"foo" + separator + "bar"+ separator+ "something.js")).isFalse();" is 147.,27
vert.x,io.vertx.core.impl.launcher.commands,FileSelectorTest,testMatchPath_UnixFileSeparator,Long Statement,The length of the statement "assertTrue(FileSelector.matchPath(separator + "*" + separator+ "a.txt"`separator + "b" + separator+ "a.txt"`separator`false));" is 126.,66
vert.x,io.vertx.core.impl.launcher.commands,FileSelectorTest,testMatchPath_WindowsFileSeparator,Long Statement,The length of the statement "assertTrue(FileSelector.matchPath(separator + "*" + separator+ "a.txt"`separator + "b" + separator+ "a.txt"`separator`false));" is 126.,83
vert.x,io.vertx.core.impl.launcher.commands,GoodByeCommand,define,Long Statement,The length of the statement "return new DefaultCLI().setName("bye").addOption(new TypedOption<String>().setType(String.class).setRequired(true).setShortName("n").setSingleValued(true)).setSummary("A command saying goodbye.");" is 196.,22
vert.x,io.vertx.core.impl.launcher.commands,HttpTestVerticle,start,Long Statement,The length of the statement "json.put("clustered"`vertx.isClustered()).put("metrics"`vertx.isMetricsEnabled()).put("id"`System.getProperty("vertx.id"`"no id")).put("conf"`config()).put("startTime"`time);" is 174.,21
vert.x,io.vertx.core.impl.launcher.commands,HttpTestVerticle,start,Magic Number,The method contains a magic number: 8080,21
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployMode,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + Launcher.class.getName()});" is 172.,60
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployMode,Magic Number,The method contains a magic number: 200,60
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineConf,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + Launcher.class.getName()`"--conf"`"{\"random\":" + random + "}"});" is 211.,75
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineConf,Magic Number,The method contains a magic number: 100,75
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineConf,Magic Number,The method contains a magic number: 200,75
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineConf2,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + Launcher.class.getName()`"--conf={\"random\":" + random + "}"});" is 209.,96
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineConf2,Magic Number,The method contains a magic number: 100,96
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineConf2,Magic Number,The method contains a magic number: 200,96
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithFileConf,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + Launcher.class.getName()`"--conf"`new File("src/test/resources/conf.json").getAbsolutePath()});" is 240.,117
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithFileConf,Magic Number,The method contains a magic number: 200,117
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithFileConf2,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + Launcher.class.getName()`"--conf=" + new File("src/test/resources/conf.json").getAbsolutePath()});" is 243.,137
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithFileConf2,Magic Number,The method contains a magic number: 200,137
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithCluster,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + Launcher.class.getName()`"--cluster"`ExecUtils.isWindows() ? "--redeploy-termination-period=3000" : ""});" is 250.,157
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithCluster,Magic Number,The method contains a magic number: 200,157
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithCluster,Magic Number,The method contains a magic number: 20000,157
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testRedeployment,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + Launcher.class.getName()`ExecUtils.isWindows() ? "--redeploy-termination-period=3000" : ""});" is 238.,175
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testRedeployment,Magic Number,The method contains a magic number: 200,175
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testRedeployment,Magic Number,The method contains a magic number: 200,175
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testRedeployment,Magic Number,The method contains a magic number: 20000,175
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testRedeploymentWithSlash,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + "/" + "*.txt"`"--launcher-class=" + Launcher.class.getName()`ExecUtils.isWindows() ? "--redeploy-termination-period=3000" : ""});" is 227.,206
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testRedeploymentWithSlash,Magic Number,The method contains a magic number: 200,206
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testRedeploymentWithSlash,Magic Number,The method contains a magic number: 200,206
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testRedeploymentWithSlash,Magic Number,The method contains a magic number: 20000,206
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineOptions,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + OptionsRecordingLauncher.class.getName()`"--options"`"{\"metricsOptions\":{\"enabled\":true}}"});" is 242.,238
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineOptions,Magic Number,The method contains a magic number: 200,238
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineOptions2,Long Statement,The length of the statement "cli.dispatch(new Launcher()`new String[]{"run"`HttpTestVerticle.class.getName()`"--redeploy=**" + File.separator + "*.txt"`"--launcher-class=" + OptionsRecordingLauncher.class.getName()`"--options={\"metricsOptions\":{\"enabled\":true}}"});" is 240.,262
vert.x,io.vertx.core.impl.launcher.commands,RedeployTest,testStartingApplicationInRedeployModeWithInlineOptions2,Magic Number,The method contains a magic number: 200,262
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testDeploymentOfJavaVerticle,Magic Number,The method contains a magic number: 200,67
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testDeploymentOfJavaVerticleWithCluster,Magic Number,The method contains a magic number: 200,79
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testFatJarWithHTTPVerticle,Magic Number,The method contains a magic number: 200,110
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testFatJarWithHTTPVerticleWithCluster,Magic Number,The method contains a magic number: 200,124
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testThatHADeploysVerticleWhenCombinedWithCluster,Magic Number,The method contains a magic number: 200,139
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testThatHADeploysVerticle,Magic Number,The method contains a magic number: 200,153
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testWithConfProvidedInline,Magic Number,The method contains a magic number: 200,167
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testWithBrokenConfProvidedInline,Magic Number,The method contains a magic number: 200,182
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testWithConfProvidedAsFile,Magic Number,The method contains a magic number: 200,198
vert.x,io.vertx.core.impl.launcher.commands,RunCommandTest,testMetricsEnabledFromCommandLine,Magic Number,The method contains a magic number: 200,212
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStop,Long Statement,The length of the statement "assertThat(output.toString()).contains("Stopping vert.x application '" + id + "'").contains("Application '" + id + "' terminated with status 0");" is 145.,43
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStop,Magic Number,The method contains a magic number: 2,43
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStop,Magic Number,The method contains a magic number: 2,43
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithoutCommand,Long Statement,The length of the statement "assertThat(output.toString()).contains("Stopping vert.x application '" + id + "'").contains("Application '" + id + "' terminated with status 0");" is 145.,80
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithoutCommand,Magic Number,The method contains a magic number: 2,80
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithoutCommand,Magic Number,The method contains a magic number: 2,80
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithJVMOptions,Long Statement,The length of the statement "cli.dispatch(new String[]{"start"`"run"`HttpTestVerticle.class.getName()`"--launcher-class"`Launcher.class.getName()`"--java-opts=-Dfoo=bar -Dbaz=bar"`"--redirect-output"});" is 173.,117
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithJVMOptions,Long Statement,The length of the statement "assertThat(output.toString()).contains("Stopping vert.x application '" + id + "'").contains("Application '" + id + "' terminated with status 0");" is 145.,117
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithJVMOptions,Magic Number,The method contains a magic number: 2,117
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithJVMOptions,Magic Number,The method contains a magic number: 2,117
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,waitForStartup,Empty catch clause,The method has an empty catch block.,167
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,waitForStartup,Magic Number,The method contains a magic number: 200,167
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithId,Long Statement,The length of the statement "cli.dispatch(new String[]{"start"`"run"`HttpTestVerticle.class.getName()`"--launcher-class"`Launcher.class.getName()`"--vertx-id=hello"});" is 138.,178
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithId,Long Statement,The length of the statement "assertThat(output.toString()).contains("Stopping vert.x application '" + id + "'").contains("Application '" + id + "' terminated with status 0");" is 145.,178
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithId,Magic Number,The method contains a magic number: 2,178
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithId,Magic Number,The method contains a magic number: 2,178
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithIdAndAnotherArgument,Long Statement,The length of the statement "cli.dispatch(new String[]{"start"`"run"`HttpTestVerticle.class.getName()`"--launcher-class"`Launcher.class.getName()`"--vertx-id=hello"`"-cluster"});" is 149.,214
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithIdAndAnotherArgument,Long Statement,The length of the statement "assertThat(output.toString()).contains("Stopping vert.x application '" + id + "'").contains("Application '" + id + "' terminated with status 0");" is 145.,214
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithIdAndAnotherArgument,Magic Number,The method contains a magic number: 2,214
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithIdAndAnotherArgument,Magic Number,The method contains a magic number: 2,214
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithIdAndAnotherArgumentBeforeId,Long Statement,The length of the statement "cli.dispatch(new String[]{"start"`"run"`HttpTestVerticle.class.getName()`"--launcher-class"`Launcher.class.getName()`"-cluster"`"--vertx-id=hello"});" is 149.,251
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithIdAndAnotherArgumentBeforeId,Long Statement,The length of the statement "assertThat(output.toString()).contains("Stopping vert.x application '" + id + "'").contains("Application '" + id + "' terminated with status 0");" is 145.,251
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithIdAndAnotherArgumentBeforeId,Magic Number,The method contains a magic number: 2,251
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStartListStopWithIdAndAnotherArgumentBeforeId,Magic Number,The method contains a magic number: 2,251
vert.x,io.vertx.core.impl.launcher.commands,StartStopListCommandsTest,testStoppingAnUnknownProcess,Long Statement,The length of the statement "assertThat(output.toString()).contains("Stopping vert.x application '" + id + "'").contains("Cannot find process for application using the id");" is 144.,305
vert.x,io.vertx.core.impl.launcher.commands,WatcherAbsolutePathTest,prepare,Long Statement,The length of the statement "watcher=new Watcher(otherRoot`Collections.unmodifiableList(Arrays.asList(root.getAbsolutePath() + File.separator + "**"+ File.separator+ "*.txt"`root.getAbsolutePath() + File.separator + "windows\\*.win"`root.getAbsolutePath() + File.separator + "unix/*.nix"`root.getAbsolutePath() + File.separator + "FOO.bar"))`next -> {" is 322.,28
vert.x,io.vertx.core.impl.launcher.commands,WatcherAbsolutePathTest,prepare,Magic Number,The method contains a magic number: 10,28
vert.x,io.vertx.core.impl.launcher.commands,WatcherAbsolutePathTest,prepare,Magic Number,The method contains a magic number: 10,28
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,prepare,Long Statement,The length of the statement "watcher=new Watcher(root`Collections.unmodifiableList(Arrays.asList("**" + File.separator + "*.txt"`"windows\\*.win"`"unix/*.nix"`"FOO.bar"))`next -> {" is 151.,42
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,prepare,Magic Number,The method contains a magic number: 10,42
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,prepare,Magic Number,The method contains a magic number: 10,42
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAddition,Magic Number,The method contains a magic number: 2,70
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWithANonMatchingFile,Magic Number,The method contains a magic number: 500,84
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileModification,Magic Number,The method contains a magic number: 2,99
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileModification,Magic Number,The method contains a magic number: 1500,99
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileModification,Magic Number,The method contains a magic number: 2,99
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileModification,Magic Number,The method contains a magic number: 3,99
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileDeletion,Magic Number,The method contains a magic number: 500,120
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileDeletion,Magic Number,The method contains a magic number: 2,120
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 500,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 500,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 2,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 1000,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 2,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 3,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 1000,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 3,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testFileAdditionAndModificationInDirectory,Magic Number,The method contains a magic number: 4,138
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testOSSpecificIncludePaths,Magic Number,The method contains a magic number: 500,173
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testOSSpecificIncludePaths,Magic Number,The method contains a magic number: 2,173
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testOSSpecificIncludePaths,Magic Number,The method contains a magic number: 1000,173
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testOSSpecificIncludePaths,Magic Number,The method contains a magic number: 500,173
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testOSSpecificIncludePaths,Magic Number,The method contains a magic number: 2,173
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testOSSpecificIncludePaths,Magic Number,The method contains a magic number: 3,173
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testCaseSensitivity,Long Statement,The length of the statement "assertWaitUntil(() -> undeploy.get() == 1 && deploy.get() == 2`"expected undeploy " + undeploy.get() + " == 1 and deploy "+ deploy.get()+ " == 2");" is 147.,202
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testCaseSensitivity,Magic Number,The method contains a magic number: 2,202
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 3,237
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 10,237
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 1000,237
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 1000,237
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 2,237
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 2,237
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 3,237
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 3,237
vert.x,io.vertx.core.impl.launcher.commands,WatcherTest,testWatcherPerformances,Magic Number,The method contains a magic number: 4,237
vert.x,io.vertx.core.impl.logging,LoggerAdapter,logDeveloperInfo,Long Statement,The length of the statement "log.debug("Copying " + obj.getClass() + " for shared data. Consider implementing "+ Shareable.class+ " for better performance.");" is 129.,103
vert.x,io.vertx.core.impl.logging,LoggerFactory,initialise,Long Identifier,The length of the field LOGGER_DELEGATE_FACTORY_CLASS_NAME is 34.,36
vert.x,io.vertx.core.impl.resolver,DnsResolverProvider,DnsResolverProvider,Complex Method,Cyclomatic complexity of the method is 18,55
vert.x,io.vertx.core.impl.resolver,DnsResolverProvider,DnsResolverProvider,Magic Number,The method contains a magic number: 53,55
vert.x,io.vertx.core.impl.resolver,DnsResolverProvider,DnsResolverProvider,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5d07465b,55
vert.x,io.vertx.core.impl.resolver,DnsResolverProvider,lookup,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5d07465b,135
vert.x,io.vertx.core.impl.transports,EpollTransport,getPendingFastOpenRequestsThreshold,Long Identifier,The length of the field pendingFastOpenRequestsThreshold is 32.,44
vert.x,io.vertx.core.impl.transports,EpollTransport,setPendingFastOpenRequestsThreshold,Long Identifier,The length of the field pendingFastOpenRequestsThreshold is 32.,53
vert.x,io.vertx.core.impl.transports,EpollTransport,configure,Long Identifier,The length of the field pendingFastOpenRequestsThreshold is 32.,139
vert.x,io.vertx.core.impl.transports,JDKTransport,datagramChannel,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@420779ec,43
vert.x,io.vertx.core.impl.transports,JDKTransport,channelFactory,Long Statement,The length of the statement "throw new IllegalArgumentException("The Vertx instance must be created with the preferNativeTransport option set to true to create domain sockets");" is 148.,54
vert.x,io.vertx.core.impl.utils,ConcurrentCyclicSequenceTest,testEmpty,Magic Number,The method contains a magic number: 3,24
vert.x,io.vertx.core.impl.utils,ConcurrentCyclicSequenceTest,testRoundRobin,Magic Number,The method contains a magic number: 1_000_000,66
vert.x,io.vertx.core.impl.utils,ConcurrentCyclicSequenceTest,testRoundRobin,Magic Number,The method contains a magic number: 10,66
vert.x,io.vertx.core.impl.utils,ConcurrentCyclicSequenceTest,testRoundRobin,Magic Number,The method contains a magic number: 10,66
vert.x,io.vertx.core.impl.utils,ConcurrentCyclicSequenceTest,testIteratorOfEmpty,Magic Number,The method contains a magic number: 3,112
vert.x,io.vertx.core.impl.utils,ConcurrentCyclicSequenceTest,testIteratorOfSingleton,Magic Number,The method contains a magic number: 4,124
vert.x,io.vertx.core.impl.utils,ConcurrentCyclicSequenceTest,testIterator,Magic Number,The method contains a magic number: 2,136
vert.x,io.vertx.core.impl.utils,ConcurrentCyclicSequenceTest,testIterator,Magic Number,The method contains a magic number: 3,136
vert.x,io.vertx.core.impl.verticle,CompilingClassLoader,CompilingClassLoader,Complex Conditional,The conditional expression code == null || (!code.startsWith("compiler.warn.annotation.method.not.found") && !"compiler.warn.proc.processor.incompatible.source.version".equals(code)) is complex.,64
vert.x,io.vertx.core.impl.verticle,CompilingClassLoader,CompilingClassLoader,Complex Method,Cyclomatic complexity of the method is 8,64
vert.x,io.vertx.core.impl.verticle,CompilingClassLoader,CompilingClassLoader,Long Statement,The length of the statement "throw new RuntimeException("File not found: " + sourceFile.getAbsolutePath() + " current dir is: "+ new File(".").getAbsolutePath());" is 133.,64
vert.x,io.vertx.core.impl.verticle,CompilingClassLoader,CompilingClassLoader,Long Statement,The length of the statement "JavaFileObject javaFile=standardFileManager.getJavaFileForInput(StandardLocation.SOURCE_PATH`resolveMainClassName()`Kind.SOURCE);" is 129.,64
vert.x,io.vertx.core.impl.verticle,CompilingClassLoader,CompilingClassLoader,Long Statement,The length of the statement "JavaCompiler.CompilationTask task=javaCompiler.getTask(null`fileManager`diagnostics`COMPILER_OPTIONS`null`Collections.singleton(javaFile));" is 139.,64
vert.x,io.vertx.core.impl.verticle,CompilingClassLoader,CompilingClassLoader,Long Statement,The length of the statement "if (code == null || (!code.startsWith("compiler.warn.annotation.method.not.found") && !"compiler.warn.proc.processor.incompatible.source.version".equals(code))) {" is 162.,64
vert.x,io.vertx.core.impl.verticle,JavaSourceContext,JavaSourceContext,Long Statement,The length of the statement "throw new RuntimeException("Package structure does not match directory structure: " + token + " != "+ rootDirectory.getName());" is 127.,31
vert.x,io.vertx.core.impl.verticle,PackageHelper,browseJar,Complex Conditional,The conditional expression name.startsWith(rootEntryName) && name.indexOf('/'`rootEnd) == -1 && name.endsWith(CLASS_FILE) is complex.,70
vert.x,io.vertx.core.json,JsonArray,equals,Complex Conditional,The conditional expression thisValue instanceof Number && otherValue instanceof Number && thisValue.getClass() != otherValue.getClass() is complex.,627
vert.x,io.vertx.core.json,JsonArray,equals,Complex Conditional,The conditional expression thisValue instanceof Float || thisValue instanceof Double || otherValue instanceof Float|| otherValue instanceof Double is complex.,627
vert.x,io.vertx.core.json,JsonArray,equals,Complex Conditional,The conditional expression thisValue instanceof Integer || thisValue instanceof Long || otherValue instanceof Integer|| otherValue instanceof Long is complex.,627
vert.x,io.vertx.core.json,JsonArray,equals,Complex Conditional,The conditional expression thisValue instanceof CharSequence && otherValue instanceof CharSequence && thisValue.getClass() != otherValue.getClass() is complex.,627
vert.x,io.vertx.core.json,JsonArray,equals,Complex Method,Cyclomatic complexity of the method is 15,627
vert.x,io.vertx.core.json,JsonArray,equals,Long Statement,The length of the statement "if (thisValue instanceof Float || thisValue instanceof Double || otherValue instanceof Float|| otherValue instanceof Double) {" is 126.,627
vert.x,io.vertx.core.json,JsonArray,equals,Long Statement,The length of the statement "if (thisValue instanceof Integer || thisValue instanceof Long || otherValue instanceof Integer|| otherValue instanceof Long) {" is 126.,627
vert.x,io.vertx.core.json,JsonArray,equals,Long Statement,The length of the statement "if (thisValue instanceof CharSequence && otherValue instanceof CharSequence && thisValue.getClass() != otherValue.getClass()) {" is 127.,627
vert.x,io.vertx.core.json,JsonArray,readFromBuffer,Magic Number,The method contains a magic number: 4,702
vert.x,io.vertx.core.json,JsonArray,readFromBuffer,Magic Number,The method contains a magic number: 4,702
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 2,115
vert.x,io.vertx.core.json,JsonObject,of,Long Parameter List,The method has 6 parameters. ,133
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 3,133
vert.x,io.vertx.core.json,JsonObject,of,Long Parameter List,The method has 8 parameters. ,154
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 4,154
vert.x,io.vertx.core.json,JsonObject,of,Long Parameter List,The method has 10 parameters. ,179
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 5,179
vert.x,io.vertx.core.json,JsonObject,of,Long Parameter List,The method has 12 parameters. ,207
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 6,207
vert.x,io.vertx.core.json,JsonObject,of,Long Parameter List,The method has 14 parameters. ,238
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 7,238
vert.x,io.vertx.core.json,JsonObject,of,Long Parameter List,The method has 16 parameters. ,273
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 8,273
vert.x,io.vertx.core.json,JsonObject,of,Long Parameter List,The method has 18 parameters. ,311
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 9,311
vert.x,io.vertx.core.json,JsonObject,of,Long Parameter List,The method has 20 parameters. ,352
vert.x,io.vertx.core.json,JsonObject,of,Magic Number,The method contains a magic number: 10,352
vert.x,io.vertx.core.json,JsonObject,mergeIn,Complex Method,Cyclomatic complexity of the method is 8,989
vert.x,io.vertx.core.json,JsonObject,equals,Complex Conditional,The conditional expression thisValue instanceof Number && otherValue instanceof Number && thisValue.getClass() != otherValue.getClass() is complex.,1161
vert.x,io.vertx.core.json,JsonObject,equals,Complex Conditional,The conditional expression thisValue instanceof Float || thisValue instanceof Double || otherValue instanceof Float|| otherValue instanceof Double is complex.,1161
vert.x,io.vertx.core.json,JsonObject,equals,Complex Conditional,The conditional expression thisValue instanceof Integer || thisValue instanceof Long || otherValue instanceof Integer|| otherValue instanceof Long is complex.,1161
vert.x,io.vertx.core.json,JsonObject,equals,Complex Conditional,The conditional expression thisValue instanceof CharSequence && otherValue instanceof CharSequence && thisValue.getClass() != otherValue.getClass() is complex.,1161
vert.x,io.vertx.core.json,JsonObject,equals,Complex Method,Cyclomatic complexity of the method is 16,1161
vert.x,io.vertx.core.json,JsonObject,equals,Long Statement,The length of the statement "if (thisValue instanceof Float || thisValue instanceof Double || otherValue instanceof Float|| otherValue instanceof Double) {" is 126.,1161
vert.x,io.vertx.core.json,JsonObject,equals,Long Statement,The length of the statement "if (thisValue instanceof Integer || thisValue instanceof Long || otherValue instanceof Integer|| otherValue instanceof Long) {" is 126.,1161
vert.x,io.vertx.core.json,JsonObject,equals,Long Statement,The length of the statement "if (thisValue instanceof CharSequence && otherValue instanceof CharSequence && thisValue.getClass() != otherValue.getClass()) {" is 127.,1161
vert.x,io.vertx.core.json,JsonObject,readFromBuffer,Magic Number,The method contains a magic number: 4,1240
vert.x,io.vertx.core.json,JsonObject,readFromBuffer,Magic Number,The method contains a magic number: 4,1240
vert.x,io.vertx.core.json,JacksonDatabindTest,testBytesDecoding,Magic Number,The method contains a magic number: 12,90
vert.x,io.vertx.core.json,JacksonDatabindTest,testJsonArrayDeserializer,Magic Number,The method contains a magic number: 3,106
vert.x,io.vertx.core.json,JacksonDatabindTest,testJsonArrayDeserializer,Magic Number,The method contains a magic number: 2,106
vert.x,io.vertx.core.json,JacksonDatabindTest,testJsonArrayDeserializer,Magic Number,The method contains a magic number: 3,106
vert.x,io.vertx.core.json,JacksonTest,testEncodeUnknownNumber,Magic Number,The method contains a magic number: 4D,32
vert.x,io.vertx.core.json,JacksonTest,doubleValue,Magic Number,The method contains a magic number: 4D,47
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Empty catch clause,The method has an empty catch block.,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Empty catch clause,The method has an empty catch block.,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Empty catch clause,The method has an empty catch block.,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 123,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 123,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 123l,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 123,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 123f,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 123,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 2,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 123d,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 123,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 3,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 4,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetInteger,Magic Number,The method contains a magic number: 5,45
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Empty catch clause,The method has an empty catch block.,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Empty catch clause,The method has an empty catch block.,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Empty catch clause,The method has an empty catch block.,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 123l,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 123l,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 123,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 123l,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 123f,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 123l,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 2,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 123d,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 123l,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 3,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 4,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetLong,Magic Number,The method contains a magic number: 5,79
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Empty catch clause,The method has an empty catch block.,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Empty catch clause,The method has an empty catch block.,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Empty catch clause,The method has an empty catch block.,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 123f,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 123f,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 123,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 123f,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 123,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 123f,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 2,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 123d,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 123f,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 3,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 4,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetFloat,Magic Number,The method contains a magic number: 5,113
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Empty catch clause,The method has an empty catch block.,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Empty catch clause,The method has an empty catch block.,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Empty catch clause,The method has an empty catch block.,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 123d,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 123d,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 123,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 123d,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 123,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 123d,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 2,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 123d,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 123d,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 3,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 4,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetDouble,Magic Number,The method contains a magic number: 5,147
vert.x,io.vertx.core.json,JsonArrayTest,testGetString,Empty catch clause,The method has an empty catch block.,181
vert.x,io.vertx.core.json,JsonArrayTest,testGetString,Empty catch clause,The method has an empty catch block.,181
vert.x,io.vertx.core.json,JsonArrayTest,testGetString,Magic Number,The method contains a magic number: 123,181
vert.x,io.vertx.core.json,JsonArrayTest,testGetString,Magic Number,The method contains a magic number: 2,181
vert.x,io.vertx.core.json,JsonArrayTest,testGetBoolean,Empty catch clause,The method has an empty catch block.,208
vert.x,io.vertx.core.json,JsonArrayTest,testGetBoolean,Empty catch clause,The method has an empty catch block.,208
vert.x,io.vertx.core.json,JsonArrayTest,testGetBoolean,Empty catch clause,The method has an empty catch block.,208
vert.x,io.vertx.core.json,JsonArrayTest,testGetBoolean,Magic Number,The method contains a magic number: 2,208
vert.x,io.vertx.core.json,JsonArrayTest,testGetBoolean,Magic Number,The method contains a magic number: 123,208
vert.x,io.vertx.core.json,JsonArrayTest,testGetBoolean,Magic Number,The method contains a magic number: 2,208
vert.x,io.vertx.core.json,JsonArrayTest,testGetBoolean,Magic Number,The method contains a magic number: 3,208
vert.x,io.vertx.core.json,JsonArrayTest,testGetBinary,Empty catch clause,The method has an empty catch block.,237
vert.x,io.vertx.core.json,JsonArrayTest,testGetBinary,Empty catch clause,The method has an empty catch block.,237
vert.x,io.vertx.core.json,JsonArrayTest,testGetBinary,Empty catch clause,The method has an empty catch block.,237
vert.x,io.vertx.core.json,JsonArrayTest,testGetBinary,Magic Number,The method contains a magic number: 10,237
vert.x,io.vertx.core.json,JsonArrayTest,testGetBinary,Magic Number,The method contains a magic number: 123,237
vert.x,io.vertx.core.json,JsonArrayTest,testGetBinary,Magic Number,The method contains a magic number: 2,237
vert.x,io.vertx.core.json,JsonArrayTest,testGetBuffer,Empty catch clause,The method has an empty catch block.,267
vert.x,io.vertx.core.json,JsonArrayTest,testGetBuffer,Empty catch clause,The method has an empty catch block.,267
vert.x,io.vertx.core.json,JsonArrayTest,testGetBuffer,Empty catch clause,The method has an empty catch block.,267
vert.x,io.vertx.core.json,JsonArrayTest,testGetBuffer,Magic Number,The method contains a magic number: 10,267
vert.x,io.vertx.core.json,JsonArrayTest,testGetBuffer,Magic Number,The method contains a magic number: 123,267
vert.x,io.vertx.core.json,JsonArrayTest,testGetBuffer,Magic Number,The method contains a magic number: 2,267
vert.x,io.vertx.core.json,JsonArrayTest,testGetInstant,Empty catch clause,The method has an empty catch block.,297
vert.x,io.vertx.core.json,JsonArrayTest,testGetInstant,Empty catch clause,The method has an empty catch block.,297
vert.x,io.vertx.core.json,JsonArrayTest,testGetInstant,Empty catch clause,The method has an empty catch block.,297
vert.x,io.vertx.core.json,JsonArrayTest,testGetInstant,Empty catch clause,The method has an empty catch block.,297
vert.x,io.vertx.core.json,JsonArrayTest,testGetInstant,Empty catch clause,The method has an empty catch block.,297
vert.x,io.vertx.core.json,JsonArrayTest,testGetInstant,Magic Number,The method contains a magic number: 123,297
vert.x,io.vertx.core.json,JsonArrayTest,testGetInstant,Magic Number,The method contains a magic number: 2,297
vert.x,io.vertx.core.json,JsonArrayTest,testGetInstant,Magic Number,The method contains a magic number: 2,297
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonObject,Empty catch clause,The method has an empty catch block.,340
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonObject,Empty catch clause,The method has an empty catch block.,340
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonObject,Empty catch clause,The method has an empty catch block.,340
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonObject,Magic Number,The method contains a magic number: 123,340
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonObject,Magic Number,The method contains a magic number: 2,340
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonArray,Empty catch clause,The method has an empty catch block.,368
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonArray,Empty catch clause,The method has an empty catch block.,368
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonArray,Empty catch clause,The method has an empty catch block.,368
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonArray,Magic Number,The method contains a magic number: 123,368
vert.x,io.vertx.core.json,JsonArrayTest,testGetJsonArray,Magic Number,The method contains a magic number: 2,368
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Empty catch clause,The method has an empty catch block.,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Empty catch clause,The method has an empty catch block.,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 123,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 123,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 123l,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 123l,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 123f,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 123f,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 2,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 123d,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 123d,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 3,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 4,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 5,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 6,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 7,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 8,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 100,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 9,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 10,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 10,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 11,396
vert.x,io.vertx.core.json,JsonArrayTest,testGetValue,Magic Number,The method contains a magic number: 12,396
vert.x,io.vertx.core.json,JsonArrayTest,testAddEnum,Magic Number,The method contains a magic number: 2,461
vert.x,io.vertx.core.json,JsonArrayTest,testAddString,Magic Number,The method contains a magic number: 2,470
vert.x,io.vertx.core.json,JsonArrayTest,testAddCharSequence,Magic Number,The method contains a magic number: 2,479
vert.x,io.vertx.core.json,JsonArrayTest,testAddInteger,Magic Number,The method contains a magic number: 123,488
vert.x,io.vertx.core.json,JsonArrayTest,testAddInteger,Magic Number,The method contains a magic number: 123,488
vert.x,io.vertx.core.json,JsonArrayTest,testAddLong,Magic Number,The method contains a magic number: 123l,495
vert.x,io.vertx.core.json,JsonArrayTest,testAddLong,Magic Number,The method contains a magic number: 123l,495
vert.x,io.vertx.core.json,JsonArrayTest,testAddLong,Magic Number,The method contains a magic number: 2,495
vert.x,io.vertx.core.json,JsonArrayTest,testAddFloat,Magic Number,The method contains a magic number: 123f,504
vert.x,io.vertx.core.json,JsonArrayTest,testAddFloat,Magic Number,The method contains a magic number: 123f,504
vert.x,io.vertx.core.json,JsonArrayTest,testAddFloat,Magic Number,The method contains a magic number: 2,504
vert.x,io.vertx.core.json,JsonArrayTest,testAddDouble,Magic Number,The method contains a magic number: 123d,513
vert.x,io.vertx.core.json,JsonArrayTest,testAddDouble,Magic Number,The method contains a magic number: 123d,513
vert.x,io.vertx.core.json,JsonArrayTest,testAddDouble,Magic Number,The method contains a magic number: 2,513
vert.x,io.vertx.core.json,JsonArrayTest,testAddBoolean,Magic Number,The method contains a magic number: 2,522
vert.x,io.vertx.core.json,JsonArrayTest,testAddBoolean,Magic Number,The method contains a magic number: 3,522
vert.x,io.vertx.core.json,JsonArrayTest,testAddJsonObject,Magic Number,The method contains a magic number: 2,533
vert.x,io.vertx.core.json,JsonArrayTest,testAddJsonArray,Magic Number,The method contains a magic number: 2,543
vert.x,io.vertx.core.json,JsonArrayTest,testAddBinary,Magic Number,The method contains a magic number: 10,553
vert.x,io.vertx.core.json,JsonArrayTest,testAddBinary,Magic Number,The method contains a magic number: 2,553
vert.x,io.vertx.core.json,JsonArrayTest,testAddInstant,Magic Number,The method contains a magic number: 2,564
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 123,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 123l,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 1.23f,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 1.23d,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 10,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 123,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 123l,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 2,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 1.23f,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 3,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 1.23d,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 4,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 5,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 6,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 6,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 7,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 7,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 8,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 9,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddObject,Magic Number,The method contains a magic number: 123,575
vert.x,io.vertx.core.json,JsonArrayTest,testAddAllJsonArray,Magic Number,The method contains a magic number: 48,624
vert.x,io.vertx.core.json,JsonArrayTest,testAddAllJsonArray,Magic Number,The method contains a magic number: 2,624
vert.x,io.vertx.core.json,JsonArrayTest,testAddAllJsonArray,Magic Number,The method contains a magic number: 3,624
vert.x,io.vertx.core.json,JsonArrayTest,testAddAllJsonArray,Magic Number,The method contains a magic number: 4,624
vert.x,io.vertx.core.json,JsonArrayTest,testContains,Magic Number,The method contains a magic number: 123,652
vert.x,io.vertx.core.json,JsonArrayTest,testContains,Magic Number,The method contains a magic number: 321,652
vert.x,io.vertx.core.json,JsonArrayTest,testContains,Magic Number,The method contains a magic number: 123,652
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveByObject,Magic Number,The method contains a magic number: 123,673
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveByObject,Magic Number,The method contains a magic number: 3,673
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveByObject,Magic Number,The method contains a magic number: 2,673
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveByObject,Magic Number,The method contains a magic number: 123,673
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveByPos,Magic Number,The method contains a magic number: 123,704
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveByPos,Magic Number,The method contains a magic number: 3,704
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveByPos,Magic Number,The method contains a magic number: 2,704
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveByPos,Magic Number,The method contains a magic number: 123,704
vert.x,io.vertx.core.json,JsonArrayTest,testSize,Magic Number,The method contains a magic number: 123,718
vert.x,io.vertx.core.json,JsonArrayTest,testSize,Magic Number,The method contains a magic number: 3,718
vert.x,io.vertx.core.json,JsonArrayTest,testClear,Magic Number,The method contains a magic number: 123,726
vert.x,io.vertx.core.json,JsonArrayTest,testClear,Magic Number,The method contains a magic number: 3,726
vert.x,io.vertx.core.json,JsonArrayTest,testIterator,Magic Number,The method contains a magic number: 123,737
vert.x,io.vertx.core.json,JsonArrayTest,testIterator,Magic Number,The method contains a magic number: 123,737
vert.x,io.vertx.core.json,JsonArrayTest,testIterator,Magic Number,The method contains a magic number: 2,737
vert.x,io.vertx.core.json,JsonArrayTest,testStream,Magic Number,The method contains a magic number: 123,759
vert.x,io.vertx.core.json,JsonArrayTest,testStream,Magic Number,The method contains a magic number: 123,759
vert.x,io.vertx.core.json,JsonArrayTest,testCopy,Magic Number,The method contains a magic number: 123,779
vert.x,io.vertx.core.json,JsonArrayTest,testCopy,Magic Number,The method contains a magic number: 3,779
vert.x,io.vertx.core.json,JsonArrayTest,testCopy,Magic Number,The method contains a magic number: 4,779
vert.x,io.vertx.core.json,JsonArrayTest,testCopy,Magic Number,The method contains a magic number: 123,779
vert.x,io.vertx.core.json,JsonArrayTest,testCopy,Magic Number,The method contains a magic number: 2,779
vert.x,io.vertx.core.json,JsonArrayTest,testCopy,Magic Number,The method contains a magic number: 2,779
vert.x,io.vertx.core.json,JsonArrayTest,testCopy,Magic Number,The method contains a magic number: 4,779
vert.x,io.vertx.core.json,JsonArrayTest,testCopy,Magic Number,The method contains a magic number: 5,779
vert.x,io.vertx.core.json,JsonArrayTest,testInvalidValsOnCopy1,Empty catch clause,The method has an empty catch block.,801
vert.x,io.vertx.core.json,JsonArrayTest,testInvalidValsOnCopy2,Empty catch clause,The method has an empty catch block.,816
vert.x,io.vertx.core.json,JsonArrayTest,testInvalidValsOnCopy3,Empty catch clause,The method has an empty catch block.,831
vert.x,io.vertx.core.json,JsonArrayTest,testToString,Magic Number,The method contains a magic number: 123,853
vert.x,io.vertx.core.json,JsonArrayTest,testGetList,Magic Number,The method contains a magic number: 123,859
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromList,Magic Number,The method contains a magic number: 123,872
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromList,Magic Number,The method contains a magic number: 123,872
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListCharSequence,Magic Number,The method contains a magic number: 123,883
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListCharSequence,Magic Number,The method contains a magic number: 123,883
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListCharSequence,Magic Number,The method contains a magic number: 2,883
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedJsonObject,Magic Number,The method contains a magic number: 123,896
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedJsonObject,Magic Number,The method contains a magic number: 123,896
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedJsonObject,Magic Number,The method contains a magic number: 2,896
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedMap,Magic Number,The method contains a magic number: 123,910
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedMap,Magic Number,The method contains a magic number: 123,910
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedMap,Magic Number,The method contains a magic number: 2,910
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedJsonArray,Magic Number,The method contains a magic number: 123,926
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedJsonArray,Magic Number,The method contains a magic number: 123,926
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedJsonArray,Magic Number,The method contains a magic number: 2,926
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedList,Magic Number,The method contains a magic number: 123,940
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedList,Magic Number,The method contains a magic number: 123,940
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromListNestedList,Magic Number,The method contains a magic number: 2,940
vert.x,io.vertx.core.json,JsonArrayTest,testCreateFromBuffer,Magic Number,The method contains a magic number: 123,957
vert.x,io.vertx.core.json,JsonArrayTest,testClusterSerializable,Magic Number,The method contains a magic number: 123,966
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3L,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3L,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 4,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 4,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3L,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 3L,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 4,976
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayEquality,Magic Number,The method contains a magic number: 4,976
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveMethodReturnedObject,Magic Number,The method contains a magic number: 2,1002
vert.x,io.vertx.core.json,JsonArrayTest,testRemoveMethodReturnedObject,Magic Number,The method contains a magic number: 2.0,1002
vert.x,io.vertx.core.json,JsonArrayTest,testInvalidConstruction,Empty catch clause,The method has an empty catch block.,1027
vert.x,io.vertx.core.json,JsonArrayTest,testInvalidConstruction,Empty catch clause,The method has an empty catch block.,1027
vert.x,io.vertx.core.json,JsonArrayTest,testInvalidConstruction,Empty catch clause,The method has an empty catch block.,1027
vert.x,io.vertx.core.json,JsonArrayTest,testSetEnum,Empty catch clause,The method has an empty catch block.,1046
vert.x,io.vertx.core.json,JsonArrayTest,testSetString,Empty catch clause,The method has an empty catch block.,1060
vert.x,io.vertx.core.json,JsonArrayTest,testSetCharSequence,Empty catch clause,The method has an empty catch block.,1074
vert.x,io.vertx.core.json,JsonArrayTest,testSetInteger,Empty catch clause,The method has an empty catch block.,1088
vert.x,io.vertx.core.json,JsonArrayTest,testSetInteger,Magic Number,The method contains a magic number: 123,1088
vert.x,io.vertx.core.json,JsonArrayTest,testSetInteger,Magic Number,The method contains a magic number: 123,1088
vert.x,io.vertx.core.json,JsonArrayTest,testSetInteger,Magic Number,The method contains a magic number: 123,1088
vert.x,io.vertx.core.json,JsonArrayTest,testSetLong,Empty catch clause,The method has an empty catch block.,1102
vert.x,io.vertx.core.json,JsonArrayTest,testSetLong,Magic Number,The method contains a magic number: 123l,1102
vert.x,io.vertx.core.json,JsonArrayTest,testSetLong,Magic Number,The method contains a magic number: 123l,1102
vert.x,io.vertx.core.json,JsonArrayTest,testSetLong,Magic Number,The method contains a magic number: 123,1102
vert.x,io.vertx.core.json,JsonArrayTest,testSetFloat,Empty catch clause,The method has an empty catch block.,1116
vert.x,io.vertx.core.json,JsonArrayTest,testSetFloat,Magic Number,The method contains a magic number: 123f,1116
vert.x,io.vertx.core.json,JsonArrayTest,testSetFloat,Magic Number,The method contains a magic number: 123f,1116
vert.x,io.vertx.core.json,JsonArrayTest,testSetFloat,Magic Number,The method contains a magic number: 123,1116
vert.x,io.vertx.core.json,JsonArrayTest,testSetDouble,Empty catch clause,The method has an empty catch block.,1130
vert.x,io.vertx.core.json,JsonArrayTest,testSetDouble,Magic Number,The method contains a magic number: 123d,1130
vert.x,io.vertx.core.json,JsonArrayTest,testSetDouble,Magic Number,The method contains a magic number: 123d,1130
vert.x,io.vertx.core.json,JsonArrayTest,testSetDouble,Magic Number,The method contains a magic number: 123,1130
vert.x,io.vertx.core.json,JsonArrayTest,testSetBoolean,Empty catch clause,The method has an empty catch block.,1144
vert.x,io.vertx.core.json,JsonArrayTest,testSetJsonObject,Empty catch clause,The method has an empty catch block.,1158
vert.x,io.vertx.core.json,JsonArrayTest,testSetJsonArray,Empty catch clause,The method has an empty catch block.,1173
vert.x,io.vertx.core.json,JsonArrayTest,testSetBinary,Empty catch clause,The method has an empty catch block.,1188
vert.x,io.vertx.core.json,JsonArrayTest,testSetBinary,Magic Number,The method contains a magic number: 10,1188
vert.x,io.vertx.core.json,JsonArrayTest,testSetInstant,Empty catch clause,The method has an empty catch block.,1203
vert.x,io.vertx.core.json,JsonArrayTest,testSetObject,Magic Number,The method contains a magic number: 123,1218
vert.x,io.vertx.core.json,JsonArrayTest,testSetNull,Empty catch clause,The method has an empty catch block.,1241
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 2,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 3,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 3,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 2,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 3,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 2,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 3,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 4,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 4,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 4,1255
vert.x,io.vertx.core.json,JsonArrayTest,testAddWithPos,Magic Number,The method contains a magic number: 3,1255
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Long Statement,The length of the statement "JsonArray numbers=new JsonArray().add(new BigDecimal("124567890.0987654321")).add(new BigInteger("1234567890123456789012345678901234567890")).add((byte)0x0a).add(Math.PI).add((float)Math.PI).add(42).add(1234567890123456789L).add(Short.MAX_VALUE);" is 246.,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Long Statement,The length of the statement "assertEquals("[124567890.0987654321`1234567890123456789012345678901234567890`10`3.141592653589793`3.1415927`42`1234567890123456789`32767]"`numbers.encode());" is 157.,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 0x0a,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 42,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 1234567890123456789L,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 2,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 3,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 4,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 5,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 6,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 7,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 2,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 3,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 4,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 5,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 6,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 7,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 42000,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 42000,1331
vert.x,io.vertx.core.json,JsonArrayTest,testNumber,Magic Number,The method contains a magic number: 42000,1331
vert.x,io.vertx.core.json,JsonArrayTest,testStreamRawVSJSON,Long Statement,The length of the statement "List<?> rawData=(List<?>)arr.getList().stream().peek(t -> assertTrue(t instanceof TimeUnit)).collect(Collectors.toList());" is 122.,1383
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayOfArgs,Magic Number,The method contains a magic number: 2,1411
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayOfArgs,Magic Number,The method contains a magic number: 3,1411
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayOfArgs,Magic Number,The method contains a magic number: 4,1411
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayOfArgs,Magic Number,The method contains a magic number: 5,1411
vert.x,io.vertx.core.json,JsonArrayTest,testJsonArrayOfArgs,Magic Number,The method contains a magic number: 6,1411
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObject,Long Statement,The length of the statement "String expected="{\"mystr\":\"foo\"`\"myint\":123`\"mylong\":1234`\"myfloat\":1.23`\"mydouble\":2.34`\"" + "myboolean\":true`\"mybyte\":255`\"mybinary\":\"" + strBytes + "\"`\"mybuffer\":\""+ strBytes+ "\"`\"myinstant\":\""+ ISO_INSTANT.format(now)+ "\"`\"mynull\":null`\"myobj\":{\"foo\":\"bar\"}`\"myarr\":[\"foo\"`123]}";" is 324.,75
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObject,Magic Number,The method contains a magic number: 123,75
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObject,Magic Number,The method contains a magic number: 1234l,75
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObject,Magic Number,The method contains a magic number: 1.23f,75
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObject,Magic Number,The method contains a magic number: 2.34d,75
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObject,Magic Number,The method contains a magic number: 255,75
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObject,Magic Number,The method contains a magic number: 10,75
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObject,Magic Number,The method contains a magic number: 123,75
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArray,Long Statement,The length of the statement "String expected="[\"foo\"`123`1234`1.23`2.34`true`124`\"" + strBytes + "\"`\""+ strBytes+ "\"`null`{\"foo\":\"bar\"}`[\"foo\"`123]]";" is 133.,100
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArray,Magic Number,The method contains a magic number: 123,100
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArray,Magic Number,The method contains a magic number: 1234L,100
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArray,Magic Number,The method contains a magic number: 1.23f,100
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArray,Magic Number,The method contains a magic number: 2.34d,100
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArray,Magic Number,The method contains a magic number: 124,100
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArray,Magic Number,The method contains a magic number: 10,100
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArray,Magic Number,The method contains a magic number: 123,100
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectToBuffer,Long Statement,The length of the statement "Buffer expected=Buffer.buffer("{\"mystr\":\"foo\"`\"myint\":123`\"mylong\":1234`\"myfloat\":1.23`\"mydouble\":2.34`\"" + "myboolean\":true`\"mybinary\":\"" + strBytes + "\"`\"mybuffer\":\""+ strBytes+ "\"`\"myinstant\":\""+ ISO_INSTANT.format(now)+ "\"`\"mynull\":null`\"myobj\":{\"foo\":\"bar\"}`\"myarr\":[\"foo\"`123]}"`"UTF-8");" is 332.,122
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectToBuffer,Magic Number,The method contains a magic number: 123,122
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectToBuffer,Magic Number,The method contains a magic number: 1234l,122
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectToBuffer,Magic Number,The method contains a magic number: 1.23f,122
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectToBuffer,Magic Number,The method contains a magic number: 2.34d,122
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectToBuffer,Magic Number,The method contains a magic number: 10,122
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectToBuffer,Magic Number,The method contains a magic number: 123,122
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayToBuffer,Long Statement,The length of the statement "Buffer expected=Buffer.buffer("[\"foo\"`123`1234`1.23`2.34`true`\"" + strBytes + "\"`\""+ strBytes+ "\"`null`{\"foo\":\"bar\"}`[\"foo\"`123]]"`"UTF-8");" is 152.,148
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayToBuffer,Magic Number,The method contains a magic number: 123,148
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayToBuffer,Magic Number,The method contains a magic number: 1234l,148
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayToBuffer,Magic Number,The method contains a magic number: 1.23f,148
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayToBuffer,Magic Number,The method contains a magic number: 2.34d,148
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayToBuffer,Magic Number,The method contains a magic number: 10,148
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayToBuffer,Magic Number,The method contains a magic number: 123,148
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectPrettily,Long Statement,The length of the statement "String expected="{" + Utils.LINE_SEPARATOR + " \"mystr\" : \"foo\"`"+ Utils.LINE_SEPARATOR+ " \"myint\" : 123`"+ Utils.LINE_SEPARATOR+ " \"mylong\" : 1234`"+ Utils.LINE_SEPARATOR+ " \"myfloat\" : 1.23`"+ Utils.LINE_SEPARATOR+ " \"mydouble\" : 2.34`"+ Utils.LINE_SEPARATOR+ " \"myboolean\" : true`"+ Utils.LINE_SEPARATOR+ " \"mybinary\" : \""+ strBytes+ "\"`"+ Utils.LINE_SEPARATOR+ " \"mybuffer\" : \""+ strBytes+ "\"`"+ Utils.LINE_SEPARATOR+ " \"myinstant\" : \""+ strInstant+ "\"`"+ Utils.LINE_SEPARATOR+ " \"myobj\" : {"+ Utils.LINE_SEPARATOR+ " \"foo\" : \"bar\""+ Utils.LINE_SEPARATOR+ " }`"+ Utils.LINE_SEPARATOR+ " \"myarr\" : [ \"foo\"` 123 ]"+ Utils.LINE_SEPARATOR+ "}";" is 679.,170
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectPrettily,Magic Number,The method contains a magic number: 123,170
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectPrettily,Magic Number,The method contains a magic number: 1234l,170
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectPrettily,Magic Number,The method contains a magic number: 1.23f,170
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectPrettily,Magic Number,The method contains a magic number: 2.34d,170
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectPrettily,Magic Number,The method contains a magic number: 10,170
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonObjectPrettily,Magic Number,The method contains a magic number: 123,170
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayPrettily,Long Statement,The length of the statement "String expected="[ \"foo\"` 123` 1234` 1.23` 2.34` true` \"" + strBytes + "\"` \""+ strBytes+ "\"` null` {"+ Utils.LINE_SEPARATOR+ " \"foo\" : \"bar\""+ Utils.LINE_SEPARATOR+ "}` [ \"foo\"` 123 ] ]";" is 199.,207
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayPrettily,Magic Number,The method contains a magic number: 123,207
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayPrettily,Magic Number,The method contains a magic number: 1234l,207
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayPrettily,Magic Number,The method contains a magic number: 1.23f,207
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayPrettily,Magic Number,The method contains a magic number: 2.34d,207
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayPrettily,Magic Number,The method contains a magic number: 10,207
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeJsonArrayPrettily,Magic Number,The method contains a magic number: 123,207
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObject,Long Statement,The length of the statement "String json="{\"mystr\":\"foo\"`\"myint\":123`\"mylong\":1234`\"myfloat\":1.23`\"mydouble\":2.34`\"" + "myboolean\":true`\"mybyte\":124`\"mybinary\":\"" + strBytes + "\"`\"mybuffer\":\""+ strBytes+ "\"`\"myinstant\":\""+ strInstant+ "\"`\"mynull\":null`\"myobj\":{\"foo\":\"bar\"}`\"myarr\":[\"foo\"`123]}";" is 307.,230
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObject,Magic Number,The method contains a magic number: 10,230
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObject,Magic Number,The method contains a magic number: 123,230
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObject,Magic Number,The method contains a magic number: 1234,230
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObject,Magic Number,The method contains a magic number: 1.23f,230
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObject,Magic Number,The method contains a magic number: 2.34d,230
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObject,Magic Number,The method contains a magic number: 124,230
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObject,Magic Number,The method contains a magic number: 123,230
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Long Statement,The length of the statement "String json="[\"foo\"`123`1234`1.23`2.34`true`124`\"" + strBytes + "\"`\""+ strBytes+ "\"`\""+ strInstant+ "\"`null`{\"foo\":\"bar\"}`[\"foo\"`123]]";" is 150.,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 10,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 123,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 1234l,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 2,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 1.23f,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 3,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 2.34d,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 4,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 5,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 124,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 6,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 7,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 7,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 8,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 8,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 9,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 9,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 10,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 11,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 12,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArray,Magic Number,The method contains a magic number: 123,261
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObjectWithComments,Long Statement,The length of the statement "String jsonWithComments="// single line comment\n" + "/*\n" + " This is a multi \n"+ " line comment\n"+ "*/\n"+ "{\n"+ "// another single line comment this time inside the JSON object itself\n"+ " \"foo\": \"bar\" // and a single line comment at end of line \n"+ "/*\n"+ " This is a another multi \n"+ " line comment this time inside the JSON object itself\n"+ "*/\n"+ "}";" is 373.,291
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArrayWithComments,Long Statement,The length of the statement "String jsonWithComments="// single line comment\n" + "/*\n" + " This is a multi \n"+ " line comment\n"+ "*/\n"+ "[\n"+ "// another single line comment this time inside the JSON array itself\n"+ " \"foo\"` \"bar\" // and a single line comment at end of line \n"+ "/*\n"+ " This is a another multi \n"+ " line comment this time inside the JSON array itself\n"+ "*/\n"+ "]";" is 371.,312
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObjectWithInvalidJson,Empty catch clause,The method has an empty catch block.,332
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonObjectWithInvalidJson,Empty catch clause,The method has an empty catch block.,332
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArrayWithInvalidJson,Empty catch clause,The method has an empty catch block.,348
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeJsonArrayWithInvalidJson,Empty catch clause,The method has an empty catch block.,348
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeValue,Magic Number,The method contains a magic number: 42,424
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeValue,Magic Number,The method contains a magic number: 42L,424
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeValue,Magic Number,The method contains a magic number: 3.4f,424
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeValue,Magic Number,The method contains a magic number: 3.4d,424
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeValue,Magic Number,The method contains a magic number: 4,424
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeValue,Magic Number,The method contains a magic number: 2,424
vert.x,io.vertx.core.json,JsonCodecTest,testDecodeUnknowContent,Empty catch clause,The method has an empty catch block.,480
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeCollectionState,Empty catch clause,The method has an empty catch block.,511
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeCollectionState,Empty catch clause,The method has an empty catch block.,511
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeCollectionState,Empty catch clause,The method has an empty catch block.,511
vert.x,io.vertx.core.json,JsonCodecTest,testEncodeCollectionState,Empty catch clause,The method has an empty catch block.,511
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Empty catch clause,The method has an empty catch block.,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Empty catch clause,The method has an empty catch block.,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Magic Number,The method contains a magic number: 123,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Magic Number,The method contains a magic number: 123,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Magic Number,The method contains a magic number: 123L,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Magic Number,The method contains a magic number: 123,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Magic Number,The method contains a magic number: 123d,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Magic Number,The method contains a magic number: 123,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Magic Number,The method contains a magic number: 123f,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetInteger,Magic Number,The method contains a magic number: 123,47
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Empty catch clause,The method has an empty catch block.,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Empty catch clause,The method has an empty catch block.,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 321,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123l,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 321,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123d,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 321,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123f,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 123,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 321,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 321,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 321,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 321,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetIntegerDefault,Magic Number,The method contains a magic number: 321,82
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Empty catch clause,The method has an empty catch block.,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Empty catch clause,The method has an empty catch block.,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Magic Number,The method contains a magic number: 123l,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Magic Number,The method contains a magic number: 123l,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Magic Number,The method contains a magic number: 123,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Magic Number,The method contains a magic number: 123l,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Magic Number,The method contains a magic number: 123d,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Magic Number,The method contains a magic number: 123l,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Magic Number,The method contains a magic number: 123f,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLong,Magic Number,The method contains a magic number: 123l,120
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Empty catch clause,The method has an empty catch block.,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Empty catch clause,The method has an empty catch block.,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 321l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 321l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123d,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 321l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123f,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 123l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 321l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 321l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 321l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 321l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetLongDefault,Magic Number,The method contains a magic number: 321l,155
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Empty catch clause,The method has an empty catch block.,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Empty catch clause,The method has an empty catch block.,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Magic Number,The method contains a magic number: 123f,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Magic Number,The method contains a magic number: 123f,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Magic Number,The method contains a magic number: 123,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Magic Number,The method contains a magic number: 123f,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Magic Number,The method contains a magic number: 123d,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Magic Number,The method contains a magic number: 123f,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Magic Number,The method contains a magic number: 123f,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloat,Magic Number,The method contains a magic number: 123l,193
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Empty catch clause,The method has an empty catch block.,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Empty catch clause,The method has an empty catch block.,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 321f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 321f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123d,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 321f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123l,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 123f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 321f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 321f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 321f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetFloatDefault,Magic Number,The method contains a magic number: 321f,226
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Empty catch clause,The method has an empty catch block.,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Empty catch clause,The method has an empty catch block.,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Magic Number,The method contains a magic number: 123d,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Magic Number,The method contains a magic number: 123d,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Magic Number,The method contains a magic number: 123,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Magic Number,The method contains a magic number: 123d,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Magic Number,The method contains a magic number: 123l,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Magic Number,The method contains a magic number: 123d,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Magic Number,The method contains a magic number: 123f,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDouble,Magic Number,The method contains a magic number: 123d,262
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Empty catch clause,The method has an empty catch block.,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Empty catch clause,The method has an empty catch block.,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 321d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 321d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123f,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 321d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123l,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 123d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 321d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 321d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 321d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetDoubleDefault,Magic Number,The method contains a magic number: 321d,295
vert.x,io.vertx.core.json,JsonObjectTest,testGetString,Empty catch clause,The method has an empty catch block.,331
vert.x,io.vertx.core.json,JsonObjectTest,testGetString,Magic Number,The method contains a magic number: 123,331
vert.x,io.vertx.core.json,JsonObjectTest,testGetStringDefault,Empty catch clause,The method has an empty catch block.,353
vert.x,io.vertx.core.json,JsonObjectTest,testGetStringDefault,Magic Number,The method contains a magic number: 123,353
vert.x,io.vertx.core.json,JsonObjectTest,testGetBoolean,Empty catch clause,The method has an empty catch block.,379
vert.x,io.vertx.core.json,JsonObjectTest,testGetBoolean,Empty catch clause,The method has an empty catch block.,379
vert.x,io.vertx.core.json,JsonObjectTest,testGetBoolean,Magic Number,The method contains a magic number: 123,379
vert.x,io.vertx.core.json,JsonObjectTest,testGetBooleanDefault,Empty catch clause,The method has an empty catch block.,407
vert.x,io.vertx.core.json,JsonObjectTest,testGetBooleanDefault,Empty catch clause,The method has an empty catch block.,407
vert.x,io.vertx.core.json,JsonObjectTest,testGetBooleanDefault,Magic Number,The method contains a magic number: 123,407
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinary,Empty catch clause,The method has an empty catch block.,440
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinary,Empty catch clause,The method has an empty catch block.,440
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinary,Empty catch clause,The method has an empty catch block.,440
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinary,Magic Number,The method contains a magic number: 100,440
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinary,Magic Number,The method contains a magic number: 123,440
vert.x,io.vertx.core.json,JsonObjectTest,testGetBuffer,Empty catch clause,The method has an empty catch block.,480
vert.x,io.vertx.core.json,JsonObjectTest,testGetBuffer,Empty catch clause,The method has an empty catch block.,480
vert.x,io.vertx.core.json,JsonObjectTest,testGetBuffer,Empty catch clause,The method has an empty catch block.,480
vert.x,io.vertx.core.json,JsonObjectTest,testGetBuffer,Magic Number,The method contains a magic number: 100,480
vert.x,io.vertx.core.json,JsonObjectTest,testGetBuffer,Magic Number,The method contains a magic number: 123,480
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstant,Empty catch clause,The method has an empty catch block.,520
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstant,Empty catch clause,The method has an empty catch block.,520
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstant,Empty catch clause,The method has an empty catch block.,520
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstant,Empty catch clause,The method has an empty catch block.,520
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstant,Empty catch clause,The method has an empty catch block.,520
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstant,Magic Number,The method contains a magic number: 123,520
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinaryDefault,Empty catch clause,The method has an empty catch block.,572
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinaryDefault,Empty catch clause,The method has an empty catch block.,572
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinaryDefault,Magic Number,The method contains a magic number: 100,572
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinaryDefault,Magic Number,The method contains a magic number: 100,572
vert.x,io.vertx.core.json,JsonObjectTest,testGetBinaryDefault,Magic Number,The method contains a magic number: 123,572
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstantDefault,Empty catch clause,The method has an empty catch block.,603
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstantDefault,Empty catch clause,The method has an empty catch block.,603
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstantDefault,Empty catch clause,The method has an empty catch block.,603
vert.x,io.vertx.core.json,JsonObjectTest,testGetInstantDefault,Magic Number,The method contains a magic number: 123,603
vert.x,io.vertx.core.json,JsonObjectTest,testGetJsonObject,Empty catch clause,The method has an empty catch block.,643
vert.x,io.vertx.core.json,JsonObjectTest,testGetJsonObject,Empty catch clause,The method has an empty catch block.,643
vert.x,io.vertx.core.json,JsonObjectTest,testGetJsonObjectDefault,Empty catch clause,The method has an empty catch block.,668
vert.x,io.vertx.core.json,JsonObjectTest,testGetJsonObjectDefault,Empty catch clause,The method has an empty catch block.,668
vert.x,io.vertx.core.json,JsonObjectTest,testGetJsonArray,Empty catch clause,The method has an empty catch block.,697
vert.x,io.vertx.core.json,JsonObjectTest,testGetJsonArray,Empty catch clause,The method has an empty catch block.,697
vert.x,io.vertx.core.json,JsonObjectTest,testGetJsonArrayDefault,Empty catch clause,The method has an empty catch block.,722
vert.x,io.vertx.core.json,JsonObjectTest,testGetJsonArrayDefault,Empty catch clause,The method has an empty catch block.,722
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 123,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 123,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 123l,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 123l,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 123f,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 123f,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 123d,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 123d,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValue,Magic Number,The method contains a magic number: 100,751
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123l,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123l,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123l,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123f,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123f,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123f,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123d,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123d,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 123d,797
vert.x,io.vertx.core.json,JsonObjectTest,testGetValueDefault,Magic Number,The method contains a magic number: 100,797
vert.x,io.vertx.core.json,JsonObjectTest,testFieldNames,Magic Number,The method contains a magic number: 123,848
vert.x,io.vertx.core.json,JsonObjectTest,testFieldNames,Magic Number,The method contains a magic number: 3,848
vert.x,io.vertx.core.json,JsonObjectTest,testFieldNames,Magic Number,The method contains a magic number: 2,848
vert.x,io.vertx.core.json,JsonObjectTest,testSize,Magic Number,The method contains a magic number: 123,863
vert.x,io.vertx.core.json,JsonObjectTest,testSize,Magic Number,The method contains a magic number: 2,863
vert.x,io.vertx.core.json,JsonObjectTest,testSize,Magic Number,The method contains a magic number: 3,863
vert.x,io.vertx.core.json,JsonObjectTest,testSize,Magic Number,The method contains a magic number: 2,863
vert.x,io.vertx.core.json,JsonObjectTest,testPutEnum,Empty catch clause,The method has an empty catch block.,882
vert.x,io.vertx.core.json,JsonObjectTest,testPutString,Empty catch clause,The method has an empty catch block.,895
vert.x,io.vertx.core.json,JsonObjectTest,testPutCharSequence,Empty catch clause,The method has an empty catch block.,914
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Empty catch clause,The method has an empty catch block.,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Magic Number,The method contains a magic number: 123,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Magic Number,The method contains a magic number: 123,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Magic Number,The method contains a magic number: 321,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Magic Number,The method contains a magic number: 321,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Magic Number,The method contains a magic number: 123,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Magic Number,The method contains a magic number: 456,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Magic Number,The method contains a magic number: 456,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutInteger,Magic Number,The method contains a magic number: 123,934
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Empty catch clause,The method has an empty catch block.,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Magic Number,The method contains a magic number: 123l,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Magic Number,The method contains a magic number: 123l,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Magic Number,The method contains a magic number: 321l,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Magic Number,The method contains a magic number: 321l,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Magic Number,The method contains a magic number: 123l,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Magic Number,The method contains a magic number: 456l,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Magic Number,The method contains a magic number: 456l,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutLong,Magic Number,The method contains a magic number: 123l,953
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Empty catch clause,The method has an empty catch block.,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Magic Number,The method contains a magic number: 123f,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Magic Number,The method contains a magic number: 123f,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Magic Number,The method contains a magic number: 321f,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Magic Number,The method contains a magic number: 321f,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Magic Number,The method contains a magic number: 123f,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Magic Number,The method contains a magic number: 456f,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Magic Number,The method contains a magic number: 456f,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutFloat,Magic Number,The method contains a magic number: 1.2f,973
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Empty catch clause,The method has an empty catch block.,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Magic Number,The method contains a magic number: 123d,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Magic Number,The method contains a magic number: 123d,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Magic Number,The method contains a magic number: 321d,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Magic Number,The method contains a magic number: 321d,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Magic Number,The method contains a magic number: 123d,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Magic Number,The method contains a magic number: 456d,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Magic Number,The method contains a magic number: 456d,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutDouble,Magic Number,The method contains a magic number: 1.23d,993
vert.x,io.vertx.core.json,JsonObjectTest,testPutBoolean,Empty catch clause,The method has an empty catch block.,1012
vert.x,io.vertx.core.json,JsonObjectTest,testPutJsonObject,Empty catch clause,The method has an empty catch block.,1031
vert.x,io.vertx.core.json,JsonObjectTest,testPutJsonArray,Empty catch clause,The method has an empty catch block.,1053
vert.x,io.vertx.core.json,JsonObjectTest,testPutBinary,Empty catch clause,The method has an empty catch block.,1079
vert.x,io.vertx.core.json,JsonObjectTest,testPutBinary,Magic Number,The method contains a magic number: 100,1079
vert.x,io.vertx.core.json,JsonObjectTest,testPutBinary,Magic Number,The method contains a magic number: 100,1079
vert.x,io.vertx.core.json,JsonObjectTest,testPutBinary,Magic Number,The method contains a magic number: 100,1079
vert.x,io.vertx.core.json,JsonObjectTest,testPutInstant,Empty catch clause,The method has an empty catch block.,1108
vert.x,io.vertx.core.json,JsonObjectTest,testPutNull,Empty catch clause,The method has an empty catch block.,1137
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 123,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 123l,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 1.23f,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 1.23d,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 10,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 123,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 123l,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 1.23f,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 1.23d,1151
vert.x,io.vertx.core.json,JsonObjectTest,testPutValue,Magic Number,The method contains a magic number: 123,1151
vert.x,io.vertx.core.json,JsonObjectTest,testMergeIn1,Magic Number,The method contains a magic number: 2,1199
vert.x,io.vertx.core.json,JsonObjectTest,testMergeInFlat,Magic Number,The method contains a magic number: 32,1232
vert.x,io.vertx.core.json,JsonObjectTest,testMergeInDepth1,Magic Number,The method contains a magic number: 2,1242
vert.x,io.vertx.core.json,JsonObjectTest,testMergeInDepth2,Magic Number,The method contains a magic number: 2,1252
vert.x,io.vertx.core.json,JsonObjectTest,testMergeInDepth2,Magic Number,The method contains a magic number: 2,1252
vert.x,io.vertx.core.json,JsonObjectTest,testMergeInDepth2,Magic Number,The method contains a magic number: 2,1252
vert.x,io.vertx.core.json,JsonObjectTest,testClear,Magic Number,The method contains a magic number: 123,1269
vert.x,io.vertx.core.json,JsonObjectTest,testClear,Magic Number,The method contains a magic number: 2,1269
vert.x,io.vertx.core.json,JsonObjectTest,testIsEmpty,Magic Number,The method contains a magic number: 123,1280
vert.x,io.vertx.core.json,JsonObjectTest,testRemove,Magic Number,The method contains a magic number: 123,1290
vert.x,io.vertx.core.json,JsonObjectTest,testRemove,Magic Number,The method contains a magic number: 123,1290
vert.x,io.vertx.core.json,JsonObjectTest,testIterator,Magic Number,The method contains a magic number: 123,1301
vert.x,io.vertx.core.json,JsonObjectTest,testIterator,Magic Number,The method contains a magic number: 123,1301
vert.x,io.vertx.core.json,JsonObjectTest,testIterator,Magic Number,The method contains a magic number: 2,1301
vert.x,io.vertx.core.json,JsonObjectTest,testStream,Magic Number,The method contains a magic number: 123,1345
vert.x,io.vertx.core.json,JsonObjectTest,testStream,Magic Number,The method contains a magic number: 123,1345
vert.x,io.vertx.core.json,JsonObjectTest,testCopy,Magic Number,The method contains a magic number: 123,1368
vert.x,io.vertx.core.json,JsonObjectTest,testInvalidValsOnCopy1,Empty catch clause,The method has an empty catch block.,1395
vert.x,io.vertx.core.json,JsonObjectTest,testInvalidValsOnCopy2,Empty catch clause,The method has an empty catch block.,1410
vert.x,io.vertx.core.json,JsonObjectTest,testInvalidValsOnCopy3,Empty catch clause,The method has an empty catch block.,1425
vert.x,io.vertx.core.json,JsonObjectTest,testGetMap,Magic Number,The method contains a magic number: 123,1447
vert.x,io.vertx.core.json,JsonObjectTest,testCreateFromMap,Magic Number,The method contains a magic number: 123,1465
vert.x,io.vertx.core.json,JsonObjectTest,testCreateFromMap,Magic Number,The method contains a magic number: 123,1465
vert.x,io.vertx.core.json,JsonObjectTest,testCreateFromBuffer,Magic Number,The method contains a magic number: 123,1476
vert.x,io.vertx.core.json,JsonObjectTest,testCreateFromMapCharSequence,Magic Number,The method contains a magic number: 123,1485
vert.x,io.vertx.core.json,JsonObjectTest,testCreateFromMapCharSequence,Magic Number,The method contains a magic number: 123,1485
vert.x,io.vertx.core.json,JsonObjectTest,testClusterSerializable,Magic Number,The method contains a magic number: 123,1539
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.1D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.1D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.1f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.1f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.1f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.1D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.5D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.5D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.5f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.5f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.5f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4.5D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4f,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 4D,1549
vert.x,io.vertx.core.json,JsonObjectTest,testNumberEquality,Magic Number,The method contains a magic number: 5D,1549
vert.x,io.vertx.core.json,JsonObjectTest,assertNumberEquals,Long Statement,The length of the statement "fail("Was expecting " + value1.getClass().getSimpleName() + ":"+ value1+ " == "+ value2.getClass().getSimpleName()+ ":"+ value2);" is 129.,1579
vert.x,io.vertx.core.json,JsonObjectTest,assertNumberEquals,Long Statement,The length of the statement "fail("Was expecting " + value1.getClass().getSimpleName() + ":"+ value1+ " == "+ value2.getClass().getSimpleName()+ ":"+ value2);" is 129.,1579
vert.x,io.vertx.core.json,JsonObjectTest,assertNumberNotEquals,Long Statement,The length of the statement "fail("Was expecting " + value1.getClass().getSimpleName() + ":"+ value1+ " != "+ value2.getClass().getSimpleName()+ ":"+ value2);" is 129.,1594
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3L,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3L,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 4,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 4,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3L,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 3L,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 4,1603
vert.x,io.vertx.core.json,JsonObjectTest,testJsonObjectEquality,Magic Number,The method contains a magic number: 4,1603
vert.x,io.vertx.core.json,JsonObjectTest,testRemoveMethodReturnedObject,Long Statement,The length of the statement "obj.put("simple"`"bar").put("object"`new JsonObject().put("name"`"vert.x").put("count"`2)).put("array"`new JsonArray().add(1.0).add(2.0));" is 138.,1655
vert.x,io.vertx.core.json,JsonObjectTest,testRemoveMethodReturnedObject,Magic Number,The method contains a magic number: 2,1655
vert.x,io.vertx.core.json,JsonObjectTest,testRemoveMethodReturnedObject,Magic Number,The method contains a magic number: 2.0,1655
vert.x,io.vertx.core.json,JsonObjectTest,testOrder,Magic Number,The method contains a magic number: 100,1677
vert.x,io.vertx.core.json,JsonObjectTest,createJsonObject,Magic Number,The method contains a magic number: 100,1721
vert.x,io.vertx.core.json,JsonObjectTest,testInvalidConstruction,Empty catch clause,The method has an empty catch block.,1734
vert.x,io.vertx.core.json,JsonObjectTest,testInvalidConstruction,Empty catch clause,The method has an empty catch block.,1734
vert.x,io.vertx.core.json,JsonObjectTest,testInvalidConstruction,Empty catch clause,The method has an empty catch block.,1734
vert.x,io.vertx.core.json,JsonObjectTest,testEquals,Magic Number,The method contains a magic number: 2,1753
vert.x,io.vertx.core.json,JsonObjectTest,testNumber,Long Statement,The length of the statement "JsonObject numbers=new JsonObject().put("BigDecimal"`new BigDecimal("124567890.0987654321")).put("BigInteger"`new BigInteger("1234567890123456789012345678901234567890")).put("byte"`(byte)0x0a).put("double"`Math.PI).put("float"`(float)Math.PI).put("int"`42).put("long"`1234567890123456789L).put("short"`Short.MAX_VALUE);" is 319.,1826
vert.x,io.vertx.core.json,JsonObjectTest,testNumber,Long Statement,The length of the statement "assertEquals("{\"BigDecimal\":124567890.0987654321`\"BigInteger\":1234567890123456789012345678901234567890`\"byte\":10`\"double\":3.141592653589793`\"float\":3.1415927`\"int\":42`\"long\":1234567890123456789`\"short\":32767}"`numbers.encode());" is 244.,1826
vert.x,io.vertx.core.json,JsonObjectTest,testNumber,Magic Number,The method contains a magic number: 0x0a,1826
vert.x,io.vertx.core.json,JsonObjectTest,testNumber,Magic Number,The method contains a magic number: 42,1826
vert.x,io.vertx.core.json,JsonObjectTest,testNumber,Magic Number,The method contains a magic number: 1234567890123456789L,1826
vert.x,io.vertx.core.json,JsonObjectTest,testNumber,Magic Number,The method contains a magic number: 42000,1826
vert.x,io.vertx.core.json,JsonObjectTest,testNumber,Magic Number,The method contains a magic number: 42000,1826
vert.x,io.vertx.core.json,JsonObjectTest,testNumber,Magic Number,The method contains a magic number: 42000,1826
vert.x,io.vertx.core.json,JsonObjectTest,testNumberDefaults,Long Statement,The length of the statement "for ( Number n : new Number[]{new BigDecimal("124567890.0987654321")`new BigInteger("1234567890123456789012345678901234567890")`(byte)0x0a`Math.PI`(float)Math.PI`42`1234567890123456789L`Short.MAX_VALUE}) {" is 205.,1878
vert.x,io.vertx.core.json,JsonObjectTest,testNumberDefaults,Magic Number,The method contains a magic number: 0x0a,1878
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Long Statement,The length of the statement "assertEquals("{\"a\":5`\"b\":\"obj1\"`\"c\":{\"x\":\"1\"`\"y\":2}`\"d\":[" + "{\"a\":-1`\"b\":\"obj0\"`\"c\":{\"z\":[7`8]}`\"d\":[]`\"e\":[9]}" + "]`\"e\":[3]}"`jsonStr1);" is 171.,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 7,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 8,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 9,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 5,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 2,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 3,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 5,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 2,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 3,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 7,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 8,41
vert.x,io.vertx.core.json,JsonPOJOMapperTest,testSerialization,Magic Number,The method contains a magic number: 9,41
vert.x,io.vertx.core.json.impl,JsonUtil,wrapJsonValue,Complex Method,Cyclomatic complexity of the method is 8,52
vert.x,io.vertx.core.json.impl,JsonUtil,deepCopy,Complex Method,Cyclomatic complexity of the method is 13,92
vert.x,io.vertx.core.json.jackson,JacksonCodec,fromValue,Long Statement,The length of the statement "throw new DecodeException("Mapping " + toValueType.getName() + " is not available without Jackson Databind on the classpath");" is 126.,82
vert.x,io.vertx.core.json.jackson,JacksonCodec,fromValue,Long Statement,The length of the statement "throw new DecodeException("Mapping " + type.getType().getTypeName() + " is not available without Jackson Databind on the classpath");" is 133.,87
vert.x,io.vertx.core.json.jackson,JacksonCodec,parseAny,Complex Method,Cyclomatic complexity of the method is 9,191
vert.x,io.vertx.core.json.jackson,JacksonCodec,parseAny,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@46ba5130,191
vert.x,io.vertx.core.json.jackson,JacksonCodec,parseObject,Magic Number,The method contains a magic number: 2,213
vert.x,io.vertx.core.json.jackson,JacksonCodec,parseObject,Magic Number,The method contains a magic number: 2,213
vert.x,io.vertx.core.json.jackson,JacksonCodec,parseObject,Magic Number,The method contains a magic number: 2,213
vert.x,io.vertx.core.json.jackson,JacksonCodec,close,Empty catch clause,The method has an empty catch block.,263
vert.x,io.vertx.core.json.jackson,JacksonCodec,encodeJson,Complex Method,Cyclomatic complexity of the method is 23,271
vert.x,io.vertx.core.json.jackson,JacksonCodec,encodeJson,Long Statement,The length of the statement "throw new EncodeException("Mapping " + json.getClass().getName() + " is not available without Jackson Databind on the classpath");" is 130.,271
vert.x,io.vertx.core.json.jackson,JacksonCodec,cast,Complex Method,Cyclomatic complexity of the method is 23,348
vert.x,io.vertx.core.json.pointer.impl,JsonPointerImpl,parse,Long Statement,The length of the statement "return Arrays.stream(pointer.split("\\/"`-1)).skip(1).map(this::unescape).collect(Collectors.toCollection(ArrayList::new));" is 123.,61
vert.x,io.vertx.core.json.pointer.impl,JsonPointerImpl,isLocalPointer,Long Statement,The length of the statement "return startingUri == null || startingUri.getSchemeSpecificPart() == null || startingUri.getSchemeSpecificPart().isEmpty();" is 123.,90
vert.x,io.vertx.core.json.pointer.impl,JsonPointerImpl,isParent,Long Statement,The length of the statement "return child != null && (child.getURIWithoutFragment() == null && this.getURIWithoutFragment() == null || child.getURIWithoutFragment().equals(this.getURIWithoutFragment())) && decodedTokens.size() < child.decodedTokens.size() && IntStream.range(0`decodedTokens.size()).mapToObj(i -> this.decodedTokens.get(i).equals(child.decodedTokens.get(i))).reduce(Boolean::logicalAnd).orElse(true);" is 387.,95
vert.x,io.vertx.core.json.pointer.impl,JsonPointerImpl,toURI,Long Statement,The length of the statement "else return replaceFragment(this.startingUri`"/" + String.join("/"`decodedTokens.stream().map(this::escape).collect(Collectors.toList())));" is 139.,114
vert.x,io.vertx.core.json.pointer.impl,JsonPointerImpl,tracedQuery,Empty catch clause,The method has an empty catch block.,201
vert.x,io.vertx.core.json.pointer.impl,JsonPointerImpl,walkTillLastElement,Complex Method,Cyclomatic complexity of the method is 8,237
vert.x,io.vertx.core.json.pointer.impl,JsonPointerIteratorImpl,getArrayElement,Empty catch clause,The method has an empty catch block.,58
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testJsonObjectQuerying,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,116
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testJsonObjectQueryingDefaultValue,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,128
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testJsonArrayQuerying,Long Statement,The length of the statement "array.add(new JsonObject().put("hello"`new JsonObject().put("world"`2).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong")));" is 163.,140
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testJsonArrayQuerying,Long Statement,The length of the statement "array.add(new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong")));" is 163.,140
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testJsonArrayQuerying,Magic Number,The method contains a magic number: 2,140
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testJsonArrayQueryingOrDefault,Long Statement,The length of the statement "array.add(new JsonObject().put("hello"`new JsonObject().put("world"`2).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong")));" is 163.,159
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testJsonArrayQueryingOrDefault,Long Statement,The length of the statement "array.add(new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong")));" is 163.,159
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testJsonArrayQueryingOrDefault,Magic Number,The method contains a magic number: 2,159
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testRootPointer,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`2).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,177
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testRootPointer,Long Statement,The length of the statement "array.add(new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong")));" is 163.,177
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testRootPointer,Magic Number,The method contains a magic number: 2,177
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWrongUsageOfDashForQuerying,Long Statement,The length of the statement "array.add(new JsonObject().put("hello"`new JsonObject().put("world"`2).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong")));" is 163.,208
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWrongUsageOfDashForQuerying,Long Statement,The length of the statement "array.add(new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong")));" is 163.,208
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWrongUsageOfDashForQuerying,Magic Number,The method contains a magic number: 2,208
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testRFCExample,Long Statement,The length of the statement "JsonObject obj=new JsonObject(" {\n" + " \"foo\": [\"bar\"` \"baz\"]`\n" + " \"\": 0`\n"+ " \"a/b\": 1`\n"+ " \"c%d\": 2`\n"+ " \"e^f\": 3`\n"+ " \"g|h\": 4`\n"+ " \"i\\\\j\": 5`\n"+ " \"k\\\"l\": 6`\n"+ " \" \": 7`\n"+ " \"m~n\": 8\n"+ " }");" is 243.,244
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWriteJsonObject,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,273
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWriteWithCreateOnMissingJsonObject,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,286
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWriteJsonObjectOverride,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,299
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWriteJsonArray,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`new JsonObject()).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 182.,312
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWriteJsonArrayAppend,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,329
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testWriteJsonArraySubstitute,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,346
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testNestedWriteJsonArraySubstitute,Long Statement,The length of the statement "JsonObject obj=new JsonObject().put("hello"`new JsonObject().put("world"`1).put("worl"`"wrong")).put("helo"`new JsonObject().put("world"`"wrong").put("worl"`"wrong"));" is 167.,363
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testTracedQuery,Magic Number,The method contains a magic number: 4,405
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testTracedQuery,Magic Number,The method contains a magic number: 2,405
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testTracedQuery,Magic Number,The method contains a magic number: 3,405
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testNotFoundTracedQuery,Magic Number,The method contains a magic number: 3,437
vert.x,io.vertx.core.json.pointer.impl,JsonPointerTest,testNotFoundTracedQuery,Magic Number,The method contains a magic number: 2,437
vert.x,io.vertx.core.logging,JULLogDelegateFactory,loadConfig,Empty catch clause,The method has an empty catch block.,29
vert.x,io.vertx.core.logging,JULLogDelegateFactory,loadConfig,Long Statement,The length of the statement "try (InputStream is=JULLogDelegateFactory.class.getClassLoader().getResourceAsStream("vertx-default-jul-logging.properties")){" is 126.,29
vert.x,io.vertx.core.net.impl,ChannelProvider,connect,Long Parameter List,The method has 5 parameters. ,87
vert.x,io.vertx.core.net.impl,ChannelProvider,connect,Long Parameter List,The method has 7 parameters. ,93
vert.x,io.vertx.core.net.impl,ChannelProvider,initSSL,Long Parameter List,The method has 7 parameters. ,107
vert.x,io.vertx.core.net.impl,ChannelProvider,handleConnect,Long Parameter List,The method has 7 parameters. ,143
vert.x,io.vertx.core.net.impl,ChannelProvider,handleProxyConnect,Long Parameter List,The method has 7 parameters. ,178
vert.x,io.vertx.core.net.impl,ChannelProvider,handleProxyConnect,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@342ddf5a,178
vert.x,io.vertx.core.net.impl,CleanableNetClient,connectInternal,Long Parameter List,The method has 10 parameters. ,95
vert.x,io.vertx.core.net.impl,CleanableNetClient,connectInternal,Long Statement,The length of the statement "client.connectInternal(proxyOptions`remoteAddress`peerAddress`serverName`ssl`useAlpn`registerWriteHandlers`connectHandler`context`remainingAttempts);" is 149.,95
vert.x,io.vertx.core.net.impl,ConnectionBase,doSetWriteQueueMaxSize,Magic Number,The method contains a magic number: 2,312
vert.x,io.vertx.core.net.impl,ConnectionBase,doReportBytesRead,Long Identifier,The length of the field METRICS_REPORTED_BYTES_HIGH_MASK is 32.,417
vert.x,io.vertx.core.net.impl,ConnectionBase,doReportBytesRead,Long Identifier,The length of the field METRICS_REPORTED_BYTES_LOW_MASK is 31.,417
vert.x,io.vertx.core.net.impl,ConnectionBase,reportBytesRead,Long Identifier,The length of the field METRICS_REPORTED_BYTES_HIGH_MASK is 32.,436
vert.x,io.vertx.core.net.impl,ConnectionBase,reportBytesRead,Long Identifier,The length of the field METRICS_REPORTED_BYTES_LOW_MASK is 31.,436
vert.x,io.vertx.core.net.impl,ConnectionBase,reportsBytesWritten,Long Identifier,The length of the field METRICS_REPORTED_BYTES_HIGH_MASK is 32.,453
vert.x,io.vertx.core.net.impl,ConnectionBase,reportsBytesWritten,Long Identifier,The length of the field METRICS_REPORTED_BYTES_LOW_MASK is 31.,453
vert.x,io.vertx.core.net.impl,ConnectionBase,reportBytesWritten,Long Identifier,The length of the field METRICS_REPORTED_BYTES_HIGH_MASK is 32.,468
vert.x,io.vertx.core.net.impl,ConnectionBase,reportBytesWritten,Long Identifier,The length of the field METRICS_REPORTED_BYTES_LOW_MASK is 31.,468
vert.x,io.vertx.core.net.impl,ConnectionBase,sendFile,Magic Number,The method contains a magic number: 8192,540
vert.x,io.vertx.core.net.impl,ConnectionBase,remoteAddress,Complex Conditional,The conditional expression address != null && address.isDomainSocket() && address.path().isEmpty() is complex.,625
vert.x,io.vertx.core.net.impl,ConnectionBase,localAddress,Complex Conditional,The conditional expression address != null && address.isDomainSocket() && address.path().isEmpty() is complex.,662
vert.x,io.vertx.core.net.impl,HAProxyMessageCompletionHandler,canUseProxyProtocol,Long Statement,The length of the statement "if (requested && !proxyProtocolCodecFound) log.warn("Proxy protocol support could not be enabled. Make sure that netty-codec-haproxy is included in your classpath");" is 165.,35
vert.x,io.vertx.core.net.impl,HAProxyMessageCompletionHandler,decode,Long Identifier,The length of the field UNSUPPORTED_PROTOCOL_EXCEPTION is 30.,48
vert.x,io.vertx.core.net.impl,HAProxyMessageCompletionHandler,decode,Long Statement,The length of the statement "ctx.channel().attr(ConnectionBase.REMOTE_ADDRESS_OVERRIDE).set(createAddress(protocol`msg.sourceAddress()`msg.sourcePort()));" is 125.,48
vert.x,io.vertx.core.net.impl,HAProxyMessageCompletionHandler,decode,Long Statement,The length of the statement "ctx.channel().attr(ConnectionBase.LOCAL_ADDRESS_OVERRIDE).set(createAddress(protocol`msg.destinationAddress()`msg.destinationPort()));" is 134.,48
vert.x,io.vertx.core.net.impl,HAProxyMessageCompletionHandler,createAddress,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@53ff721a,95
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseIPv4Address,Complex Conditional,The conditional expression i > 0 && from < to && s.charAt(from++) != '.' is complex.,23
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseIPv4Address,Magic Number,The method contains a magic number: 4,23
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Complex Method,Cyclomatic complexity of the method is 14,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 2,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 3,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 4,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 5,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 6,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 7,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 8,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 9,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 10,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 10,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseDecOctet,Magic Number,The method contains a magic number: 256,36
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseIPLiteral,Magic Number,The method contains a magic number: 2,71
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseIPLiteral,Magic Number,The method contains a magic number: 2,71
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseRegName,Complex Conditional,The conditional expression c == '%' && (from + 2) < to && isHEXDIG(s.charAt(c + 1)) && isHEXDIG(s.charAt(c + 2)) is complex.,75
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseRegName,Magic Number,The method contains a magic number: 2,75
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseRegName,Magic Number,The method contains a magic number: 2,75
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseRegName,Magic Number,The method contains a magic number: 3,75
vert.x,io.vertx.core.net.impl,HostAndPortImpl,isSubDelims,Long Statement,The length of the statement "return ch == '!' || ch == '$' || ch == '&' || ch == '\'' || ch == '(' || ch == ')' || ch == '*' || ch == '+' || ch == '`' || ch == ';' || ch == '=';" is 148.,102
vert.x,io.vertx.core.net.impl,HostAndPortImpl,parseHostAndPort,Magic Number,The method contains a magic number: 10,110
vert.x,io.vertx.core.net.impl,KeyStoreHelper,KeyStoreHelper,Complex Conditional,The conditional expression l.size() == 2 && l.get(0) instanceof Number && ((Number)l.get(0)).intValue() == 2 is complex.,81
vert.x,io.vertx.core.net.impl,KeyStoreHelper,KeyStoreHelper,Complex Method,Cyclomatic complexity of the method is 11,81
vert.x,io.vertx.core.net.impl,KeyStoreHelper,KeyStoreHelper,Magic Number,The method contains a magic number: 2,81
vert.x,io.vertx.core.net.impl,KeyStoreHelper,KeyStoreHelper,Magic Number,The method contains a magic number: 2,81
vert.x,io.vertx.core.net.impl,KeyStoreHelper,KeyStoreHelper,Magic Number,The method contains a magic number: 2,81
vert.x,io.vertx.core.net.impl,KeyStoreHelper,getX509CertificateCommonNames,Magic Number,The method contains a magic number: 2,219
vert.x,io.vertx.core.net.impl,KeyStoreHelper,loadKeyStore,Long Parameter List,The method has 5 parameters. ,242
vert.x,io.vertx.core.net.impl,KeyStoreHelper,loadKeyCert,Long Statement,The length of the statement "keyStore.setEntry("dummy-entry-" + index++`new KeyStore.PrivateKeyEntry(key`chain)`new KeyStore.PasswordProtection(DUMMY_PASSWORD.toCharArray()));" is 146.,267
vert.x,io.vertx.core.net.impl,KeyStoreHelper,loadPrivateKey,Complex Method,Cyclomatic complexity of the method is 9,285
vert.x,io.vertx.core.net.impl,KeyStoreHelper,loadPrivateKey,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2aceb990,285
vert.x,io.vertx.core.net.impl,KeyStoreHelper,loadCerts,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3e695e28,381
vert.x,io.vertx.core.net.impl,NetClientImpl,NetClientImpl,Long Statement,The length of the statement "this.proxyFilter=options.getNonProxyHosts() != null ? ProxyFilter.nonProxyHosts(options.getNonProxyHosts()) : ProxyFilter.DEFAULT_PROXY_FILTER;" is 143.,69
vert.x,io.vertx.core.net.impl,NetClientImpl,initChannel,Complex Conditional,The conditional expression idleTimeout > 0 || readIdleTimeout > 0 || writeIdleTimeout > 0 is complex.,92
vert.x,io.vertx.core.net.impl,NetClientImpl,connect,Long Statement,The length of the statement "connectInternal(proxyOptions`remoteAddress`peerAddress`serverName`options.isSsl()`options.isUseAlpn()`options.isRegisterWriteHandler()`connectHandler`ctx`options.getReconnectAttempts());" is 186.,222
vert.x,io.vertx.core.net.impl,NetClientImpl,connectInternal,Long Parameter List,The method has 10 parameters. ,240
vert.x,io.vertx.core.net.impl,NetClientImpl,connectInternal,Long Statement,The length of the statement "connectInternal2(proxyOptions`remoteAddress`peerAddress`ar.result().sslChannelProvider()`serverName`ssl`useAlpn`registerWriteHandlers`connectHandler`context`remainingAttempts);" is 176.,240
vert.x,io.vertx.core.net.impl,NetClientImpl,connectInternal2,Complex Conditional,The conditional expression connectError && (remainingAttempts > 0 || remainingAttempts == -1) is complex.,285
vert.x,io.vertx.core.net.impl,NetClientImpl,connectInternal2,Long Parameter List,The method has 11 parameters. ,285
vert.x,io.vertx.core.net.impl,NetClientImpl,connectInternal2,Long Statement,The length of the statement "channelProvider.handler(ch -> connected(context`ch`connectHandler`remoteAddress`sslChannelProvider`channelProvider.applicationProtocol()`registerWriteHandlers));" is 161.,285
vert.x,io.vertx.core.net.impl,NetClientImpl,connectInternal2,Long Statement,The length of the statement "vertx.setTimer(options.getReconnectInterval()`tid -> connectInternal(proxyOptions`remoteAddress`peerAddress`serverName`ssl`useAlpn`registerWriteHandlers`connectHandler`context`remainingAttempts == -1 ? remainingAttempts : remainingAttempts - 1));" is 246.,285
vert.x,io.vertx.core.net.impl,NetClientImpl,connectInternal2,Long Statement,The length of the statement "eventLoop.execute(() -> connectInternal2(proxyOptions`remoteAddress`peerAddress`sslChannelProvider`serverName`ssl`useAlpn`registerWriteHandlers`connectHandler`context`remainingAttempts));" is 187.,285
vert.x,io.vertx.core.net.impl,NetClientImpl,connected,Long Parameter List,The method has 7 parameters. ,335
vert.x,io.vertx.core.net.impl,NetClientImpl,connected,Long Statement,The length of the statement "VertxHandler<NetSocketImpl> handler=VertxHandler.create(ctx -> new NetSocketImpl(context`ctx`remoteAddress`sslChannelProvider`metrics`applicationLayerProtocol`registerWriteHandlers));" is 183.,335
vert.x,io.vertx.core.net.impl,NetClientInternal,connectInternal,Long Parameter List,The method has 10 parameters. ,24
vert.x,io.vertx.core.net.impl,NetServerImpl,initChannel,Complex Conditional,The conditional expression ssl || !vertx.transport().supportFileRegion() || (options.getTrafficShapingOptions() != null && options.getTrafficShapingOptions().getOutboundGlobalBandwidth() > 0) is complex.,247
vert.x,io.vertx.core.net.impl,NetServerImpl,initChannel,Complex Conditional,The conditional expression idleTimeout > 0 || readIdleTimeout > 0 || writeIdleTimeout > 0 is complex.,247
vert.x,io.vertx.core.net.impl,NetServerImpl,initChannel,Long Statement,The length of the statement "if (ssl || !vertx.transport().supportFileRegion() || (options.getTrafficShapingOptions() != null && options.getTrafficShapingOptions().getOutboundGlobalBandwidth() > 0)) {" is 171.,247
vert.x,io.vertx.core.net.impl,NetServerImpl,initChannel,Long Statement,The length of the statement "pipeline.addLast("idle"`new IdleStateHandler(readIdleTimeout`writeIdleTimeout`idleTimeout`options.getIdleTimeoutUnit()));" is 121.,247
vert.x,io.vertx.core.net.impl,NetSocketImpl,NetSocketImpl,Long Parameter List,The method has 5 parameters. ,71
vert.x,io.vertx.core.net.impl,NetSocketImpl,NetSocketImpl,Long Identifier,The length of the parameter negotiatedApplicationLayerProtocol is 34.,75
vert.x,io.vertx.core.net.impl,NetSocketImpl,NetSocketImpl,Long Identifier,The length of the field negotiatedApplicationLayerProtocol is 34.,75
vert.x,io.vertx.core.net.impl,NetSocketImpl,NetSocketImpl,Long Parameter List,The method has 7 parameters. ,75
vert.x,io.vertx.core.net.impl,NetSocketImpl,applicationLayerProtocol,Long Identifier,The length of the field negotiatedApplicationLayerProtocol is 34.,139
vert.x,io.vertx.core.net.impl,ServerID,hashCode,Magic Number,The method contains a magic number: 31,42
vert.x,io.vertx.core.net.impl,SocketAddressImpl,SocketAddressImpl,Magic Number,The method contains a magic number: 65535,36
vert.x,io.vertx.core.net.impl,SocketAddressImpl,SocketAddressImpl,Magic Number,The method contains a magic number: 65535,54
vert.x,io.vertx.core.net.impl,SocketAddressImpl,hashCode,Magic Number,The method contains a magic number: 31,146
vert.x,io.vertx.core.net.impl,SocketAddressImpl,hashCode,Magic Number,The method contains a magic number: 31,146
vert.x,io.vertx.core.net.impl,SslChannelProvider,SslChannelProvider,Long Parameter List,The method has 8 parameters. ,49
vert.x,io.vertx.core.net.impl,SslChannelProvider,serverNameMapping,Long Statement,The length of the statement "SslContext sslContext=sslContextMaps[idx].computeIfAbsent(serverName`s -> sslContextProvider.createServerContext(kmf`trustManagers`s`useAlpn));" is 143.,92
vert.x,io.vertx.core.net.impl,SslContextProvider,SslContextProvider,Long Identifier,The length of the parameter endpointIdentificationAlgorithm is 31.,45
vert.x,io.vertx.core.net.impl,SslContextProvider,SslContextProvider,Long Identifier,The length of the field endpointIdentificationAlgorithm is 31.,45
vert.x,io.vertx.core.net.impl,SslContextProvider,SslContextProvider,Long Parameter List,The method has 11 parameters. ,45
vert.x,io.vertx.core.net.impl,SslContextProvider,createClientContext,Long Statement,The length of the statement "SslContextFactory factory=provider.get().useAlpn(useAlpn).forClient(true).enabledCipherSuites(enabledCipherSuites).applicationProtocols(applicationProtocols);" is 158.,69
vert.x,io.vertx.core.net.impl,SslContextProvider,createServerContext,Long Statement,The length of the statement "return createServerContext(keyManagerFactory`trustManagerFactory != null ? trustManagerFactory.getTrustManagers() : null`null`useAlpn);" is 135.,101
vert.x,io.vertx.core.net.impl,SslContextProvider,createServerContext,Long Statement,The length of the statement "SslContextFactory factory=provider.get().useAlpn(useAlpn).forClient(false).enabledCipherSuites(enabledCipherSuites).applicationProtocols(applicationProtocols);" is 159.,105
vert.x,io.vertx.core.net.impl,SslContextProvider,configureEngine,Long Identifier,The length of the field endpointIdentificationAlgorithm is 31.,253
vert.x,io.vertx.core.net.impl,SSLHelper,resolveEngineOptions,Complex Method,Cyclomatic complexity of the method is 14,59
vert.x,io.vertx.core.net.impl,SSLHelper,SSLHelper,Long Identifier,The length of the field endpointIdentificationAlgorithm is 31.,116
vert.x,io.vertx.core.net.impl,SSLHelper,SSLHelper,Long Statement,The length of the statement "this.endpointIdentificationAlgorithm=options instanceof NetClientOptions ? ((NetClientOptions)options).getHostnameVerificationAlgorithm() : "";" is 143.,116
vert.x,io.vertx.core.net.impl,SSLHelper,buildChannelProvider,Long Statement,The length of the statement "return build(new SSLOptions(sslOptions)`ctx).map(c -> new SslChannelProvider(c.sslContextProvider()`c.sslOptions.getSslHandshakeTimeout()`c.sslOptions.getSslHandshakeTimeoutUnit()`sni`trustAll`useAlpn`ctx.owner().getInternalWorkerPool().executor()`c.useWorkerPool));" is 266.,215
vert.x,io.vertx.core.net.impl,SSLHelper,build,Complex Conditional,The conditional expression keyCertOptions != null || trustOptions != null || trustAll || ssl is complex.,231
vert.x,io.vertx.core.net.impl,SSLHelper,build,Complex Method,Cyclomatic complexity of the method is 8,231
vert.x,io.vertx.core.net.impl,SSLHelper,build,Long Statement,The length of the statement "tmp.addAll(sslOptions.getCrlPaths().stream().map(path -> ctx.owner().resolveFile(path).getAbsolutePath()).map(ctx.owner().fileSystem()::readFileBlocking).collect(Collectors.toList()));" is 184.,231
vert.x,io.vertx.core.net.impl,SSLHelper,build,Long Statement,The length of the statement "sslContextFactorySupplier=Future.succeededFuture(new EngineConfig(sslOptions`() -> new DefaultSslContextFactory(SslProvider.JDK`false)`SSLEngineOptions.DEFAULT_USE_WORKER_POOL));" is 178.,231
vert.x,io.vertx.core.net.impl,TCPServerBase,createTrafficShapingHandler,Long Identifier,The length of the identifier checkIntervalForStatsInSeconds is 30.,111
vert.x,io.vertx.core.net.impl,TCPServerBase,createTrafficShapingHandler,Long Identifier,The length of the identifier checkIntervalForStatsInSeconds is 30.,111
vert.x,io.vertx.core.net.impl,TCPServerBase,createTrafficShapingHandler,Long Statement,The length of the statement "long checkIntervalForStatsInSeconds=options.getCheckIntervalForStatsTimeUnit().toSeconds(options.getCheckIntervalForStats());" is 125.,111
vert.x,io.vertx.core.net.impl,TCPServerBase,createTrafficShapingHandler,Long Statement,The length of the statement "trafficShapingHandler=new GlobalTrafficShapingHandler(eventLoopGroup`options.getOutboundGlobalBandwidth()`options.getInboundGlobalBandwidth()`checkIntervalForStatsInSeconds`maxDelayToWaitInSeconds);" is 198.,111
vert.x,io.vertx.core.net.impl,TCPServerBase,createTrafficShapingHandler,Long Statement,The length of the statement "long checkIntervalForStatsInSeconds=options.getCheckIntervalForStatsTimeUnit().toSeconds(options.getCheckIntervalForStats());" is 125.,111
vert.x,io.vertx.core.net.impl,TCPServerBase,createTrafficShapingHandler,Long Statement,The length of the statement "trafficShapingHandler=new GlobalTrafficShapingHandler(eventLoopGroup`options.getOutboundGlobalBandwidth()`options.getInboundGlobalBandwidth()`checkIntervalForStatsInSeconds);" is 174.,111
vert.x,io.vertx.core.net.impl,TCPServerBase,createTrafficShapingHandler,Long Statement,The length of the statement "trafficShapingHandler=new GlobalTrafficShapingHandler(eventLoopGroup`options.getOutboundGlobalBandwidth()`options.getInboundGlobalBandwidth());" is 143.,111
vert.x,io.vertx.core.net.impl,TCPServerBase,listen,Complex Method,Cyclomatic complexity of the method is 12,157
vert.x,io.vertx.core.net.impl,TCPServerBase,listen,Long Method,The method has 117 lines of code.,157
vert.x,io.vertx.core.net.impl,TCPServerBase,resolveAndBind,Long Statement,The length of the statement "io.netty.util.concurrent.Future<InetSocketAddress> fut=resolver.resolveHostname(context.nettyEventLoop()`socketAddress.host());" is 127.,350
vert.x,io.vertx.core.net.impl,URIDecoder,decodeAndTransformURIComponent,Long Statement,The length of the statement "throw new IllegalArgumentException("invalid escape sequence `%" + s.charAt(i - 1) + s.charAt(i)+ "' at index "+ (i - 2)+ " of: "+ s);" is 133.,76
vert.x,io.vertx.core.net.impl,URIDecoder,decodeAndTransformURIComponent,Magic Number,The method contains a magic number: 2,76
vert.x,io.vertx.core.net.impl,URIDecoder,decodeAndTransformURIComponent,Magic Number,The method contains a magic number: 16,76
vert.x,io.vertx.core.net.impl,URIDecoder,decodeHexNibble,Magic Number,The method contains a magic number: 10,113
vert.x,io.vertx.core.net.impl,URIDecoder,decodeHexNibble,Magic Number,The method contains a magic number: 10,113
vert.x,io.vertx.core.net.impl,VertxHandler,safeBuffer,Complex Conditional,The conditional expression buf != Unpooled.EMPTY_BUFFER && (buf.alloc() instanceof PooledByteBufAllocator || buf instanceof CompositeByteBuf) is complex.,45
vert.x,io.vertx.core.net.impl,VertxHandler,safeBuffer,Long Statement,The length of the statement "if (buf != Unpooled.EMPTY_BUFFER && (buf.alloc() instanceof PooledByteBufAllocator || buf instanceof CompositeByteBuf)) {" is 121.,45
vert.x,io.vertx.core.net.impl,ConnectionBaseTest,testQueueMessageFromEvent,Magic Number,The method contains a magic number: 3,31
vert.x,io.vertx.core.net.impl,ConnectionBaseTest,testQueueMessageFromEvent,Magic Number,The method contains a magic number: 1234,31
vert.x,io.vertx.core.net.impl,ConnectionBaseTest,testQueueMessageFromEvent,Magic Number,The method contains a magic number: 1234,31
vert.x,io.vertx.core.net.impl,ConnectionBaseTest,write,Magic Number,The method contains a magic number: 3,42
vert.x,io.vertx.core.net.impl,ConnectionBaseTest,testQueueFlushFromEventLoop,Magic Number,The method contains a magic number: 3,78
vert.x,io.vertx.core.net.impl,ConnectionBaseTest,testQueueFlushFromEventLoop,Magic Number,The method contains a magic number: 1234,78
vert.x,io.vertx.core.net.impl,ConnectionBaseTest,testQueueFlushFromEventLoop,Magic Number,The method contains a magic number: 1234,78
vert.x,io.vertx.core.net.impl,ConnectionBaseTest,executeAsyncTask,Magic Number,The method contains a magic number: 20,134
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPLiteral,Magic Number,The method contains a magic number: 2,9
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPLiteral,Magic Number,The method contains a magic number: 3,9
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPLiteral,Magic Number,The method contains a magic number: 3,9
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPLiteral,Magic Number,The method contains a magic number: 2,9
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseDecOctet,Magic Number,The method contains a magic number: 2,18
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseDecOctet,Magic Number,The method contains a magic number: 2,18
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseDecOctet,Magic Number,The method contains a magic number: 2,18
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseDecOctet,Magic Number,The method contains a magic number: 3,18
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseDecOctet,Magic Number,The method contains a magic number: 3,18
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseDecOctet,Magic Number,The method contains a magic number: 3,18
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseDecOctet,Magic Number,The method contains a magic number: 4,18
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseDecOctet,Magic Number,The method contains a magic number: 3,18
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPV4Address,Magic Number,The method contains a magic number: 5,30
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPV4Address,Magic Number,The method contains a magic number: 7,30
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPV4Address,Magic Number,The method contains a magic number: 7,30
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPV4Address,Magic Number,The method contains a magic number: 7,30
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPV4Address,Magic Number,The method contains a magic number: 11,30
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPV4Address,Magic Number,The method contains a magic number: 11,30
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseIPV4Address,Magic Number,The method contains a magic number: 11,30
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseRegName,Magic Number,The method contains a magic number: 5,39
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseRegName,Magic Number,The method contains a magic number: 5,39
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseRegName,Magic Number,The method contains a magic number: 5,39
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseRegName,Magic Number,The method contains a magic number: 5,39
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseRegName,Magic Number,The method contains a magic number: 11,39
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseRegName,Magic Number,The method contains a magic number: 11,39
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseRegName,Magic Number,The method contains a magic number: 14,39
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseRegName,Magic Number,The method contains a magic number: 14,39
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseHost,Magic Number,The method contains a magic number: 14,47
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseHost,Magic Number,The method contains a magic number: 14,47
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseHost,Magic Number,The method contains a magic number: 5,47
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseHost,Magic Number,The method contains a magic number: 5,47
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseHost,Magic Number,The method contains a magic number: 7,47
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseHost,Magic Number,The method contains a magic number: 7,47
vert.x,io.vertx.core.net.impl,HostAndPortTest,testParseHostAndPort,Magic Number,The method contains a magic number: 8080,54
vert.x,io.vertx.core.net.impl,URIDecoderTest,testFromRFC,Long Statement,The length of the statement "assertEquals("/ !\"#$%&'()*+`-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"`decodeURIComponent("/%20%21%22%23%24%25%26%27%28%29%2A%2B%2C%2D%2E%2F%30%31%32%33%34%35%36%37%38%39%3A%3B%3C%3D%3E%3F%40%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F%50%51%52%53%54%55%56%57%58%59%5A%5B%5C%5D%5E%5F%60%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A%7B%7C%7D%7E"`false));" is 430.,55
vert.x,io.vertx.core.net.impl,URIDecoderTest,testNonLatin,Long Statement,The length of the statement "assertEquals("/foo/ñ/blah/婴儿服饰/eek/ฌ"`decodeURIComponent("/foo/%C3%B1/blah/%E5%A9%B4%E5%84%BF%E6%9C%8D%E9%A5%B0/eek/%E0%B8%8C"));" is 129.,60
vert.x,io.vertx.core.net.impl,URIDecoderTest,testNonLatin,Long Statement,The length of the statement "assertEquals("/foo/\u00F1/blah/\u5a74\u513f\u670d\u9970/eek/\u0E0C"`decodeURIComponent("/foo/%C3%B1/blah/%E5%A9%B4%E5%84%BF%E6%9C%8D%E9%A5%B0/eek/%E0%B8%8C"`false));" is 165.,60
vert.x,io.vertx.core.net.impl,URIDecoderTest,testIncomplete,Empty catch clause,The method has an empty catch block.,66
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParser,oidToString,Magic Number,The method contains a magic number: 0xff,48
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParser,oidToString,Magic Number,The method contains a magic number: 40,48
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParser,oidToString,Magic Number,The method contains a magic number: 40,48
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParser,oidToString,Magic Number,The method contains a magic number: 7,48
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParser,getECKeySpec,Long Statement,The length of the statement "throw new VertxException(String.format("Invalid DER: 'version' field must be of type INTEGER (2) but found type `%d`"`version.getType()));" is 138.,120
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParser,getECKeySpec,Long Statement,The length of the statement "throw new VertxException(String.format("Invalid DER: expected 'version' field to have value '1' but found '%d'"`version.getInteger().intValue()));" is 146.,120
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParser,getECKeySpec,Long Statement,The length of the statement "throw new VertxException(String.format("Invalid DER: expected to find an OBJECT_IDENTIFIER (6) in 'parameters' but found type '%d'"`params.getType()));" is 151.,120
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsRSA,Long Statement,The length of the statement "byte[] pkcs8=new byte[]{0x30`0x12`0x02`0x01`0x00`0x30`0x0D`0x06`0x09`0x2A`(byte)0x86`0x48`(byte)0x86`(byte)0xF7`0x0D`0x01`0x01`0x01`0x05`0x00};" is 143.,39
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsRSA,Magic Number,The method contains a magic number: 0x86,39
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsRSA,Magic Number,The method contains a magic number: 0x86,39
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsRSA,Magic Number,The method contains a magic number: 0xF7,39
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsEC,Long Statement,The length of the statement "byte[] pkcs8=new byte[]{0x30`0x18`0x02`0x01`0x00`0x30`0x13`0x06`0x07`0x2A`(byte)0x86`0x48`(byte)0xCE`0x3D`0x02`0x01`0x06`0x08`0x2A`(byte)0x86`0x48`(byte)0xCE`0x3D`0x03`0x01`0x07};" is 179.,59
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsEC,Magic Number,The method contains a magic number: 0x86,59
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsEC,Magic Number,The method contains a magic number: 0xCE,59
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsEC,Magic Number,The method contains a magic number: 0x86,59
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetPKCS8EncodedKeySpecSupportsEC,Magic Number,The method contains a magic number: 0xCE,59
vert.x,io.vertx.core.net.impl.pkcs1,PrivateKeyParserTest,testGetECKeySpecSucceedsForDEREncodedECPrivateKey,Long Statement,The length of the statement "String b=vertx.fileSystem().readFileBlocking("tls/server-key-ec-pkcs1.pem").toString(StandardCharsets.US_ASCII).replaceAll("-----BEGIN EC PRIVATE KEY-----"`"").replaceAll("-----END EC PRIVATE KEY-----"`"").replaceAll("\\s"`"");" is 227.,85
vert.x,io.vertx.core.net.impl.pool,CombinerExecutor,submit,Complex Method,Cyclomatic complexity of the method is 9,42
vert.x,io.vertx.core.net.impl.pool,ConnectionManager,getConnection,Magic Number,The method contains a magic number: 2,91
vert.x,io.vertx.core.net.impl.pool,ConnectionManager,close,Magic Number,The method contains a magic number: 2,114
vert.x,io.vertx.core.net.impl.pool,Endpoint,checkDispose,Complex Conditional,The conditional expression !disposed && refCount == 0 && pendingRequestCount == 0 is complex.,84
vert.x,io.vertx.core.net.impl.pool,ConnectionManagerTest,testConcurrentDispose,Magic Number,The method contains a magic number: 100000,192
vert.x,io.vertx.core.net.impl.pool,ConnectionManagerTest,testConcurrentDispose,Magic Number,The method contains a magic number: 4,192
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testConnect,Magic Number,The method contains a magic number: 10,46
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testRecycleRemovedConnection,Magic Number,The method contains a magic number: 10,88
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testConcurrency,Magic Number,The method contains a magic number: 10,116
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testConcurrency,Magic Number,The method contains a magic number: 2,116
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testIncreaseConcurrency,Magic Number,The method contains a magic number: 2,136
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testIncreaseConcurrency,Magic Number,The method contains a magic number: 3,136
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testSatisfyPendingWaitersWithExtraConcurrency,Magic Number,The method contains a magic number: 2,164
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testSatisfyPendingWaitersWithExtraConcurrency,Magic Number,The method contains a magic number: 2,164
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testEmptyConcurrency,Magic Number,The method contains a magic number: 2,185
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testEmptyConcurrency,Magic Number,The method contains a magic number: 2,185
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testEmptyConcurrency,Magic Number,The method contains a magic number: 2,185
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testDecreaseConcurrency,Magic Number,The method contains a magic number: 2,208
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testDecreaseConcurrency,Magic Number,The method contains a magic number: 3,208
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testDecreaseConcurrency,Magic Number,The method contains a magic number: 2,208
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testDecreaseConcurrency,Magic Number,The method contains a magic number: 2,208
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testWaiter,Magic Number,The method contains a magic number: 10,244
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testRemoveSingleConnection,Magic Number,The method contains a magic number: 10,268
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testRemoveFirstConnection,Magic Number,The method contains a magic number: 2,284
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testRemoveFirstConnection,Magic Number,The method contains a magic number: 10,284
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testRemoveSingleConnectionWithWaiter,Magic Number,The method contains a magic number: 10,305
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testConnectFailureWithPendingWaiter,Magic Number,The method contains a magic number: 2,334
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testConnectFailureWithPendingWaiter,Magic Number,The method contains a magic number: 2,334
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireFirst,Magic Number,The method contains a magic number: 10,362
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireFirst,Magic Number,The method contains a magic number: 2,362
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireFirst,Magic Number,The method contains a magic number: 10,362
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireFirst,Magic Number,The method contains a magic number: 3,362
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireFirst,Magic Number,The method contains a magic number: 10,362
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireLast,Magic Number,The method contains a magic number: 10,369
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireLast,Magic Number,The method contains a magic number: 2,369
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireLast,Magic Number,The method contains a magic number: 10,369
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireLast,Magic Number,The method contains a magic number: 2,369
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireLast,Magic Number,The method contains a magic number: 3,369
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireLast,Magic Number,The method contains a magic number: 10,369
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireLast,Magic Number,The method contains a magic number: 2,369
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireMiddle,Magic Number,The method contains a magic number: 3,376
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireMiddle,Magic Number,The method contains a magic number: 10,376
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 2,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 3,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 10,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 2,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 2,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 3,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 10,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 2,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 3,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testExpireSome,Magic Number,The method contains a magic number: 10,381
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testConnectionInProgressShouldNotBeEvicted,Magic Number,The method contains a magic number: 5,444
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testRecycleMultiple,Empty catch clause,The method has an empty catch block.,478
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testMaxWaiters,Magic Number,The method contains a magic number: 5,497
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testMaxWaiters,Magic Number,The method contains a magic number: 5,497
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testHeterogeneousSizes,Magic Number,The method contains a magic number: 5,512
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testHeterogeneousSizes,Magic Number,The method contains a magic number: 5,512
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testHeterogeneousSizes,Magic Number,The method contains a magic number: 10,512
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testClose,Magic Number,The method contains a magic number: 2,533
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testClose,Magic Number,The method contains a magic number: 3,533
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testClose,Magic Number,The method contains a magic number: 2,533
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testCloseTwice,Magic Number,The method contains a magic number: 2,559
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testUseAfterClose,Magic Number,The method contains a magic number: 3,576
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testUseAfterClose,Magic Number,The method contains a magic number: 20,576
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testCancelQueuedWaiters,Magic Number,The method contains a magic number: 10,696
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testCancelWaiterBeforeConnectionSuccessWithExtraWaiters,Magic Number,The method contains a magic number: 2,730
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testCancelWaiterBeforeConnection,Magic Number,The method contains a magic number: 10,740
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testCancelWaiterBeforeConnection,Magic Number,The method contains a magic number: 10,740
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testCancelWaiterAfterConnectionSuccess,Magic Number,The method contains a magic number: 10,804
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testCancelWaiterAfterConnectionSuccess,Magic Number,The method contains a magic number: 10,804
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testDefaultSelector,Long Statement,The length of the statement "EventLoopContext context2=vertx.createEventLoopContext(context1.nettyEventLoop()`context1.workerPool()`context1.classLoader());" is 127.,864
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testDefaultSelector,Magic Number,The method contains a magic number: 10,864
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testDefaultContextProviderUnwrap,Magic Number,The method contains a magic number: 10,896
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testDefaultContextProviderReusesSameEventLoop,Magic Number,The method contains a magic number: 10,908
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testPostTasksTrampoline,Long Statement,The length of the statement "List<Integer> expected=IntStream.concat(IntStream.range(1`numAcquires + 1)`IntStream.of(0)).boxed().collect(Collectors.toList());" is 129.,920
vert.x,io.vertx.core.net.impl.pool,ConnectionPoolTest,testPostTasksTrampoline,Magic Number,The method contains a magic number: 5,920
vert.x,io.vertx.core.net.impl.pool,StressTest,testStress,Magic Number,The method contains a magic number: 16,151
vert.x,io.vertx.core.net.impl.pool,StressTest,testStress,Magic Number,The method contains a magic number: 1000,151
vert.x,io.vertx.core.net.impl.pool,StressTest,testStress,Magic Number,The method contains a magic number: 100,151
vert.x,io.vertx.core.net.impl.pool,StressTest,testStress,Magic Number,The method contains a magic number: 10,151
vert.x,io.vertx.core.net.impl.pool,StressTest,testStress,Magic Number,The method contains a magic number: 15,151
vert.x,io.vertx.core.net.impl.pool,StressTest,onSuccess,Magic Number,The method contains a magic number: 100,169
vert.x,io.vertx.core.net.impl.pool,StressTest,onSuccess,Magic Number,The method contains a magic number: 10,169
vert.x,io.vertx.core.net.impl.pool,StressTest,onSuccess,Magic Number,The method contains a magic number: 15,169
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testActionReentrancy,Magic Number,The method contains a magic number: 2,44
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testFoo,Magic Number,The method contains a magic number: 8,75
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testFoo,Magic Number,The method contains a magic number: 1_000,75
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testFoo,Magic Number,The method contains a magic number: 100,75
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testFoo,Magic Number,The method contains a magic number: 10,75
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testOrdering,Magic Number,The method contains a magic number: 2,144
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testOrdering,Magic Number,The method contains a magic number: 2,144
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testOrdering,Magic Number,The method contains a magic number: 3,144
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,testOrdering,Magic Number,The method contains a magic number: 3,144
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,run,Magic Number,The method contains a magic number: 2,150
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,run,Magic Number,The method contains a magic number: 2,156
vert.x,io.vertx.core.net.impl.pool,SynchronizationTest,run,Magic Number,The method contains a magic number: 3,156
vert.x,io.vertx.core.parsetools.impl,JsonParserImpl,checkTokens,Complex Method,Cyclomatic complexity of the method is 16,177
vert.x,io.vertx.core.parsetools.impl,JsonParserImpl,checkTokens,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4ca34094,177
vert.x,io.vertx.core.parsetools.impl,JsonParserImpl,checkPending,Complex Method,Cyclomatic complexity of the method is 12,273
vert.x,io.vertx.core.parsetools.impl,RecordParserImpl,latin1StringToBytes,Magic Number,The method contains a magic number: 0xFF,60
vert.x,io.vertx.core.parsetools.impl,RecordParserImpl,handleParsing,Complex Method,Cyclomatic complexity of the method is 17,177
vert.x,io.vertx.core.parsetools.impl,RecordParserImpl,handle,Complex Conditional,The conditional expression buff != null && maxRecordSize > 0 && buff.length() > maxRecordSize is complex.,275
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseEmptyObject,Empty catch clause,The method has an empty catch block.,42
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseEmptyObject,Magic Number,The method contains a magic number: 2,42
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseEmptyObject,Magic Number,The method contains a magic number: 2,42
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseEmptyObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@13fe62a9,42
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseEmptyArray,Magic Number,The method contains a magic number: 2,76
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseEmptyArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6792f6e0,76
vert.x,io.vertx.core.parsetools,JsonParserTest,parseUnfinishedThrowingException,Empty catch clause,The method has an empty catch block.,98
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseWithErrors,Long Statement,The length of the statement "parser.objectValueMode().handler(event -> objects.add(event.objectValue())).exceptionHandler(errors::add).endHandler(v -> endCount.incrementAndGet());" is 150.,125
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseWithErrors,Long Statement,The length of the statement "List<JsonObject> expected=Arrays.asList(new JsonObject().put("foo"`"foo_value")`new JsonObject().put("bar"`"bar_value")`new JsonObject().put("juu"`"juu_value"));" is 161.,125
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseWithErrors,Magic Number,The method contains a magic number: 3,125
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseWithErrors,Magic Number,The method contains a magic number: 2,125
vert.x,io.vertx.core.parsetools,JsonParserTest,parseNumberFormatException,Empty catch clause,The method has an empty catch block.,154
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValue,Long Statement,The length of the statement "JsonObject expected=new JsonObject().put("number"`3).put("floating"`3.5d).put("true"`true).put("false"`false).put("string"`"s").put("object"`new JsonObject().put("foo"`"bar")).put("array"`new JsonArray().add(0).add(1).add(2)).putNull("null").put("bytes"`new byte[]{1`2`3});" is 273.,167
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValue,Magic Number,The method contains a magic number: 3,167
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValue,Magic Number,The method contains a magic number: 3.5d,167
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValue,Magic Number,The method contains a magic number: 2,167
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseArrayValue,Long Statement,The length of the statement "JsonArray expected=new JsonArray().add(3).add(3.5d).add(true).add(false).add("s").addNull().add(new JsonObject().put("foo"`"bar")).add(new JsonArray().add(0).add(1).add(2)).add(new byte[]{1`2`3});" is 196.,191
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseArrayValue,Magic Number,The method contains a magic number: 3,191
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseArrayValue,Magic Number,The method contains a magic number: 3.5d,191
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseArrayValue,Magic Number,The method contains a magic number: 2,191
vert.x,io.vertx.core.parsetools,JsonParserTest,assertThrowCCE,Empty catch clause,The method has an empty catch block.,214
vert.x,io.vertx.core.parsetools,JsonParserTest,testStringValue,Empty catch clause,The method has an empty catch block.,225
vert.x,io.vertx.core.parsetools,JsonParserTest,testStringValue,Long Statement,The length of the statement "assertThrowCCE(event`JsonEvent::integerValue`JsonEvent::longValue`JsonEvent::floatValue`JsonEvent::doubleValue`JsonEvent::booleanValue`JsonEvent::objectValue`JsonEvent::arrayValue);" is 181.,225
vert.x,io.vertx.core.parsetools,JsonParserTest,testInstantValue,Long Statement,The length of the statement "assertThrowCCE(event`JsonEvent::integerValue`JsonEvent::longValue`JsonEvent::floatValue`JsonEvent::doubleValue`JsonEvent::booleanValue`JsonEvent::objectValue`JsonEvent::arrayValue);" is 181.,253
vert.x,io.vertx.core.parsetools,JsonParserTest,testBinaryValue,Empty catch clause,The method has an empty catch block.,278
vert.x,io.vertx.core.parsetools,JsonParserTest,testBinaryValue,Long Statement,The length of the statement "assertThrowCCE(event`JsonEvent::integerValue`JsonEvent::longValue`JsonEvent::floatValue`JsonEvent::doubleValue`JsonEvent::booleanValue`JsonEvent::objectValue`JsonEvent::arrayValue);" is 181.,278
vert.x,io.vertx.core.parsetools,JsonParserTest,testBinaryValue,Magic Number,The method contains a magic number: 10,278
vert.x,io.vertx.core.parsetools,JsonParserTest,testLongValue,Long Statement,The length of the statement "assertThrowCCE(event`JsonEvent::stringValue`JsonEvent::booleanValue`JsonEvent::binaryValue`JsonEvent::instantValue`JsonEvent::objectValue`JsonEvent::arrayValue);" is 161.,332
vert.x,io.vertx.core.parsetools,JsonParserTest,testLongValue,Magic Number,The method contains a magic number: 567L,332
vert.x,io.vertx.core.parsetools,JsonParserTest,testLongValue,Magic Number,The method contains a magic number: 567,332
vert.x,io.vertx.core.parsetools,JsonParserTest,testLongValue,Magic Number,The method contains a magic number: 567L,332
vert.x,io.vertx.core.parsetools,JsonParserTest,testLongValue,Magic Number,The method contains a magic number: 567f,332
vert.x,io.vertx.core.parsetools,JsonParserTest,testLongValue,Magic Number,The method contains a magic number: 0.01f,332
vert.x,io.vertx.core.parsetools,JsonParserTest,testLongValue,Magic Number,The method contains a magic number: 567d,332
vert.x,io.vertx.core.parsetools,JsonParserTest,testLongValue,Magic Number,The method contains a magic number: 0.01d,332
vert.x,io.vertx.core.parsetools,JsonParserTest,testDoubleValue,Long Statement,The length of the statement "assertThrowCCE(event`JsonEvent::stringValue`JsonEvent::booleanValue`JsonEvent::binaryValue`JsonEvent::instantValue`JsonEvent::objectValue`JsonEvent::arrayValue);" is 161.,356
vert.x,io.vertx.core.parsetools,JsonParserTest,testDoubleValue,Magic Number,The method contains a magic number: 567.45d,356
vert.x,io.vertx.core.parsetools,JsonParserTest,testDoubleValue,Magic Number,The method contains a magic number: 567,356
vert.x,io.vertx.core.parsetools,JsonParserTest,testDoubleValue,Magic Number,The method contains a magic number: 567L,356
vert.x,io.vertx.core.parsetools,JsonParserTest,testDoubleValue,Magic Number,The method contains a magic number: 567.45f,356
vert.x,io.vertx.core.parsetools,JsonParserTest,testDoubleValue,Magic Number,The method contains a magic number: 0.01f,356
vert.x,io.vertx.core.parsetools,JsonParserTest,testDoubleValue,Magic Number,The method contains a magic number: 567.45d,356
vert.x,io.vertx.core.parsetools,JsonParserTest,testDoubleValue,Magic Number,The method contains a magic number: 0.01d,356
vert.x,io.vertx.core.parsetools,JsonParserTest,testBooleanValue,Long Statement,The length of the statement "assertThrowCCE(event`JsonEvent::integerValue`JsonEvent::longValue`JsonEvent::floatValue`JsonEvent::doubleValue`JsonEvent::stringValue`JsonEvent::binaryValue`JsonEvent::instantValue`JsonEvent::objectValue`JsonEvent::arrayValue);" is 227.,380
vert.x,io.vertx.core.parsetools,JsonParserTest,testBooleanValue,Long Statement,The length of the statement "assertThrowCCE(event`JsonEvent::integerValue`JsonEvent::longValue`JsonEvent::floatValue`JsonEvent::doubleValue`JsonEvent::stringValue`JsonEvent::binaryValue`JsonEvent::instantValue`JsonEvent::objectValue`JsonEvent::arrayValue);" is 227.,380
vert.x,io.vertx.core.parsetools,JsonParserTest,testValue,Magic Number,The method contains a magic number: 2,424
vert.x,io.vertx.core.parsetools,JsonParserTest,testValue,Magic Number,The method contains a magic number: 3,424
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueMembers,Magic Number,The method contains a magic number: 2,450
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueMembers,Magic Number,The method contains a magic number: 3,450
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueMembers,Magic Number,The method contains a magic number: 4,450
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueMembers,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@273b82b3,450
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueList,Magic Number,The method contains a magic number: 2,484
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueList,Magic Number,The method contains a magic number: 2,484
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueList,Magic Number,The method contains a magic number: 3,484
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueList,Magic Number,The method contains a magic number: 3,484
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueList,Magic Number,The method contains a magic number: 4,484
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseObjectValueList,Magic Number,The method contains a magic number: 5,484
vert.x,io.vertx.core.parsetools,JsonParserTest,testObjectHandlerScope,Magic Number,The method contains a magic number: 2,522
vert.x,io.vertx.core.parsetools,JsonParserTest,testObjectHandlerScope,Magic Number,The method contains a magic number: 3,522
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseTopValues,Magic Number,The method contains a magic number: 1234L,553
vert.x,io.vertx.core.parsetools,JsonParserTest,testObjectMappingError,Empty catch clause,The method has an empty catch block.,586
vert.x,io.vertx.core.parsetools,JsonParserTest,testObjectMappingError,Long Statement,The length of the statement "JsonParser.newParser().objectValueMode().handler(event -> values.add(event.mapTo(TheObject.class))).exceptionHandler(errors::add).write(Buffer.buffer("{\"destination\":\"unknown\"}")).end();" is 190.,586
vert.x,io.vertx.core.parsetools,JsonParserTest,testObjectMappingError,Long Statement,The length of the statement "JsonParser.newParser().objectValueMode().handler(event -> values.add(event.mapTo(TheObject.class))).write(Buffer.buffer("{\"destination\":\"unknown\"}")).end();" is 160.,586
vert.x,io.vertx.core.parsetools,JsonParserTest,testArrayMapping,Magic Number,The method contains a magic number: 2,612
vert.x,io.vertx.core.parsetools,JsonParserTest,testArrayMapping,Magic Number,The method contains a magic number: 2L,612
vert.x,io.vertx.core.parsetools,JsonParserTest,testArrayMappingError,Empty catch clause,The method has an empty catch block.,625
vert.x,io.vertx.core.parsetools,JsonParserTest,testArrayMappingError,Long Statement,The length of the statement "JsonParser.newParser().arrayValueMode().handler(event -> values.add(event.mapTo(TheObject.class))).exceptionHandler(errors::add).write(Buffer.buffer("[]")).end();" is 162.,625
vert.x,io.vertx.core.parsetools,JsonParserTest,testArrayMappingWithTypeReference,Magic Number,The method contains a magic number: 2,643
vert.x,io.vertx.core.parsetools,JsonParserTest,testArrayMappingWithTypeReference,Magic Number,The method contains a magic number: 2L,643
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseConcatedJSONStream,Magic Number,The method contains a magic number: 2,676
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseConcatedJSONStream,Magic Number,The method contains a magic number: 2,676
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseConcatedJSONStream,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@714ad120,676
vert.x,io.vertx.core.parsetools,JsonParserTest,testParseLineDelimitedJSONStream,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@11c11e8a,700
vert.x,io.vertx.core.parsetools,JsonParserTest,testStreamHandle,Magic Number,The method contains a magic number: 2,740
vert.x,io.vertx.core.parsetools,JsonParserTest,testStreamResume,Magic Number,The method contains a magic number: 2,763
vert.x,io.vertx.core.parsetools,JsonParserTest,testStreamFetchNames,Magic Number,The method contains a magic number: 3,789
vert.x,io.vertx.core.parsetools,JsonParserTest,testStreamFetchNames,Magic Number,The method contains a magic number: 3,789
vert.x,io.vertx.core.parsetools,JsonParserTest,testStreamFetchInHandler,Magic Number,The method contains a magic number: 2,817
vert.x,io.vertx.core.parsetools,JsonParserTest,testStreamPausedEnd,Magic Number,The method contains a magic number: 2,849
vert.x,io.vertx.core.parsetools,JsonParserTest,testPauseAndResumeInHandler,Magic Number,The method contains a magic number: 4,871
vert.x,io.vertx.core.parsetools,JsonParserTest,testPauseAndResumeInHandler,Magic Number,The method contains a magic number: 5,871
vert.x,io.vertx.core.parsetools,JsonParserTest,testStreamResume3886,Magic Number,The method contains a magic number: 3,905
vert.x,io.vertx.core.parsetools,JsonParserTest,testStreamResume3886,Magic Number,The method contains a magic number: 2,905
vert.x,io.vertx.core.parsetools,RecordParserTest,testFixed,Magic Number,The method contains a magic number: 50,57
vert.x,io.vertx.core.parsetools,RecordParserTest,testFixed,Magic Number,The method contains a magic number: 2,57
vert.x,io.vertx.core.parsetools,RecordParserTest,testFixed,Magic Number,The method contains a magic number: 2,57
vert.x,io.vertx.core.parsetools,RecordParserTest,testFixed,Magic Number,The method contains a magic number: 10,57
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 8,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 10,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 100,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 10,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 100,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 120,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 2,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 50,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 2,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 3,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 1000,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 3,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 3,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 4,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 230,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 4,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 5,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 341,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 5,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 32,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 6,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 1234,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 6,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 7,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 100,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 7,90
vert.x,io.vertx.core.parsetools,RecordParserTest,testMixed,Magic Number,The method contains a magic number: 7,90
vert.x,io.vertx.core.parsetools,RecordParserTest,delimited,Magic Number,The method contains a magic number: 50,158
vert.x,io.vertx.core.parsetools,RecordParserTest,delimited,Magic Number,The method contains a magic number: 2,158
vert.x,io.vertx.core.parsetools,RecordParserTest,delimited,Magic Number,The method contains a magic number: 2,158
vert.x,io.vertx.core.parsetools,RecordParserTest,delimited,Magic Number,The method contains a magic number: 10,158
vert.x,io.vertx.core.parsetools,RecordParserTest,checkResults,Long Statement,The length of the statement "assertEquals("Expected:" + expected[i] + " length:"+ expected[i].length()+ " Actual:"+ results[i]+ " length:"+ results[i].length()`expected[i]`results[i]);" is 155.,239
vert.x,io.vertx.core.parsetools,RecordParserTest,generateChunkSizes,Magic Number,The method contains a magic number: 5,256
vert.x,io.vertx.core.parsetools,RecordParserTest,testSpreadDelimiter,Long Statement,The length of the statement "doTestDelimited(Buffer.buffer("start-a-b-c-dddabc")`Buffer.buffer("abc")`new Integer[]{18}`Buffer.buffer("start-a-b-c-ddd"));" is 125.,265
vert.x,io.vertx.core.parsetools,RecordParserTest,testSpreadDelimiter,Long Statement,The length of the statement "doTestDelimited(Buffer.buffer("start-abc-dddabc")`Buffer.buffer("abc")`new Integer[]{18}`Buffer.buffer("start-")`Buffer.buffer("-ddd"));" is 136.,265
vert.x,io.vertx.core.parsetools,RecordParserTest,testSpreadDelimiter,Long Statement,The length of the statement "doTestDelimited(Buffer.buffer("start-ab-c-dddabc")`Buffer.buffer("abc")`new Integer[]{18}`Buffer.buffer("start-ab-c-ddd"));" is 123.,265
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Empty catch clause,The method has an empty catch block.,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Long Statement,The length of the statement "doTestDelimitedMaxRecordSize(Buffer.buffer("ABCD\nEFGH\n")`Buffer.buffer("\n")`new Integer[]{2}`4`null`Buffer.buffer("ABCD")`Buffer.buffer("EFGH"));" is 148.,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Long Statement,The length of the statement "doTestDelimitedMaxRecordSize(Buffer.buffer("A\nBC10\nDEFGHIJKLM\n")`Buffer.buffer("\n")`new Integer[]{2}`10`null`Buffer.buffer("A")`Buffer.buffer("BC10")`Buffer.buffer("DEFGHIJKLM"));" is 183.,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Long Statement,The length of the statement "doTestDelimitedMaxRecordSize(Buffer.buffer("AB\nC\n\nDEFG\n\n")`Buffer.buffer("\n\n")`new Integer[]{2}`4`null`Buffer.buffer("AB\nC")`Buffer.buffer("DEFG"));" is 156.,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Long Statement,The length of the statement "doTestDelimitedMaxRecordSize(Buffer.buffer("AB--C---D-")`Buffer.buffer("-")`new Integer[]{3}`2`null`Buffer.buffer("AB")`Buffer.buffer("")`Buffer.buffer("C")`Buffer.buffer("")`Buffer.buffer("")`Buffer.buffer("D"));" is 213.,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Long Statement,The length of the statement "doTestDelimitedMaxRecordSize(Buffer.buffer("ABCD--")`Buffer.buffer("--")`new Integer[]{2}`3`exHandler`Buffer.buffer("ABCD"));" is 125.,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Magic Number,The method contains a magic number: 4,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Magic Number,The method contains a magic number: 10,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Magic Number,The method contains a magic number: 4,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Magic Number,The method contains a magic number: 2,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Magic Number,The method contains a magic number: 3,278
vert.x,io.vertx.core.parsetools,RecordParserTest,testDelimitedMaxRecordSize,Magic Number,The method contains a magic number: 3,278
vert.x,io.vertx.core.parsetools,RecordParserTest,doTestDelimitedMaxRecordSize,Long Parameter List,The method has 6 parameters. ,301
vert.x,io.vertx.core.parsetools,RecordParserTest,testSwitchModeResetsState,Magic Number,The method contains a magic number: 5,399
vert.x,io.vertx.core.parsetools,RecordParserTest,testParserIsNotReentrant,Magic Number,The method contains a magic number: 2,457
vert.x,io.vertx.core.parsetools,RecordParserTest,testParserIsNotReentrant,Magic Number,The method contains a magic number: 2,457
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquire,Magic Number,The method contains a magic number: 1000,45
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquire,Magic Number,The method contains a magic number: 1000,45
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireOnSameEventLoop,Magic Number,The method contains a magic number: 1000,64
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireOnSameEventLoop,Magic Number,The method contains a magic number: 1000,64
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireDifferentLocksOnSameEventLoop,Magic Number,The method contains a magic number: 2,90
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireDifferentLocksOnSameEventLoop,Magic Number,The method contains a magic number: 2,90
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireOnExecuteBlocking,Magic Number,The method contains a magic number: 1000,122
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireOnExecuteBlocking,Magic Number,The method contains a magic number: 1000,122
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireDifferentLocks,Magic Number,The method contains a magic number: 2000,182
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireTimeout,Magic Number,The method contains a magic number: 1000,199
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testAcquireTimeout,Magic Number,The method contains a magic number: 1000,199
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testReleaseTwice,Magic Number,The method contains a magic number: 2,217
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testReleaseTwice,Magic Number,The method contains a magic number: 2,217
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testReleaseTwice,Magic Number,The method contains a magic number: 10,217
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testReleaseTwice,Magic Number,The method contains a magic number: 2,217
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testNoWorkerStarvation,Magic Number,The method contains a magic number: 5,244
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testNoWorkerStarvation,Magic Number,The method contains a magic number: 10,244
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,testNoWorkerStarvation,Magic Number,The method contains a magic number: 5,244
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,start,Magic Number,The method contains a magic number: 10,248
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,evictTimedOutWaiters,Magic Number,The method contains a magic number: 10,263
vert.x,io.vertx.core.shareddata,AsynchronousLockTest,evictTimedOutWaiters,Magic Number,The method contains a magic number: 200,263
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetByte,Magic Number,The method contains a magic number: 2,37
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetShort,Magic Number,The method contains a magic number: 2,42
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetInt,Magic Number,The method contains a magic number: 2,47
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetLong,Magic Number,The method contains a magic number: 2l,52
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetFloat,Magic Number,The method contains a magic number: 1.2f,62
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetFloat,Magic Number,The method contains a magic number: 2.2f,62
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetBuffer,Magic Number,The method contains a magic number: 4,67
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetBuffer,Magic Number,The method contains a magic number: 12,67
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetDouble,Magic Number,The method contains a magic number: 1.2d,72
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetDouble,Magic Number,The method contains a magic number: 2.2d,72
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGetJsonArray,Magic Number,The method contains a magic number: 2,92
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutTtl,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.put("pipo"`"molo"`10)).compose(v -> assertWaitUntilMapContains(sharedData`"foo"`"pipo"`15`Objects::isNull)).onComplete(onSuccess(v -> testComplete()));" is 215.,107
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutTtl,Magic Number,The method contains a magic number: 10,107
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutTtl,Magic Number,The method contains a magic number: 15,107
vert.x,io.vertx.core.shareddata,AsyncMapTest,assertWaitUntilMapContains,Long Parameter List,The method has 5 parameters. ,117
vert.x,io.vertx.core.shareddata,AsyncMapTest,assertWaitUntil,Long Parameter List,The method has 5 parameters. ,125
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutTtlThenPut,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.put("pipo"`"molo"`10).compose(v -> map.put("pipo"`"mili"))).compose(v -> assertWaitUntilMapContains(sharedData`"foo"`"pipo"`20`s -> "mili".equals(s))).onComplete(onSuccess(v -> testComplete()));" is 258.,138
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutTtlThenPut,Magic Number,The method contains a magic number: 10,138
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutTtlThenPut,Magic Number,The method contains a magic number: 20,138
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutThenPutTtl,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.put("pipo"`"molo").compose(v -> map.put("pipo"`"mili"`10))).compose(v -> assertWaitUntilMapContains(sharedData`"foo"`"pipo"`15`Objects::isNull)).onComplete(onSuccess(v -> testComplete()));" is 252.,150
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutThenPutTtl,Magic Number,The method contains a magic number: 10,150
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutThenPutTtl,Magic Number,The method contains a magic number: 15,150
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetByte,Magic Number,The method contains a magic number: 2,162
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetShort,Magic Number,The method contains a magic number: 2,167
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetInt,Magic Number,The method contains a magic number: 2,172
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetLong,Magic Number,The method contains a magic number: 2l,177
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetFloat,Magic Number,The method contains a magic number: 1.2f,187
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetFloat,Magic Number,The method contains a magic number: 2.2f,187
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetBuffer,Magic Number,The method contains a magic number: 4,192
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetBuffer,Magic Number,The method contains a magic number: 12,192
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetDouble,Magic Number,The method contains a magic number: 1.2d,197
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetDouble,Magic Number,The method contains a magic number: 2.2d,197
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGetJsonArray,Magic Number,The method contains a magic number: 2,217
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentTtl,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.putIfAbsent("pipo"`"molo"`10).andThen(onSuccess(this::assertNull))).compose(v -> assertWaitUntilMapContains(sharedData`"foo"`"pipo"`15`Objects::isNull)).onComplete(onSuccess(v -> testComplete()));" is 260.,232
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentTtl,Magic Number,The method contains a magic number: 10,232
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentTtl,Magic Number,The method contains a magic number: 15,232
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentTtlWithExistingNotGettingDeleted,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.put("pipo"`"molo").compose(v -> map.putIfAbsent("pipo"`"mili"`10).andThen(onSuccess(vd -> assertEquals("molo"`vd))))).compose(v -> assertWaitUntilMapContains(sharedData`"foo"`"pipo"`15`"molo"::equals)).onComplete(onSuccess(v -> testComplete()));" is 309.,242
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentTtlWithExistingNotGettingDeleted,Magic Number,The method contains a magic number: 10,242
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentTtlWithExistingNotGettingDeleted,Magic Number,The method contains a magic number: 15,242
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveByte,Magic Number,The method contains a magic number: 2,255
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveShort,Magic Number,The method contains a magic number: 2,260
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveInt,Magic Number,The method contains a magic number: 2,265
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveLong,Magic Number,The method contains a magic number: 2l,270
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveFloat,Magic Number,The method contains a magic number: 1.2f,280
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveFloat,Magic Number,The method contains a magic number: 2.2f,280
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveBuffer,Magic Number,The method contains a magic number: 4,285
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveBuffer,Magic Number,The method contains a magic number: 12,285
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveDouble,Magic Number,The method contains a magic number: 1.2d,290
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveDouble,Magic Number,The method contains a magic number: 2.2d,290
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveJsonArray,Magic Number,The method contains a magic number: 2,310
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentByte,Magic Number,The method contains a magic number: 2,325
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentByte,Magic Number,The method contains a magic number: 3,325
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentByte,Magic Number,The method contains a magic number: 4,325
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentShort,Magic Number,The method contains a magic number: 2,330
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentShort,Magic Number,The method contains a magic number: 3,330
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentShort,Magic Number,The method contains a magic number: 4,330
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentInt,Magic Number,The method contains a magic number: 2,335
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentInt,Magic Number,The method contains a magic number: 3,335
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentInt,Magic Number,The method contains a magic number: 4,335
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentLong,Magic Number,The method contains a magic number: 2l,340
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentLong,Magic Number,The method contains a magic number: 3l,340
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentLong,Magic Number,The method contains a magic number: 4l,340
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentFloat,Magic Number,The method contains a magic number: 1.2f,350
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentFloat,Magic Number,The method contains a magic number: 2.2f,350
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentFloat,Magic Number,The method contains a magic number: 3.2f,350
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentFloat,Magic Number,The method contains a magic number: 4.2f,350
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentBuffer,Magic Number,The method contains a magic number: 4,355
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentBuffer,Magic Number,The method contains a magic number: 4,355
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentBuffer,Magic Number,The method contains a magic number: 12,355
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentBuffer,Magic Number,The method contains a magic number: 14,355
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentDouble,Magic Number,The method contains a magic number: 1.2d,360
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentDouble,Magic Number,The method contains a magic number: 2.2d,360
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentDouble,Magic Number,The method contains a magic number: 3.2d,360
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentDouble,Magic Number,The method contains a magic number: 4.2d,360
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentJsonObject,Long Statement,The length of the statement "testMapRemoveIfPresent(new JsonObject().put("foo"`"bar")`new JsonObject().put("baz"`"quux")`new JsonObject().put("uihwqduh"`"qiwiojw")`new JsonObject().put("regerg"`"wfwef"));" is 175.,375
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentJsonArray,Long Statement,The length of the statement "testMapRemoveIfPresent(new JsonArray().add("foo").add(2)`new JsonArray().add("bar").add(4)`new JsonArray().add("uihwqduh").add(false)`new JsonArray().add("qqddq").add(true));" is 174.,382
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentJsonArray,Magic Number,The method contains a magic number: 2,382
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentJsonArray,Magic Number,The method contains a magic number: 4,382
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentSerializableObject,Long Statement,The length of the statement "testMapRemoveIfPresent(new SomeSerializableObject("foo")`new SomeSerializableObject("bar")`new SomeSerializableObject("baz")`new SomeSerializableObject("quux"));" is 161.,389
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresentClusterSerializableObject,Long Statement,The length of the statement "testMapRemoveIfPresent(new SomeClusterSerializableObject("foo")`new SomeClusterSerializableObject("bar")`new SomeClusterSerializableObject("baz")`new SomeClusterSerializableObject("quux"));" is 189.,394
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceByte,Magic Number,The method contains a magic number: 2,399
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceByte,Magic Number,The method contains a magic number: 3,399
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceShort,Magic Number,The method contains a magic number: 2,404
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceShort,Magic Number,The method contains a magic number: 3,404
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceInt,Magic Number,The method contains a magic number: 2,409
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceInt,Magic Number,The method contains a magic number: 3,409
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceLong,Magic Number,The method contains a magic number: 2l,414
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceLong,Magic Number,The method contains a magic number: 3l,414
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceFloat,Magic Number,The method contains a magic number: 1.2f,424
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceFloat,Magic Number,The method contains a magic number: 2.2f,424
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceFloat,Magic Number,The method contains a magic number: 3.3f,424
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceBuffer,Magic Number,The method contains a magic number: 4,429
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceBuffer,Magic Number,The method contains a magic number: 12,429
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceBuffer,Magic Number,The method contains a magic number: 14,429
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceDouble,Magic Number,The method contains a magic number: 1.2d,434
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceDouble,Magic Number,The method contains a magic number: 2.2d,434
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceDouble,Magic Number,The method contains a magic number: 3.3d,434
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceJsonObject,Long Statement,The length of the statement "testMapReplace(new JsonObject().put("foo"`"bar")`new JsonObject().put("uihwqduh"`"qiwiojw")`new JsonObject().put("regerg"`"wfwef"));" is 132.,449
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceJsonArray,Long Statement,The length of the statement "testMapReplace(new JsonArray().add("foo").add(2)`new JsonArray().add("uihwqduh").add(false)`new JsonArray().add("qqddq").add(true));" is 132.,455
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceJsonArray,Magic Number,The method contains a magic number: 2,455
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceClusterSerializableObject,Long Statement,The length of the statement "testMapReplace(new SomeClusterSerializableObject("foo")`new SomeClusterSerializableObject("bar")`new SomeClusterSerializableObject("quux"));" is 140.,466
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceTtl,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.replace("pipo"`"molo"`10).andThen(onSuccess(this::assertNull))).compose(v -> assertWaitUntilMapContains(sharedData`"foo"`"pipo"`15`Objects::isNull)).onComplete(onSuccess(v -> testComplete()));" is 256.,471
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceTtl,Magic Number,The method contains a magic number: 10,471
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceTtl,Magic Number,The method contains a magic number: 15,471
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceTtlWithPreviousValue,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.put("pipo"`"molo").andThen(onSuccess(this::assertNull)).compose(vd -> map.replace("pipo"`"mili"`10))).compose(v -> assertWaitUntilMapContains(sharedData`"foo"`"pipo"`15`Objects::isNull)).onComplete(onSuccess(v -> testComplete()));" is 294.,483
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceTtlWithPreviousValue,Magic Number,The method contains a magic number: 10,483
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceTtlWithPreviousValue,Magic Number,The method contains a magic number: 15,483
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentByte,Magic Number,The method contains a magic number: 2,495
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentByte,Magic Number,The method contains a magic number: 3,495
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentShort,Magic Number,The method contains a magic number: 2,500
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentShort,Magic Number,The method contains a magic number: 3,500
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentInt,Magic Number,The method contains a magic number: 2,505
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentInt,Magic Number,The method contains a magic number: 3,505
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentLong,Magic Number,The method contains a magic number: 2l,510
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentLong,Magic Number,The method contains a magic number: 3l,510
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentFloat,Magic Number,The method contains a magic number: 1.2f,520
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentFloat,Magic Number,The method contains a magic number: 2.2f,520
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentFloat,Magic Number,The method contains a magic number: 3.3f,520
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentBuffer,Magic Number,The method contains a magic number: 4,525
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentBuffer,Magic Number,The method contains a magic number: 12,525
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentBuffer,Magic Number,The method contains a magic number: 14,525
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentDouble,Magic Number,The method contains a magic number: 1.2d,530
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentDouble,Magic Number,The method contains a magic number: 2.2d,530
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentDouble,Magic Number,The method contains a magic number: 3.3d,530
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentJsonObject,Long Statement,The length of the statement "testMapReplaceIfPresent(new JsonObject().put("foo"`"bar")`new JsonObject().put("uihwqduh"`"qiwiojw")`new JsonObject().put("regerg"`"wfwef"));" is 141.,545
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentJsonArray,Long Statement,The length of the statement "testMapReplaceIfPresent(new JsonArray().add("foo").add(2)`new JsonArray().add("uihwqduh").add(false)`new JsonArray().add("qqddq").add(true));" is 141.,551
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentJsonArray,Magic Number,The method contains a magic number: 2,551
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentSerializableObject,Long Statement,The length of the statement "testMapReplaceIfPresent(new SomeSerializableObject("foo")`new SomeSerializableObject("bar")`new SomeSerializableObject("quux"));" is 128.,557
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentClusterSerializableObject,Long Statement,The length of the statement "testMapReplaceIfPresent(new SomeClusterSerializableObject("foo")`new SomeClusterSerializableObject("bar")`new SomeClusterSerializableObject("quux"));" is 149.,562
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentTtl,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.put("pipo"`"molo").andThen(onSuccess(this::assertNull)).compose(v -> map.replaceIfPresent("pipo"`"molo"`"mili"`10).andThen(onSuccess(this::assertTrue)))).compose(v -> assertWaitUntilMapContains(sharedData`"foo"`"pipo"`15`Objects::isNull)).onComplete(onSuccess(v -> testComplete()));" is 346.,567
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentTtl,Magic Number,The method contains a magic number: 10,567
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentTtl,Magic Number,The method contains a magic number: 15,567
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentTtlWhenNotPresent,Long Statement,The length of the statement "getVertx().sharedData().<String`String>getAsyncMap("foo").compose(map -> map.replaceIfPresent("pipo"`"molo"`"mili"`10).andThen(onSuccess(this::assertFalse))).onComplete(onSuccess(vd -> testComplete()));" is 202.,579
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresentTtlWhenNotPresent,Magic Number,The method contains a magic number: 10,579
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMultipleMaps,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.put("foo"`"bar")).compose(v -> sharedData.<String`String>getAsyncMap("bar").compose(map -> map.get("foo")).andThen(onSuccess(this::assertNull))).onComplete(onSuccess(res -> testComplete()));" is 254.,654
vert.x,io.vertx.core.shareddata,AsyncMapTest,testClear,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.put("foo"`"bar")).compose(v -> sharedData.<String`String>getAsyncMap("foo").compose(map -> map.clear().compose(v2 -> map.get("foo")))).onComplete(onSuccess(v -> testComplete()));" is 242.,667
vert.x,io.vertx.core.shareddata,AsyncMapTest,testSize,Long Statement,The length of the statement "sharedData.<String`String>getAsyncMap("foo").compose(map -> map.size().andThen(onSuccess(size -> assertEquals(0`size.intValue()))).compose(v -> map.put("foo"`"bar")).compose(v -> map.size().andThen(onSuccess(size -> assertEquals(1`size.intValue()))))).compose(v -> sharedData.<String`String>getAsyncMap("foo").compose(map -> map.size().andThen(onSuccess(size -> assertEquals(1`size.intValue()))))).onComplete(onSuccess(v -> testComplete()));" is 441.,681
vert.x,io.vertx.core.shareddata,AsyncMapTest,testKeys,Magic Number,The method contains a magic number: 100,696
vert.x,io.vertx.core.shareddata,AsyncMapTest,testValues,Magic Number,The method contains a magic number: 100,709
vert.x,io.vertx.core.shareddata,AsyncMapTest,testEntries,Long Statement,The length of the statement "asyncMap.entries().andThen(onSuccess(res -> assertEquals(map.entrySet()`res.entrySet()))).onSuccess(res -> testComplete());" is 123.,725
vert.x,io.vertx.core.shareddata,AsyncMapTest,testEntries,Magic Number,The method contains a magic number: 100,725
vert.x,io.vertx.core.shareddata,AsyncMapTest,loadData,Long Statement,The length of the statement "Future.all(futures).compose(cf -> sharedData.<JsonObject`Buffer>getAsyncMap("foo")).onComplete(onSuccess(asyncMap -> test.accept(getVertx()`asyncMap)));" is 152.,745
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutGet,Long Statement,The length of the statement "sharedData.<K`V>getAsyncMap("foo").compose(map -> map.put(k`v)).compose(v_ -> sharedData.<K`V>getAsyncMap("foo").compose(map -> map.get(k)).andThen(onSuccess(res -> assertEquals(v`res)))).onComplete(onSuccess(res -> testComplete()));" is 233.,755
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapPutIfAbsentGet,Long Statement,The length of the statement "sharedData.<K`V>getAsyncMap("foo").compose(map -> map.putIfAbsent(k`v)).andThen(onSuccess(this::assertNull)).compose(v_ -> sharedData.<K`V>getAsyncMap("foo")).compose(map -> map.get(k).andThen(onSuccess(res -> assertEquals(v`res))).compose(res2 -> map.putIfAbsent(k`v)).andThen(onSuccess(res -> assertEquals(v`res)))).onComplete(onSuccess(res -> testComplete()));" is 363.,768
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemove,Long Statement,The length of the statement "sharedData.<K`V>getAsyncMap("foo").compose(map -> map.put(k`v).andThen(onSuccess(this::assertNull))).compose(v_ -> sharedData.<K`V>getAsyncMap("foo").compose(map -> map.remove(k)).andThen(onSuccess(res -> assertEquals(v`res)))).onComplete(onSuccess(res -> testComplete()));" is 273.,783
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapRemoveIfPresent,Long Statement,The length of the statement "sharedData.<K`V>getAsyncMap("foo").compose(map -> map.put(k`v).andThen(onSuccess(this::assertNull))).compose(v_ -> sharedData.<K`V>getAsyncMap("foo")).compose(map -> map.removeIfPresent(otherKey`v).andThen(onSuccess(this::assertFalse)).compose(res -> map.removeIfPresent(k`otherValue).andThen(onSuccess(this::assertFalse))).compose(res -> map.removeIfPresent(k`v).andThen(onSuccess(this::assertTrue)))).onComplete(onSuccess(v_ -> testComplete()));" is 447.,795
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplace,Long Statement,The length of the statement "sharedData.<K`V>getAsyncMap("foo").compose(map -> map.put(k`v).andThen(onSuccess(this::assertNull))).compose(v_ -> sharedData.<K`V>getAsyncMap("foo").compose(map -> map.replace(k`other).andThen(onSuccess(res -> assertEquals(v`res))).compose(v__ -> map.get(k).andThen(onSuccess(res -> assertEquals(other`res)))).compose(v__ -> map.remove(k)).compose(v__ -> map.replace(k`other).andThen(onSuccess(this::assertNull))).compose(v__ -> map.get(k).andThen(onSuccess(this::assertNull))))).onComplete(onSuccess(v_ -> testComplete()));" is 525.,810
vert.x,io.vertx.core.shareddata,AsyncMapTest,testMapReplaceIfPresent,Long Statement,The length of the statement "sharedData.<K`V>getAsyncMap("foo").compose(map -> map.put(k`v).andThen(onSuccess(this::assertNull))).compose(v_ -> sharedData.<K`V>getAsyncMap("foo")).compose(map -> map.replaceIfPresent(k`v`other).compose(res2 -> map.replaceIfPresent(k`v`other).andThen(onSuccess(this::assertFalse))).compose(v_ -> map.get(k).andThen(onSuccess(res4 -> assertEquals(other`res4))))).onComplete(onSuccess(v_ -> testComplete()));" is 409.,826
vert.x,io.vertx.core.shareddata,ClusteredAsynchronousLockTest,testGetLocalLock,Magic Number,The method contains a magic number: 250,59
vert.x,io.vertx.core.shareddata,ClusteredAsynchronousLockTest,getLockTimeout,Magic Number,The method contains a magic number: 10000,139
vert.x,io.vertx.core.shareddata,ClusteredAsyncMapTest,testGetLocalAsyncMap,Long Statement,The length of the statement "Future.all(node1.sharedData().getLocalAsyncMap("map")`node2.sharedData().getLocalAsyncMap("map")).compose(compFutureMaps -> {" is 125.,38
vert.x,io.vertx.core.shareddata,ClusteredAsyncMapTest,testGetLocalAsyncMap,Long Statement,The length of the statement "return Future.all(mapNode1.put("Hodor"`"Hodor")`mapNode2.put("Hodor"`"Hodor Hodor")).compose(compFuturePutted -> Future.all(mapNode1.get("Hodor")`mapNode2.get("Hodor")));" is 170.,38
vert.x,io.vertx.core.shareddata,ClusteredAsyncMapTest,getNumNodes,Magic Number,The method contains a magic number: 2,67
vert.x,io.vertx.core.shareddata,ClusteredSharedCounterTest,testGetLocalCounter,Long Statement,The length of the statement "Future.all(node1.sharedData().getLocalCounter("counter")`node2.sharedData().getLocalCounter("counter")).compose(compFuture -> {" is 127.,39
vert.x,io.vertx.core.shareddata,ClusteredSharedCounterTest,testGetLocalCounter,Magic Number,The method contains a magic number: 2,39
vert.x,io.vertx.core.shareddata,ClusteredSharedCounterTest,testGetLocalCounter,Magic Number,The method contains a magic number: 2,39
vert.x,io.vertx.core.shareddata,LocalAsyncMapTest,testMapPutTtl,Magic Number,The method contains a magic number: 100,28
vert.x,io.vertx.core.shareddata,LocalAsyncMapTest,testMapPutTtlThenPut,Magic Number,The method contains a magic number: 100,35
vert.x,io.vertx.core.shareddata,LocalAsyncMapTest,testMapPutIfAbsentTtl,Magic Number,The method contains a magic number: 100,42
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testLocalMaps,Magic Number,The method contains a magic number: 2,81
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testMapTypes,Magic Number,The method contains a magic number: 100,173
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testMapTypes,Magic Number,The method contains a magic number: 100,173
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testMapTypes,Magic Number,The method contains a magic number: 15,173
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testMapTypes,Magic Number,The method contains a magic number: 15,173
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testKeys,Magic Number,The method contains a magic number: 3,274
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testKeys,Magic Number,The method contains a magic number: 3,274
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testKeysCopied,Magic Number,The method contains a magic number: 3,288
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testKeysCopied,Magic Number,The method contains a magic number: 3,288
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testValues,Magic Number,The method contains a magic number: 3,321
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testValues,Magic Number,The method contains a magic number: 3,321
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testValuesCopied,Magic Number,The method contains a magic number: 3,335
vert.x,io.vertx.core.shareddata,LocalSharedDataTest,testValuesCopied,Magic Number,The method contains a magic number: 3,335
vert.x,io.vertx.core.shareddata,SharedCounterTest,testIncrementAndGet,Magic Number,The method contains a magic number: 2L,45
vert.x,io.vertx.core.shareddata,SharedCounterTest,testGetAndIncrement,Magic Number,The method contains a magic number: 2L,61
vert.x,io.vertx.core.shareddata,SharedCounterTest,testDecrementAndGet,Magic Number,The method contains a magic number: 2L,80
vert.x,io.vertx.core.shareddata,SharedCounterTest,testAddAndGet,Magic Number,The method contains a magic number: 2,96
vert.x,io.vertx.core.shareddata,SharedCounterTest,testAddAndGet,Magic Number,The method contains a magic number: 2L,96
vert.x,io.vertx.core.shareddata,SharedCounterTest,testAddAndGet,Magic Number,The method contains a magic number: 2L,96
vert.x,io.vertx.core.shareddata,SharedCounterTest,testAddAndGet,Magic Number,The method contains a magic number: 4L,96
vert.x,io.vertx.core.shareddata,SharedCounterTest,getAndAdd,Magic Number,The method contains a magic number: 2,112
vert.x,io.vertx.core.shareddata,SharedCounterTest,getAndAdd,Magic Number,The method contains a magic number: 2L,112
vert.x,io.vertx.core.shareddata,SharedCounterTest,getAndAdd,Magic Number,The method contains a magic number: 2L,112
vert.x,io.vertx.core.shareddata,SharedCounterTest,getAndAdd,Magic Number,The method contains a magic number: 4L,112
vert.x,io.vertx.core.shareddata,SharedCounterTest,testCompareAndSet,Magic Number,The method contains a magic number: 2L,131
vert.x,io.vertx.core.shareddata,SharedCounterTest,testCompareAndSet,Magic Number,The method contains a magic number: 2L,131
vert.x,io.vertx.core.shareddata,SharedCounterTest,testCompareAndSet,Magic Number,The method contains a magic number: 4L,131
vert.x,io.vertx.core.shareddata,SharedCounterTest,testCompareAndSet,Magic Number,The method contains a magic number: 3L,131
vert.x,io.vertx.core.shareddata,SharedCounterTest,testCompareAndSet,Magic Number,The method contains a magic number: 5L,131
vert.x,io.vertx.core.shareddata,SharedCounterTest,testDifferentCounters,Magic Number,The method contains a magic number: 2L,149
vert.x,io.vertx.core.shareddata.impl,Checker,checkType,Complex Conditional,The conditional expression !(obj instanceof Serializable || obj instanceof Shareable || obj instanceof ClusterSerializable) is complex.,53
vert.x,io.vertx.core.shareddata.impl,SharedDataImpl,getLocalAsyncMap,Long Statement,The length of the statement "LocalAsyncMapImpl<K`V> asyncMap=(LocalAsyncMapImpl<K`V>)localAsyncMaps.computeIfAbsent(name`n -> new LocalAsyncMapImpl<>(vertx));" is 129.,127
vert.x,io.vertx.core.spi.cluster,NodeInfo,NodeInfo,Magic Number,The method contains a magic number: 65535,35
vert.x,io.vertx.core.spi.cluster,NodeInfo,hashCode,Magic Number,The method contains a magic number: 31,66
vert.x,io.vertx.core.spi.cluster,NodeInfo,hashCode,Magic Number,The method contains a magic number: 31,66
vert.x,io.vertx.core.spi.cluster,NodeInfo,readFromBuffer,Magic Number,The method contains a magic number: 4,95
vert.x,io.vertx.core.spi.cluster,NodeInfo,readFromBuffer,Magic Number,The method contains a magic number: 4,95
vert.x,io.vertx.core.spi.cluster,NodeInfo,readFromBuffer,Magic Number,The method contains a magic number: 4,95
vert.x,io.vertx.core.spi.cluster,RegistrationInfo,hashCode,Magic Number,The method contains a magic number: 31,64
vert.x,io.vertx.core.spi.cluster,RegistrationInfo,hashCode,Magic Number,The method contains a magic number: 32,64
vert.x,io.vertx.core.spi.cluster,RegistrationInfo,hashCode,Magic Number,The method contains a magic number: 31,64
vert.x,io.vertx.core.spi.cluster,RegistrationInfo,readFromBuffer,Magic Number,The method contains a magic number: 4,88
vert.x,io.vertx.core.spi.cluster,RegistrationInfo,readFromBuffer,Magic Number,The method contains a magic number: 8,88
vert.x,io.vertx.core.spi.cluster,NodeInfoSerializationTest,data,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{new NodeInfo("foo"`13004`null)}`{new NodeInfo("bar"`59500`new JsonObject())}`{new NodeInfo("baz"`30120`new JsonObject().put("foo"`"bar"))}});" is 178.,32
vert.x,io.vertx.core.spi.cluster,NodeInfoSerializationTest,data,Magic Number,The method contains a magic number: 13004,32
vert.x,io.vertx.core.spi.cluster,NodeInfoSerializationTest,data,Magic Number,The method contains a magic number: 59500,32
vert.x,io.vertx.core.spi.cluster,NodeInfoSerializationTest,data,Magic Number,The method contains a magic number: 30120,32
vert.x,io.vertx.core.spi.cluster,RegistrationInfoSerializationTest,data,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{new RegistrationInfo("foo"`-13004`true)}`{new RegistrationInfo("bar"`+13004`false)}});" is 123.,31
vert.x,io.vertx.core.spi.cluster,RegistrationInfoSerializationTest,data,Magic Number,The method contains a magic number: 13004,31
vert.x,io.vertx.core.spi.cluster,RegistrationInfoSerializationTest,data,Magic Number,The method contains a magic number: 13004,31
vert.x,io.vertx.core.spi.cluster.impl.selector,Selectors,dataReceived,Complex Conditional,The conditional expression previous == null || (isUpdate && previous.isNotReady()) is complex.,74
vert.x,io.vertx.core.spi.cluster.impl.selector,Selectors,dataReceived,Complex Method,Cyclomatic complexity of the method is 8,74
vert.x,io.vertx.core.spi.cluster.impl.selector,SimpleRoundRobinSelectorTest,testSelectForSend,Magic Number,The method contains a magic number: 10,49
vert.x,io.vertx.core.spi.cluster.impl.selector,SimpleRoundRobinSelectorTest,testSelectForSend,Magic Number,The method contains a magic number: 10,49
vert.x,io.vertx.core.spi.cluster.impl.selector,SimpleRoundRobinSelectorTest,testSelectForPublish,Magic Number,The method contains a magic number: 10,66
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 38,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 13,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 91,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 22,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 115,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 28,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 91,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 28,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 13,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,data,Magic Number,The method contains a magic number: 28,33
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,testSelectForSend,Magic Number,The method contains a magic number: 10,65
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,testSelectForSend,Magic Number,The method contains a magic number: 10,65
vert.x,io.vertx.core.spi.cluster.impl.selector,WeightedRoundRobinSelectorTest,testSelectForPublish,Magic Number,The method contains a magic number: 10,82
vert.x,io.vertx.core.spi,VertxThreadFactory,newVertxThread,Long Parameter List,The method has 5 parameters. ,34
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testFactoryInCluster,Long Statement,The length of the statement "VertxOptions options=new VertxOptions().setMetricsOptions(new MetricsOptions().setEnabled(true).setFactory(factory)).setEventBusOptions(new EventBusOptions());" is 159.,57
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequest,Long Statement,The length of the statement "client.request(HttpMethod.PUT`8080`"localhost"`"/").compose(req -> req.send(Buffer.buffer("hello")).onComplete(onSuccess(resp -> {" is 130.,88
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequest,Magic Number,The method contains a magic number: 2,88
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequest,Magic Number,The method contains a magic number: 200,88
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequest,Magic Number,The method contains a magic number: 8080,88
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequest,Magic Number,The method contains a magic number: 8080,88
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequestPipelining,Magic Number,The method contains a magic number: 2,175
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequestPipelining,Magic Number,The method contains a magic number: 2,175
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequestPipelining,Magic Number,The method contains a magic number: 10,175
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequestPipelining,Magic Number,The method contains a magic number: 8080,175
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequestPipelining,Magic Number,The method contains a magic number: 2,175
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerRequestPipelining,Magic Number,The method contains a magic number: 8080,175
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,createHttpServerMetrics,Magic Number,The method contains a magic number: 2,180
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,requestEnd,Magic Number,The method contains a magic number: 2,195
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerWebSocket,Long Method,The method has 102 lines of code.,264
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerWebSocket,Magic Number,The method contains a magic number: 2,264
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerWebSocket,Magic Number,The method contains a magic number: 3,264
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerWebSocket,Magic Number,The method contains a magic number: 2,264
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerWebSocket,Magic Number,The method contains a magic number: 4,264
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerWebSocket,Magic Number,The method contains a magic number: 8080,264
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpServerWebSocket,Magic Number,The method contains a magic number: 8080,264
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,createHttpServerMetrics,Magic Number,The method contains a magic number: 2,276
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,createHttpServerMetrics,Magic Number,The method contains a magic number: 3,276
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,createHttpServerMetrics,Magic Number,The method contains a magic number: 2,276
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,createHttpServerMetrics,Magic Number,The method contains a magic number: 4,276
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,responseBegin,Magic Number,The method contains a magic number: 2,288
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,responseEnd,Magic Number,The method contains a magic number: 3,292
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,connected,Magic Number,The method contains a magic number: 2,296
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,disconnected,Magic Number,The method contains a magic number: 4,302
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpClientRequest,Long Statement,The length of the statement "@Override public ClientMetrics<Void`Void`HttpRequest`HttpResponse> createEndpointMetrics( SocketAddress remoteAddress` int maxPoolSize){" is 136.,379
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpClientRequest,Long Statement,The length of the statement "client.request(HttpMethod.PUT`8080`"localhost"`"/the-uri").compose(req -> req.send(Buffer.buffer("hello")).onComplete(onSuccess(resp -> {" is 137.,379
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpClientRequest,Magic Number,The method contains a magic number: 8080,379
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpClientRequest,Magic Number,The method contains a magic number: 8080,379
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,createHttpClientMetrics,Long Statement,The length of the statement "@Override public ClientMetrics<Void`Void`HttpRequest`HttpResponse> createEndpointMetrics( SocketAddress remoteAddress` int maxPoolSize){" is 136.,390
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpClientWebSocket,Long Statement,The length of the statement "@Override public ClientMetrics<Void`Void`HttpRequest`HttpResponse> createEndpointMetrics( SocketAddress remoteAddress` int maxPoolSize){" is 136.,478
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpClientWebSocket,Magic Number,The method contains a magic number: 8080,478
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testHttpClientWebSocket,Magic Number,The method contains a magic number: 8080,478
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,createHttpClientMetrics,Long Statement,The length of the statement "@Override public ClientMetrics<Void`Void`HttpRequest`HttpResponse> createEndpointMetrics( SocketAddress remoteAddress` int maxPoolSize){" is 136.,487
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testNetServer,Magic Number,The method contains a magic number: 1234,574
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testNetServer,Magic Number,The method contains a magic number: 1234,574
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testNetClient,Magic Number,The method contains a magic number: 1234,659
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testNetClient,Magic Number,The method contains a magic number: 1234,659
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testDatagram,Magic Number,The method contains a magic number: 1234,740
vert.x,io.vertx.core.spi.metrics,MetricsContextTest,testDatagram,Magic Number,The method contains a magic number: 1234,740
vert.x,io.vertx.core.spi.metrics,MetricsOptionsTest,testJsonOptions,Magic Number,The method contains a magic number: 10,60
vert.x,io.vertx.core.spi.metrics,MetricsOptionsTest,testSetMetricsInstance,Long Statement,The length of the statement "vertx=Vertx.vertx(new VertxOptions().setMetricsOptions(new MetricsOptions().setEnabled(true).setFactory(new SimpleVertxMetricsFactory<>(metrics))));" is 148.,84
vert.x,io.vertx.core.spi.metrics,MetricsOptionsTest,testSetMetricsInstanceTakesPrecedenceOverServiceLoader,Long Statement,The length of the statement "VertxOptions options=new VertxOptions().setMetricsOptions(new MetricsOptions().setEnabled(true).setFactory(new SimpleVertxMetricsFactory<>(metrics)));" is 150.,104
vert.x,io.vertx.core.spi.metrics,MetricsTest,tearDown,Empty catch clause,The method has an empty catch block.,61
vert.x,io.vertx.core.spi.metrics,MetricsTest,testSendMessageInCluster,Magic Number,The method contains a magic number: 2,92
vert.x,io.vertx.core.spi.metrics,MetricsTest,testPublishMessageToRemote,Magic Number,The method contains a magic number: 2,103
vert.x,io.vertx.core.spi.metrics,MetricsTest,testPublishMessageToCluster,Long Statement,The length of the statement "testBroadcastMessage(vertices[0]`vertices`true`new SentMessage(ADDRESS1`true`false`true)`new SentMessage(ADDRESS1`true`true`false));" is 132.,109
vert.x,io.vertx.core.spi.metrics,MetricsTest,testPublishMessageToCluster,Magic Number,The method contains a magic number: 2,109
vert.x,io.vertx.core.spi.metrics,MetricsTest,testBroadcastMessage,Magic Number,The method contains a magic number: 10,115
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReceiveMessageSentFromRemote,Magic Number,The method contains a magic number: 2,147
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReceiveMessageSent,Long Statement,The length of the statement "assertEquals(Arrays.asList(new ReceivedMessage(ADDRESS1`false`expectedLocal`expectedHandlers))`eventBusMetrics.getReceivedMessages());" is 134.,153
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReceiveMessageSent,Magic Number,The method contains a magic number: 10,153
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReceivePublishedMessageFromSelf,Magic Number,The method contains a magic number: 3,168
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReceiveMessagePublishedFromRemote,Magic Number,The method contains a magic number: 2,173
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReceiveMessagePublishedFromRemote,Magic Number,The method contains a magic number: 3,173
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReceiveMessagePublished,Long Statement,The length of the statement "assertEquals(Arrays.asList(new ReceivedMessage(ADDRESS1`true`expectedLocal`expectedHandlers))`eventBusMetrics.getReceivedMessages());" is 133.,179
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReceiveMessagePublished,Magic Number,The method contains a magic number: 10,179
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReplyMessageFromRemote,Magic Number,The method contains a magic number: 2,207
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReply,Magic Number,The method contains a magic number: 10,213
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReply,Magic Number,The method contains a magic number: 10,213
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDiscardOnOverflow1,Magic Number,The method contains a magic number: 2,243
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDiscardOnOverflow1,Magic Number,The method contains a magic number: 10,243
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDiscardOnOverflow2,Magic Number,The method contains a magic number: 2,265
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDiscardOnOverflow2,Magic Number,The method contains a magic number: 10,265
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDiscardMessageOnUnregistration,Magic Number,The method contains a magic number: 2,287
vert.x,io.vertx.core.spi.metrics,MetricsTest,testSignalMetricEventAfterUnregistration,Long Statement,The length of the statement "assertWaitUntil(() -> metrics.stream().noneMatch(metric -> metric.discardCount.get() == 0 && metric.localDeliveredCount.get() == 0));" is 133.,305
vert.x,io.vertx.core.spi.metrics,MetricsTest,testSignalMetricEventAfterUnregistration,Magic Number,The method contains a magic number: 1000,305
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHandlerProcessMessageFromRemote,Magic Number,The method contains a magic number: 2,373
vert.x,io.vertx.core.spi.metrics,MetricsTest,assertRegistration,Long Statement,The length of the statement "Optional<HandlerMetric> registration=metrics.getRegistrations().stream().filter(reg -> reg.address.equals(ADDRESS1)).findFirst();" is 129.,379
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHandlerMetricReply,Magic Number,The method contains a magic number: 2,424
vert.x,io.vertx.core.spi.metrics,MetricsTest,testBytesCodec,Magic Number,The method contains a magic number: 2,463
vert.x,io.vertx.core.spi.metrics,MetricsTest,testBytesCodec,Magic Number,The method contains a magic number: 1000,463
vert.x,io.vertx.core.spi.metrics,MetricsTest,testBytesCodec,Magic Number,The method contains a magic number: 1000,463
vert.x,io.vertx.core.spi.metrics,MetricsTest,testBytesCodec,Magic Number,The method contains a magic number: 1000,463
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReplyFailureTimeout1,Magic Number,The method contains a magic number: 10,496
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReplyFailureTimeout1,Magic Number,The method contains a magic number: 11_000,496
vert.x,io.vertx.core.spi.metrics,MetricsTest,testReplyFailureTimeout2,Magic Number,The method contains a magic number: 10,513
vert.x,io.vertx.core.spi.metrics,MetricsTest,testServerWebSocketUpgrade,Long Statement,The length of the statement "client.webSocket(HttpTestBase.DEFAULT_HTTP_PORT`HttpTestBase.DEFAULT_HTTP_HOST`"/" + TestUtils.randomAlphaString(16)).onComplete(onSuccess(ws -> {" is 146.,574
vert.x,io.vertx.core.spi.metrics,MetricsTest,testServerWebSocketUpgrade,Magic Number,The method contains a magic number: 16,574
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientName,Magic Number,The method contains a magic number: 10,628
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Long Statement,The length of the statement "client.request(HttpMethod.GET`8080`"localhost"`"/somepath").compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 123.,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 8080,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 5,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 5,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 8080,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 5,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 5,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 8,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 8080,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 8,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 5,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 5,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 3,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 5,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 3,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueLength,Magic Number,The method contains a magic number: 3,647
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueClose,Magic Number,The method contains a magic number: 8080,703
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueClose,Magic Number,The method contains a magic number: 5,703
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueClose,Magic Number,The method contains a magic number: 8080,703
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueClose,Magic Number,The method contains a magic number: 5,703
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientMetricsQueueClose,Magic Number,The method contains a magic number: 5,703
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientConnectionCloseAfterRequestEnd,Long Statement,The length of the statement "client.request(HttpMethod.GET`8080`"localhost"`"/somepath").compose(req -> req.send().compose(HttpClientResponse::end).compose(v -> req.connection().close())).toCompletionStage().toCompletableFuture().get(20`TimeUnit.SECONDS);" is 226.,733
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientConnectionCloseAfterRequestEnd,Magic Number,The method contains a magic number: 8080,733
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientConnectionCloseAfterRequestEnd,Magic Number,The method contains a magic number: 8080,733
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpClientConnectionCloseAfterRequestEnd,Magic Number,The method contains a magic number: 20,733
vert.x,io.vertx.core.spi.metrics,MetricsTest,testMulti,Long Statement,The length of the statement "client.request(HttpMethod.GET`8080`"localhost"`TestUtils.randomAlphaString(16)).compose(HttpClientRequest::send).onComplete(onSuccess(resp -> {" is 143.,755
vert.x,io.vertx.core.spi.metrics,MetricsTest,testMulti,Magic Number,The method contains a magic number: 2,755
vert.x,io.vertx.core.spi.metrics,MetricsTest,testMulti,Magic Number,The method contains a magic number: 8080,755
vert.x,io.vertx.core.spi.metrics,MetricsTest,testMulti,Magic Number,The method contains a magic number: 2,755
vert.x,io.vertx.core.spi.metrics,MetricsTest,testMulti,Magic Number,The method contains a magic number: 8080,755
vert.x,io.vertx.core.spi.metrics,MetricsTest,testMulti,Magic Number,The method contains a magic number: 16,755
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect1,Long Statement,The length of the statement "testHttpConnect(TestUtils.loopbackAddress()`socketMetric -> assertEquals(TestUtils.loopbackAddress()`socketMetric.remoteName));" is 127.,796
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect2,Long Statement,The length of the statement "testHttpConnect(TestUtils.loopbackAddress()`socketMetric -> assertEquals(socketMetric.remoteAddress.host()`socketMetric.remoteName));" is 133.,801
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Long Statement,The length of the statement "client.request(new RequestOptions().setMethod(HttpMethod.CONNECT).setPort(8080).setHost(host).setURI(TestUtils.randomAlphaString(16))).onComplete(onSuccess(req -> {" is 164.,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 2,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 200,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 5,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 5,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 5,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 5,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 8080,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 8080,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 16,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHttpConnect,Magic Number,The method contains a magic number: 200,806
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDatagram1,Magic Number,The method contains a magic number: 1234,860
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDatagram1,Magic Number,The method contains a magic number: 5,860
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDatagram2,Magic Number,The method contains a magic number: 1234,869
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDatagram2,Magic Number,The method contains a magic number: 5,869
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDatagram,Magic Number,The method contains a magic number: 2,878
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDatagram,Magic Number,The method contains a magic number: 1234,878
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDatagram,Magic Number,The method contains a magic number: 1234,878
vert.x,io.vertx.core.spi.metrics,MetricsTest,testDatagram,Magic Number,The method contains a magic number: 5,878
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithExecuteBlocking,Magic Number,The method contains a magic number: 100,907
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithExecuteBlocking,Magic Number,The method contains a magic number: 100,907
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithExecuteBlocking,Magic Number,The method contains a magic number: 100,907
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithInternalExecuteBlocking,Magic Number,The method contains a magic number: 5,948
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithInternalExecuteBlocking,Magic Number,The method contains a magic number: 100,948
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithInternalExecuteBlocking,Magic Number,The method contains a magic number: 100,948
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithWorkerVerticle,Magic Number,The method contains a magic number: 100,1000
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithWorkerVerticle,Magic Number,The method contains a magic number: 10,1000
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithNamedExecuteBlocking,Long Statement,The length of the statement "vertx=Vertx.vertx(new VertxOptions().setMetricsOptions(new MetricsOptions().setEnabled(true).setFactory(new FakeMetricsFactory())));" is 132.,1069
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithNamedExecuteBlocking,Magic Number,The method contains a magic number: 10,1069
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithNamedExecuteBlocking,Magic Number,The method contains a magic number: 10,1069
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithNamedExecuteBlocking,Magic Number,The method contains a magic number: 10,1069
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithNamedExecuteBlocking,Magic Number,The method contains a magic number: 100,1069
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithNamedExecuteBlocking,Magic Number,The method contains a magic number: 100,1069
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithNamedExecuteBlocking,Magic Number,The method contains a magic number: 100,1069
vert.x,io.vertx.core.spi.metrics,MetricsTest,testThreadPoolMetricsWithNamedExecuteBlocking,Magic Number,The method contains a magic number: 10,1069
vert.x,io.vertx.core.spi.metrics,MetricsTest,getSomeDumbTask,Magic Number,The method contains a magic number: 50,1138
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHTTP2ConnectionCloseBeforePrefaceIsReceived,Long Statement,The length of the statement "HttpServerOptions options=Http2TestBase.createHttp2ServerOptions(HttpTestBase.DEFAULT_HTTP_PORT`HttpTestBase.DEFAULT_HTTP_HOST).setIdleTimeout(1);" is 146.,1168
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHTTP2ConnectionCloseBeforePrefaceIsReceived,Long Statement,The length of the statement "NetClient client=vertx.createNetClient(new NetClientOptions().setSslEngineOptions(new JdkSSLEngineOptions()).setUseAlpn(true).setSsl(true).setTrustStoreOptions(Trust.SERVER_JKS.get()).setApplicationLayerProtocols(Collections.singletonList("h2")));" is 247.,1168
vert.x,io.vertx.core.spi.metrics,MetricsTest,testHTTP2ConnectionCloseBeforePrefaceIsReceived,Magic Number,The method contains a magic number: 20,1168
vert.x,io.vertx.core.spi.metrics,MetricsTest,testServerLifecycle,Long Statement,The length of the statement "Vertx vertx=Vertx.vertx(new VertxOptions().setMetricsOptions(new MetricsOptions().setEnabled(true).setFactory(options -> new VertxMetrics(){" is 140.,1194
vert.x,io.vertx.core.spi.metrics,MetricsTest,testServerLifecycle,Long Statement,The length of the statement "@Override public HttpServerMetrics<?`?`?> createHttpServerMetrics( HttpServerOptions options` SocketAddress localAddress){" is 122.,1194
vert.x,io.vertx.core.spi.metrics,MetricsTest,testServerLifecycle,Magic Number,The method contains a magic number: 2,1194
vert.x,io.vertx.core.spi.metrics,MetricsTest,testServerLifecycle,Magic Number,The method contains a magic number: 8080,1194
vert.x,io.vertx.core.spi.metrics,MetricsTest,testServerLifecycle,Magic Number,The method contains a magic number: 2,1194
vert.x,io.vertx.core.spi.metrics,MetricsTest,createHttpServerMetrics,Magic Number,The method contains a magic number: 2,1200
vert.x,io.vertx.core.spi.metrics,MetricsTest,close,Magic Number,The method contains a magic number: 2,1204
vert.x,io.vertx.core.spi.resolver,ResolverProvider,factory,Long Identifier,The length of the field DISABLE_DNS_RESOLVER_PROP_NAME is 30.,35
vert.x,io.vertx.core.spi.tls,DefaultSslContextFactory,createContext,Complex Conditional,The conditional expression useAlpn && applicationProtocols != null && applicationProtocols.size() > 0 is complex.,112
vert.x,io.vertx.core.spi.tls,DefaultSslContextFactory,createContext,Complex Method,Cyclomatic complexity of the method is 13,112
vert.x,io.vertx.core.spi.tls,DefaultSslContextFactory,createContext,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6114cfa4,112
vert.x,io.vertx.core.spi.tracing,VertxTracer,receiveRequest,Long Parameter List,The method has 7 parameters. ,32
vert.x,io.vertx.core.spi.tracing,VertxTracer,sendResponse,Long Parameter List,The method has 5 parameters. ,54
vert.x,io.vertx.core.spi.tracing,VertxTracer,sendRequest,Long Parameter List,The method has 7 parameters. ,70
vert.x,io.vertx.core.spi.tracing,VertxTracer,receiveResponse,Long Parameter List,The method has 5 parameters. ,95
vert.x,io.vertx.core.spi.tracing,ClusteredEventBusTracerTest,setUp,Magic Number,The method contains a magic number: 2,16
vert.x,io.vertx.core.spi.tracing,ClusteredEventBusTracingTest,setUp,Magic Number,The method contains a magic number: 2,16
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,getTracer,Long Statement,The length of the statement "@Override public Object receiveRequest( Context context` SpanKind kind` TracingPolicy policy` Object request` String operation` Iterable headers` TagExtractor tagExtractor){" is 173.,36
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,getTracer,Long Statement,The length of the statement "@Override public void sendResponse( Context context` Object response` Object payload` Throwable failure` TagExtractor tagExtractor){" is 132.,36
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,getTracer,Long Statement,The length of the statement "@Override public Object sendRequest( Context context` SpanKind kind` TracingPolicy policy` Object request` String operation` BiConsumer headers` TagExtractor tagExtractor){" is 172.,36
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,getTracer,Long Statement,The length of the statement "@Override public void receiveResponse( Context context` Object response` Object payload` Throwable failure` TagExtractor tagExtractor){" is 135.,36
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,receiveRequest,Long Parameter List,The method has 7 parameters. ,39
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,sendResponse,Long Parameter List,The method has 5 parameters. ,43
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,sendRequest,Long Parameter List,The method has 7 parameters. ,47
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,receiveResponse,Long Parameter List,The method has 5 parameters. ,51
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusSend,Magic Number,The method contains a magic number: 4,123
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusSendNoConsumer,Magic Number,The method contains a magic number: 2,150
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestReply,Magic Number,The method contains a magic number: 4,165
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestReplyFailure,Magic Number,The method contains a magic number: 10,198
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestReplyFailure,Magic Number,The method contains a magic number: 4,198
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestNoConsumer,Magic Number,The method contains a magic number: 2,224
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestTimeout,Long Statement,The length of the statement "vertx2.eventBus().request("the_address"`"msg"`new DeliveryOptions().setSendTimeout(100)).onComplete(onFailure(failure -> {" is 122.,239
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestTimeout,Magic Number,The method contains a magic number: 100,239
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestTimeout,Magic Number,The method contains a magic number: 3,239
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestReplyReply,Long Statement,The length of the statement "assertEquals(Arrays.asList("sendRequest[the_address]"`"receiveResponse[]"`"sendRequest[generated]"`"receiveResponse[]")`ebTracer.sendEvents);" is 141.,262
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestReplyReply,Long Statement,The length of the statement "assertEquals(Arrays.asList("receiveRequest[the_address]"`"sendResponse[]"`"receiveRequest[generated]"`"sendResponse[]")`ebTracer.receiveEvents);" is 144.,262
vert.x,io.vertx.core.spi.tracing,EventBusTracerTestBase,testEventBusRequestReplyReply,Magic Number,The method contains a magic number: 8,262
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testEventBusSendPropagate,Magic Number,The method contains a magic number: 2,39
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testEventBusSendAlways,Magic Number,The method contains a magic number: 2,49
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testEventBusPublishProgagate,Magic Number,The method contains a magic number: 3,75
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testEventBusPublishAlways,Magic Number,The method contains a magic number: 3,85
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testEventBusRequestReplyPropagate,Magic Number,The method contains a magic number: 2,112
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testEventBusRequestReplyAlways,Magic Number,The method contains a magic number: 2,122
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testEventBusRequestReplyFailurePropagate,Magic Number,The method contains a magic number: 2,127
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testEventBusRequestReplyFailureAlways,Magic Number,The method contains a magic number: 2,137
vert.x,io.vertx.core.spi.tracing,EventBusTracingTestBase,testRequestReply,Magic Number,The method contains a magic number: 10,142
vert.x,io.vertx.core.spi.tracing,Http2TracerTest,testTracingWorksAfterUpgrading,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setTracingPolicy(TracingPolicy.ALWAYS).setProtocolVersion(HttpVersion.HTTP_2));" is 133.,39
vert.x,io.vertx.core.spi.tracing,Http2TracerTest,testTracingWorksAfterUpgrading,Long Statement,The length of the statement "Assert.assertTrue("Span with kind server was not found!"`fakeTracer.getFinishedSpans().stream().anyMatch(s -> SPAN_KIND_SERVER.equals(s.getTags().get(SPAN_KIND_KEY))));" is 168.,39
vert.x,io.vertx.core.spi.tracing,Http2TracerTest,testTracingWorksAfterUpgrading,Long Statement,The length of the statement "Assert.assertTrue("Span with kind client was not found!"`fakeTracer.getFinishedSpans().stream().anyMatch(s -> SPAN_KIND_CLIENT.equals(s.getTags().get(SPAN_KIND_KEY))));" is 168.,39
vert.x,io.vertx.core.spi.tracing,Http2TracerTest,testTracingWorksAfterUpgrading,Magic Number,The method contains a magic number: 2,39
vert.x,io.vertx.core.spi.tracing,Http2TracerTest,testTracingWorksAfterUpgrading,Magic Number,The method contains a magic number: 4,39
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServer,Long Statement,The length of the statement "@Override public Object receiveRequest( Context context` SpanKind kind` TracingPolicy policy` Object request` String operation` Iterable headers` TagExtractor tagExtractor){" is 173.,41
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServer,Long Statement,The length of the statement "@Override public void sendResponse( Context context` Object response` Object payload` Throwable failure` TagExtractor tagExtractor){" is 132.,41
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServer,Magic Number,The method contains a magic number: 10,41
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServer,Magic Number,The method contains a magic number: 2,41
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServer,Magic Number,The method contains a magic number: 2,41
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServer,Magic Number,The method contains a magic number: 8080,41
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServer,Magic Number,The method contains a magic number: 8080,41
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,receiveRequest,Long Parameter List,The method has 7 parameters. ,47
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,sendResponse,Long Parameter List,The method has 5 parameters. ,54
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,sendResponse,Magic Number,The method contains a magic number: 2,54
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServerError,Long Statement,The length of the statement "@Override public Object receiveRequest( Context context` SpanKind kind` TracingPolicy policy` Object request` String operation` Iterable headers` TagExtractor tagExtractor){" is 173.,86
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServerError,Long Statement,The length of the statement "@Override public void sendResponse( Context context` Object response` Object payload` Throwable failure` TagExtractor tagExtractor){" is 132.,86
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServerError,Magic Number,The method contains a magic number: 3,86
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServerError,Magic Number,The method contains a magic number: 10,86
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServerError,Magic Number,The method contains a magic number: 2,86
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServerError,Magic Number,The method contains a magic number: 8080,86
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpServerError,Magic Number,The method contains a magic number: 8080,86
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,receiveRequest,Long Parameter List,The method has 7 parameters. ,93
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,sendResponse,Long Parameter List,The method has 5 parameters. ,100
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,sendResponse,Magic Number,The method contains a magic number: 2,100
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientRequest,Magic Number,The method contains a magic number: 8080,139
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientRequestOverrideOperation,Long Statement,The length of the statement "testHttpClientRequest(new RequestOptions().setPort(8080).setHost("localhost").setURI("/").setTraceOperation("operation-override")`"operation-override");" is 152.,144
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientRequestOverrideOperation,Magic Number,The method contains a magic number: 8080,144
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientRequest,Long Statement,The length of the statement "@Override public Object sendRequest( Context context` SpanKind kind` TracingPolicy policy` Object request` String operation` BiConsumer headers` TagExtractor tagExtractor){" is 172.,149
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientRequest,Long Statement,The length of the statement "@Override public void receiveResponse( Context context` Object response` Object payload` Throwable failure` TagExtractor tagExtractor){" is 135.,149
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientRequest,Magic Number,The method contains a magic number: 10,149
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientRequest,Magic Number,The method contains a magic number: 2,149
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientRequest,Magic Number,The method contains a magic number: 8080,149
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,sendRequest,Long Parameter List,The method has 7 parameters. ,155
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,receiveResponse,Long Parameter List,The method has 5 parameters. ,165
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,receiveResponse,Magic Number,The method contains a magic number: 2,165
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientError,Long Statement,The length of the statement "@Override public Object sendRequest( Context context` SpanKind kind` TracingPolicy policy` Object request` String operation` BiConsumer headers` TagExtractor tagExtractor){" is 172.,203
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientError,Long Statement,The length of the statement "@Override public void receiveResponse( Context context` Object response` Object payload` Throwable failure` TagExtractor tagExtractor){" is 135.,203
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientError,Magic Number,The method contains a magic number: 2,203
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientError,Magic Number,The method contains a magic number: 10,203
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientError,Magic Number,The method contains a magic number: 2,203
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientError,Magic Number,The method contains a magic number: 8080,203
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,testHttpClientError,Magic Number,The method contains a magic number: 8080,203
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,sendRequest,Long Parameter List,The method has 7 parameters. ,211
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,receiveResponse,Long Parameter List,The method has 5 parameters. ,218
vert.x,io.vertx.core.spi.tracing,HttpTracerTestBase,receiveResponse,Magic Number,The method contains a magic number: 2,218
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequest,Magic Number,The method contains a magic number: 8080,33
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequest,Magic Number,The method contains a magic number: 200,33
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequest,Magic Number,The method contains a magic number: 2,33
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Magic Number,The method contains a magic number: 10,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Magic Number,The method contains a magic number: 8080,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Magic Number,The method contains a magic number: 10,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Magic Number,The method contains a magic number: 8080,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Magic Number,The method contains a magic number: 500,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Magic Number,The method contains a magic number: 8080,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Magic Number,The method contains a magic number: 200,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Magic Number,The method contains a magic number: 6,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testHttpServerRequestWithClient,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1a41e72f,54
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testMultipleHttpServerRequest,Magic Number,The method contains a magic number: 10,104
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testMultipleHttpServerRequest,Magic Number,The method contains a magic number: 8080,104
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testMultipleHttpServerRequest,Magic Number,The method contains a magic number: 500,104
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testMultipleHttpServerRequest,Magic Number,The method contains a magic number: 8080,104
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testMultipleHttpServerRequest,Magic Number,The method contains a magic number: 200,104
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testMultipleHttpServerRequest,Magic Number,The method contains a magic number: 4,104
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testMultipleHttpServerRequest,Magic Number,The method contains a magic number: 4,104
vert.x,io.vertx.core.spi.tracing,HttpTracingTestBase,testMultipleHttpServerRequest,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3da5e696,104
vert.x,io.vertx.core.spi.transport,Transport,convert,Long Statement,The length of the statement "throw new IllegalArgumentException("Domain socket are not supported by JDK transport` you need to use native transport to use them");" is 133.,66
vert.x,io.vertx.core.spi.transport,Transport,configure,Long Statement,The length of the statement "throw new IllegalArgumentException("Could not find network interface with name " + options.getMulticastNetworkInterface());" is 123.,119
vert.x,io.vertx.core.streams.impl,InboundBuffer,InboundBuffer,Magic Number,The method contains a magic number: 16L,85
vert.x,io.vertx.core.streams.impl,InboundBuffer,drain,Complex Method,Cyclomatic complexity of the method is 8,206
vert.x,io.vertx.core.streams.impl,InboundBuffer,fetch,Complex Conditional,The conditional expression emitting || (isEmpty() && !overflow) is complex.,272
vert.x,io.vertx.core.streams.impl,PipeImpl,to,Empty catch clause,The method has an empty catch block.,64
vert.x,io.vertx.core.streams.impl,PipeImpl,to,Empty catch clause,The method has an empty catch block.,64
vert.x,io.vertx.core.streams.impl,PipeImpl,to,Empty catch clause,The method has an empty catch block.,64
vert.x,io.vertx.core.streams,InboundBufferTest,testFlowingAdd,Magic Number,The method contains a magic number: 2,106
vert.x,io.vertx.core.streams,InboundBufferTest,testFlowingRefill,Magic Number,The method contains a magic number: 5L,124
vert.x,io.vertx.core.streams,InboundBufferTest,testFlowingRefill,Magic Number,The method contains a magic number: 8,124
vert.x,io.vertx.core.streams,InboundBufferTest,testFlowingRefill,Magic Number,The method contains a magic number: 8,124
vert.x,io.vertx.core.streams,InboundBufferTest,testFlowingRefill,Magic Number,The method contains a magic number: 4,124
vert.x,io.vertx.core.streams,InboundBufferTest,testPauseWhenFull,Magic Number,The method contains a magic number: 5L,147
vert.x,io.vertx.core.streams,InboundBufferTest,testPauseWhenFull,Magic Number,The method contains a magic number: 5,147
vert.x,io.vertx.core.streams,InboundBufferTest,testPauseWhenFull,Magic Number,The method contains a magic number: 4,147
vert.x,io.vertx.core.streams,InboundBufferTest,testPausedResume,Magic Number,The method contains a magic number: 5L,172
vert.x,io.vertx.core.streams,InboundBufferTest,testPausedResume,Magic Number,The method contains a magic number: 5,172
vert.x,io.vertx.core.streams,InboundBufferTest,testPausedDrain,Magic Number,The method contains a magic number: 2,195
vert.x,io.vertx.core.streams,InboundBufferTest,testPausedDrain,Magic Number,The method contains a magic number: 5L,195
vert.x,io.vertx.core.streams,InboundBufferTest,testPausedDrain,Magic Number,The method contains a magic number: 5,195
vert.x,io.vertx.core.streams,InboundBufferTest,testPausedRequestLimited,Magic Number,The method contains a magic number: 3L,223
vert.x,io.vertx.core.streams,InboundBufferTest,testPushReturnsTrueUntilHighWatermark,Magic Number,The method contains a magic number: 2L,258
vert.x,io.vertx.core.streams,InboundBufferTest,testHighWaterMark,Magic Number,The method contains a magic number: 5L,272
vert.x,io.vertx.core.streams,InboundBufferTest,testHighWaterMark,Magic Number,The method contains a magic number: 5,272
vert.x,io.vertx.core.streams,InboundBufferTest,testEmptyHandler,Magic Number,The method contains a magic number: 4L,284
vert.x,io.vertx.core.streams,InboundBufferTest,testEmptyHandler,Magic Number,The method contains a magic number: 3,284
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitWhenHandlingLastItem,Magic Number,The method contains a magic number: 4L,311
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 5L,335
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 5,335
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 5L,377
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 5,377
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 9,377
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 9,377
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 10,377
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 5,377
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInElementHandler,Magic Number,The method contains a magic number: 10,377
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInDrainHandler1,Magic Number,The method contains a magic number: 4L,416
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInDrainHandler1,Magic Number,The method contains a magic number: 4L,416
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInDrainHandler2,Magic Number,The method contains a magic number: 2,451
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInDrainHandler2,Magic Number,The method contains a magic number: 5L,451
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInDrainHandler2,Magic Number,The method contains a magic number: 5,451
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInDrainHandler2,Magic Number,The method contains a magic number: 10,451
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInDrainHandler2,Magic Number,The method contains a magic number: 6,451
vert.x,io.vertx.core.streams,InboundBufferTest,testEmitInDrainHandler2,Magic Number,The method contains a magic number: 5,451
vert.x,io.vertx.core.streams,InboundBufferTest,testDrainAfter,Magic Number,The method contains a magic number: 5L,491
vert.x,io.vertx.core.streams,InboundBufferTest,testDrainAfter,Magic Number,The method contains a magic number: 5,491
vert.x,io.vertx.core.streams,InboundBufferTest,testDrainAfter,Magic Number,The method contains a magic number: 6,491
vert.x,io.vertx.core.streams,InboundBufferTest,testDrainAfter,Magic Number,The method contains a magic number: 6,491
vert.x,io.vertx.core.streams,InboundBufferTest,testPauseInElementHandler,Magic Number,The method contains a magic number: 5L,514
vert.x,io.vertx.core.streams,InboundBufferTest,testPauseInElementHandler,Magic Number,The method contains a magic number: 5,514
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllEmitInHandler,Magic Number,The method contains a magic number: 4L,534
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllEmitInHandler,Magic Number,The method contains a magic number: 3,534
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllEmitInHandler,Magic Number,The method contains a magic number: 2,534
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllEmitInHandler,Magic Number,The method contains a magic number: 3,534
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenPaused,Magic Number,The method contains a magic number: 3,553
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenPaused,Magic Number,The method contains a magic number: 4L,553
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenPaused,Magic Number,The method contains a magic number: 5,553
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenPaused,Magic Number,The method contains a magic number: 5,553
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenPaused,Magic Number,The method contains a magic number: 5,553
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenFlowing,Magic Number,The method contains a magic number: 4L,586
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenFlowing,Magic Number,The method contains a magic number: 4,586
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenFlowing,Magic Number,The method contains a magic number: 4,586
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 4L,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 2,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 4,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 5,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 2,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 4,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 2,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 3,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 4,607
vert.x,io.vertx.core.streams,InboundBufferTest,testAddAllWhenDelivering,Magic Number,The method contains a magic number: 5,607
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 2,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 4L,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 2,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 3,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 4,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 5,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 3,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 4,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 5,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 3,627
vert.x,io.vertx.core.streams,InboundBufferTest,testPollDuringEmission,Magic Number,The method contains a magic number: 6,627
vert.x,io.vertx.core.streams,InboundBufferTest,testCheckThatPauseAfterResumeWontDoAnyEmission,Magic Number,The method contains a magic number: 4L,661
vert.x,io.vertx.core.streams,InboundBufferTest,testCheckThatPauseAfterResumeWontDoAnyEmission,Magic Number,The method contains a magic number: 20,661
vert.x,io.vertx.core.streams,InboundBufferTest,testRejectWrongThread,Empty catch clause,The method has an empty catch block.,744
vert.x,io.vertx.core.streams,InboundBufferTest,testRejectWrongThread,Empty catch clause,The method has an empty catch block.,744
vert.x,io.vertx.core.streams,InboundBufferTest,testRejectWrongThread,Magic Number,The method contains a magic number: 2,744
vert.x,io.vertx.core.streams,PipeTest,testPauseResume,Magic Number,The method contains a magic number: 5,168
vert.x,io.vertx.core.streams,PipeTest,testPauseResume,Magic Number,The method contains a magic number: 10,168
vert.x,io.vertx.core.streams,PipeTest,testPauseResume,Magic Number,The method contains a magic number: 5,168
vert.x,io.vertx.core.streams,PipeTest,testPauseResume,Magic Number,The method contains a magic number: 2,168
vert.x,io.vertx.core.streams,PumpTest,testPumpBasic,Magic Number,The method contains a magic number: 1001,29
vert.x,io.vertx.core.streams,PumpTest,testPumpBasic,Magic Number,The method contains a magic number: 10,29
vert.x,io.vertx.core.streams,PumpTest,testPumpBasic,Magic Number,The method contains a magic number: 10,29
vert.x,io.vertx.core.streams,PumpTest,testPumpPauseResume,Magic Number,The method contains a magic number: 5,57
vert.x,io.vertx.core.streams,PumpTest,testPumpPauseResume,Magic Number,The method contains a magic number: 10,57
vert.x,io.vertx.core.streams,PumpTest,testPumpPauseResume,Magic Number,The method contains a magic number: 4,57
vert.x,io.vertx.core.streams,PumpTest,testPumpReadStreamNull2,Magic Number,The method contains a magic number: 1000,101
vert.x,io.vertx.core.streams,PumpTest,testPumpWriteStreamNull2,Magic Number,The method contains a magic number: 1000,107
vert.x,io.vertx.benchmarks,CombinerExecutorBenchmark,setup,Magic Number,The method contains a magic number: 2,46
vert.x,io.vertx.benchmarks,CombinerExecutorBenchmark,setup,Magic Number,The method contains a magic number: 20,46
vert.x,io.vertx.benchmarks,ConcurrentCyclicSequenceBenchmark,setup,Magic Number,The method contains a magic number: 2,32
vert.x,io.vertx.benchmarks,ConcurrentCyclicSequenceBenchmark,setup,Magic Number,The method contains a magic number: 4,32
vert.x,io.vertx.benchmarks,ConcurrentCyclicSequenceBenchmark,setup,Magic Number,The method contains a magic number: 8,32
vert.x,io.vertx.benchmarks,ConcurrentCyclicSequenceBenchmark,setup,Magic Number,The method contains a magic number: 16,32
vert.x,io.vertx.benchmarks,HeadersEncodeBenchmark,setup,Magic Number,The method contains a magic number: 1024,61
vert.x,io.vertx.benchmarks,HeadersUtils,setBaseHeaders,Long Statement,The length of the statement "headers.add(toString(io.vertx.core.http.HttpHeaders.CONTENT_LENGTH`!asciiNames)`toString(CONTENT_LENGTH_HEADER`!asciiValues));" is 126.,31
vert.x,io.vertx.core.http.headers,CaseInsensitiveHeadersTest,hash,Magic Number,The method contains a magic number: 32,42
vert.x,io.vertx.core.http.headers,CaseInsensitiveHeadersTest,hash,Magic Number,The method contains a magic number: 31,42
vert.x,io.vertx.core.http.headers,CaseInsensitiveHeadersTest,index,Magic Number,The method contains a magic number: 17,61
vert.x,io.vertx.core.http.headers,CaseInsensitiveHeadersTest,testHashMININT,Magic Number,The method contains a magic number: 31,70
vert.x,io.vertx.core.http.headers,HeadersTestBase,testAddAllMultiMap,Magic Number,The method contains a magic number: 2,152
vert.x,io.vertx.core.http.headers,HeadersTestBase,testGetAll,Magic Number,The method contains a magic number: 2,239
vert.x,io.vertx.core.http.headers,HeadersTestBase,testSize,Magic Number,The method contains a magic number: 2,463
vert.x,io.vertx.core.http.headers,HeadersTestBase,testSize,Magic Number,The method contains a magic number: 2,463
vert.x,io.vertx.core.http.headers,HeadersTestBase,testSetAllOnExistingMapUsingMultiMapHttp1,Magic Number,The method contains a magic number: 2,606
vert.x,io.vertx.core.http.headers,HeadersTestBase,testSetAllOnExistingMapUsingHashMapHttp1,Magic Number,The method contains a magic number: 2,624
vert.x,io.vertx.core.http.headers,HeadersTestBase,testSetAllOnExistingMapUsingMultiMapHttp2,Magic Number,The method contains a magic number: 2,642
vert.x,io.vertx.core.http.headers,HeadersTestBase,testSetAllOnExistingMapUsingHashMapHttp2,Magic Number,The method contains a magic number: 2,660
vert.x,io.vertx.core.http.headers,Http2HeadersAdaptorsTest,assertHeaderNames,Long Statement,The length of the statement "assertEquals(new HashSet<>(Arrays.asList(expected))`headers.names().stream().map(CharSequence::toString).collect(Collectors.toSet()));" is 134.,111
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,checkNameCollision,Magic Number,The method contains a magic number: 0xF,53
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,checkNameCollision,Magic Number,The method contains a magic number: 0xF,53
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testSetAll,Magic Number,The method contains a magic number: 2,122
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testGetHashColl,Magic Number,The method contains a magic number: 2,144
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testGetHashColl,Magic Number,The method contains a magic number: 2,144
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testGetAllHashColl,Magic Number,The method contains a magic number: 2,165
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testGetAllHashColl,Magic Number,The method contains a magic number: 2,165
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testRemoveHashColl,Magic Number,The method contains a magic number: 3,185
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testRemoveHashColl,Magic Number,The method contains a magic number: 2,185
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 2,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 3,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 4,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 5,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 6,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 7,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 2,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 3,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 4,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testNonCharSequenceValue,Magic Number,The method contains a magic number: 5,225
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testInvalidChars,Empty catch clause,The method has an empty catch block.,300
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testInvalidChars,Magic Number,The method contains a magic number: 9,300
vert.x,io.vertx.core.http.headers,VertxHttpHeadersTest,testInvalidChars,Magic Number,The method contains a magic number: 10,300
vert.x,io.vertx.it,CustomJsonFactory,toString,Long Statement,The length of the statement "return ((JsonObject)object).stream().map(member -> "\"" + member.getKey() + "\":"+ toString(member.getValue()`pretty)).collect(Collectors.joining("`"`"{"`"}"));" is 160.,44
vert.x,io.vertx.it,CustomVertxThread,CustomVertxThread,Long Parameter List,The method has 5 parameters. ,8
vert.x,io.vertx.it,CustomVertxThreadFactory,newVertxThread,Long Parameter List,The method has 5 parameters. ,10
vert.x,io.vertx.it,ExecutorServiceFactoryTest,testExecuteBlocking,Magic Number,The method contains a magic number: 2,26
vert.x,io.vertx.it,ExecutorServiceFactoryTest,testExecuteBlocking,Magic Number,The method contains a magic number: 10,26
vert.x,io.vertx.it,ExecutorServiceFactoryTest,testExecuteBlocking,Magic Number,The method contains a magic number: 30,26
vert.x,io.vertx.it,HAProxyTest,testHttpWithoutHAProxySupport,Long Statement,The length of the statement "client.request(HttpMethod.GET`DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST`"/").compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 162.,29
vert.x,io.vertx.it,JsonCodecTest,testJsonObject,Empty catch clause,The method has an empty catch block.,24
vert.x,io.vertx.it,JsonTest,testJsonObject,Empty catch clause,The method has an empty catch block.,33
vert.x,io.vertx.it,JsonTest,testJsonArray,Empty catch clause,The method has an empty catch block.,46
vert.x,io.vertx.it,JsonTest,testHttp,Long Statement,The length of the statement "client.request(HttpMethod.GET`DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST`"/").compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(onSuccess(body -> {" is 162.,59
vert.x,io.vertx.it,NettyCompatTest,testHttp2,Long Statement,The length of the statement "vertx.createHttpServer(new HttpServerOptions().setUseAlpn(true).setSsl(true).setSslEngineOptions(new OpenSSLEngineOptions()).setKeyCertOptions(Cert.SERVER_JKS.get())).requestHandler(req -> req.response().end("OK")).listen(8443`"localhost").onComplete(onSuccess(s -> {" is 267.,34
vert.x,io.vertx.it,NettyCompatTest,testHttp2,Long Statement,The length of the statement "HttpClient client=vertx.createHttpClient(new HttpClientOptions().setSsl(true).setSslEngineOptions(new OpenSSLEngineOptions()).setTrustStoreOptions(Trust.SERVER_JKS.get()));" is 172.,34
vert.x,io.vertx.it,NettyCompatTest,testHttp2,Long Statement,The length of the statement "client.request(HttpMethod.GET`8443`"localhost"`"/somepath").compose(req -> req.send().compose(HttpClientResponse::body)).onComplete(buff -> {" is 141.,34
vert.x,io.vertx.it,NettyCompatTest,testHttp2,Magic Number,The method contains a magic number: 8443,34
vert.x,io.vertx.it,NettyCompatTest,testHttp2,Magic Number,The method contains a magic number: 8443,34
vert.x,io.vertx.it,SLF4JLogDelegateTest,quiet,Empty catch clause,The method has an empty catch block.,138
vert.x,io.vertx.it,SSLEngineTest,testDefaultEngineWithAlpn,Long Statement,The length of the statement "doTest(null`true`HttpVersion.HTTP_2`hasAlpn() | OPEN_SSL ? null : "ALPN not available for JDK SSL/TLS engine"`hasAlpn() ? "jdk" : "openssl"`false);" is 147.,41
vert.x,io.vertx.it,SSLEngineTest,testJdkEngineWithAlpn,Long Statement,The length of the statement "doTest(new JdkSSLEngineOptions()`true`HttpVersion.HTTP_2`hasAlpn() ? null : "ALPN not available for JDK SSL/TLS engine"`"jdk"`false);" is 133.,46
vert.x,io.vertx.it,SSLEngineTest,testOpenSSLEngine,Long Statement,The length of the statement "doTest(new OpenSSLEngineOptions()`false`HttpVersion.HTTP_1_1`OPEN_SSL ? null : "OpenSSL is not available"`"openssl"`true);" is 122.,66
vert.x,io.vertx.it,SSLEngineTest,doTest,Long Parameter List,The method has 6 parameters. ,71
vert.x,io.vertx.it,SSLEngineTest,doTest,Long Statement,The length of the statement "HttpServerOptions options=new HttpServerOptions().setSslEngineOptions(engine).setPort(DEFAULT_HTTP_PORT).setHost(DEFAULT_HTTP_HOST).setKeyCertOptions(Cert.SERVER_PEM.get()).setSsl(true).setUseAlpn(useAlpn);" is 206.,71
vert.x,io.vertx.it,SSLEngineTest,doTest,Long Statement,The length of the statement "client=vertx.createHttpClient(new HttpClientOptions().setSslEngineOptions(engine).setSsl(true).setUseAlpn(useAlpn).setTrustAll(true).setProtocolVersion(version));" is 162.,71
vert.x,io.vertx.it,SSLEngineTest,doTest,Long Statement,The length of the statement "client.request(HttpMethod.GET`DEFAULT_HTTP_PORT`DEFAULT_HTTP_HOST`"/somepath").compose(req -> req.send().andThen(onSuccess(resp -> assertEquals(200`resp.statusCode()))).compose(HttpClientResponse::end)).onComplete(onSuccess(v -> testComplete()));" is 246.,71
vert.x,io.vertx.it,SSLEngineTest,doTest,Magic Number,The method contains a magic number: 200,71
vert.x,io.vertx.it,StreamRecording,get,Empty catch clause,The method has an empty catch block.,46
vert.x,io.vertx.it,TransportTest,testNoNative,Empty catch clause,The method has an empty catch block.,38
vert.x,io.vertx.it,TransportTest,testNoNative,Empty catch clause,The method has an empty catch block.,38
vert.x,io.vertx.it,TransportTest,testNetServer,Magic Number,The method contains a magic number: 1234,63
vert.x,io.vertx.it,TransportTest,testNetServer,Magic Number,The method contains a magic number: 1234,63
vert.x,io.vertx.test.core,AsyncTestBase,await,Magic Number,The method contains a magic number: 2,120
vert.x,io.vertx.test.core,AsyncTestBase,afterAsyncTestBase,Complex Conditional,The conditional expression throwable != null && thrownThread != Thread.currentThread() && !awaitCalled is complex.,160
vert.x,io.vertx.test.core,AsyncTestBase,awaitFuture,Magic Number,The method contains a magic number: 10,606
vert.x,io.vertx.test.core,AsyncTestBase,awaitFuture,Magic Number,The method contains a magic number: 10,614
vert.x,io.vertx.test.core,AsyncTestBase,awaitLatch,Magic Number,The method contains a magic number: 10,629
vert.x,io.vertx.test.core,AsyncTestBase,assertWaitUntil,Magic Number,The method contains a magic number: 10000,637
vert.x,io.vertx.test.core,AsyncTestBase,waitUntil,Magic Number,The method contains a magic number: 10000,641
vert.x,io.vertx.test.core,AsyncTestBase,waitUntilEquals,Magic Number,The method contains a magic number: 10000,645
vert.x,io.vertx.test.core,AsyncTestBase,waitUntil,Empty catch clause,The method has an empty catch block.,661
vert.x,io.vertx.test.core,AsyncTestBase,waitUntil,Magic Number,The method contains a magic number: 10,661
vert.x,io.vertx.test.core,AsyncTestBaseTest,setUp,Magic Number,The method contains a magic number: 10,35
vert.x,io.vertx.test.core,AsyncTestBaseTest,tearDown,Magic Number,The method contains a magic number: 10,41
vert.x,io.vertx.test.core,AsyncTestBaseTest,testAssertionFailedFromOtherThreadAwaitBeforeAssertAndTestComplete,Magic Number,The method contains a magic number: 1000,60
vert.x,io.vertx.test.core,AsyncTestBaseTest,testAssertionFailedFromOtherThreadForgotToCallAwait,Empty catch clause,The method has an empty catch block.,79
vert.x,io.vertx.test.core,AsyncTestBaseTest,testAssertionFailedFromOtherThreadForgotToCallAwait,Magic Number,The method contains a magic number: 500,79
vert.x,io.vertx.test.core,AsyncTestBaseTest,testTimeout,Magic Number,The method contains a magic number: 5000,123
vert.x,io.vertx.test.core,AsyncTestBaseTest,testTimeout,Magic Number,The method contains a magic number: 1.5,123
vert.x,io.vertx.test.core,AsyncTestBaseTest,testTestCompleteCalledMultipleTimes,Empty catch clause,The method has an empty catch block.,179
vert.x,io.vertx.test.core,AsyncTestBaseTest,testAwaitCalledMultipleTimes,Empty catch clause,The method has an empty catch block.,193
vert.x,io.vertx.test.core,AsyncTestBaseTest,waitForMultiple,Magic Number,The method contains a magic number: 10,241
vert.x,io.vertx.test.core,AsyncTestBaseTest,waitForMultiple,Magic Number,The method contains a magic number: 10,241
vert.x,io.vertx.test.core,AsyncTestBaseTest,increaseToWait,Magic Number,The method contains a magic number: 10,256
vert.x,io.vertx.test.core,AsyncTestBaseTest,increaseToWait,Magic Number,The method contains a magic number: 3,256
vert.x,io.vertx.test.core,AsyncTestBaseTest,increaseToWait,Magic Number,The method contains a magic number: 9,256
vert.x,io.vertx.test.core,TestUtils,randomByte,Magic Number,The method contains a magic number: 255,145
vert.x,io.vertx.test.core,TestUtils,randomByte,Magic Number,The method contains a magic number: 128,145
vert.x,io.vertx.test.core,TestUtils,randomPortInt,Magic Number,The method contains a magic number: 65536,159
vert.x,io.vertx.test.core,TestUtils,randomHighPortInt,Magic Number,The method contains a magic number: 65536,166
vert.x,io.vertx.test.core,TestUtils,randomHighPortInt,Magic Number,The method contains a magic number: 1024,166
vert.x,io.vertx.test.core,TestUtils,randomHighPortInt,Magic Number,The method contains a magic number: 1024,166
vert.x,io.vertx.test.core,TestUtils,randomChar,Magic Number,The method contains a magic number: 16,211
vert.x,io.vertx.test.core,TestUtils,randomShort,Magic Number,The method contains a magic number: 15,218
vert.x,io.vertx.test.core,TestUtils,randomUnicodeString,Magic Number,The method contains a magic number: 0xFFFF,239
vert.x,io.vertx.test.core,TestUtils,randomUnicodeString,Magic Number,The method contains a magic number: 0xFFFE,239
vert.x,io.vertx.test.core,TestUtils,randomUnicodeString,Magic Number,The method contains a magic number: 0xFFFF,239
vert.x,io.vertx.test.core,TestUtils,randomUnicodeString,Magic Number,The method contains a magic number: 0xD800,239
vert.x,io.vertx.test.core,TestUtils,randomUnicodeString,Magic Number,The method contains a magic number: 0xDFFF,239
vert.x,io.vertx.test.core,TestUtils,randomAlphaString,Magic Number,The method contains a magic number: 65,257
vert.x,io.vertx.test.core,TestUtils,randomAlphaString,Magic Number,The method contains a magic number: 25,257
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Long Statement,The length of the statement "int maxFrameSize=Http2CodecUtil.MAX_FRAME_SIZE_LOWER_BOUND + randomPositiveInt() % (Http2CodecUtil.MAX_FRAME_SIZE_UPPER_BOUND - Http2CodecUtil.MAX_FRAME_SIZE_LOWER_BOUND);" is 171.,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 10,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 10,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 10,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 10,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 10,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 10,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 10,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 10,272
vert.x,io.vertx.test.core,TestUtils,randomHttp2Settings,Magic Number,The method contains a magic number: 0xFFFFFFFFL,272
vert.x,io.vertx.test.core,TestUtils,randomMultiMap,Magic Number,The method contains a magic number: 19,295
vert.x,io.vertx.test.core,TestUtils,randomMultiMap,Magic Number,The method contains a magic number: 19,295
vert.x,io.vertx.test.core,TestUtils,randomEnumSet,Magic Number,The method contains a magic number: 2,307
vert.x,io.vertx.test.core,TestUtils,assertIllegalArgumentException,Empty catch clause,The method has an empty catch block.,336
vert.x,io.vertx.test.core,TestUtils,assertNullPointerException,Empty catch clause,The method has an empty catch block.,350
vert.x,io.vertx.test.core,TestUtils,assertIllegalStateException,Empty catch clause,The method has an empty catch block.,364
vert.x,io.vertx.test.core,TestUtils,assertIndexOutOfBoundsException,Empty catch clause,The method has an empty catch block.,384
vert.x,io.vertx.test.core,TestUtils,randomKeyCertOptions,Magic Number,The method contains a magic number: 3,411
vert.x,io.vertx.test.core,TestUtils,randomKeyCertOptions,Magic Number,The method contains a magic number: 100,411
vert.x,io.vertx.test.core,TestUtils,randomKeyCertOptions,Magic Number,The method contains a magic number: 100,411
vert.x,io.vertx.test.core,TestUtils,randomKeyCertOptions,Magic Number,The method contains a magic number: 100,411
vert.x,io.vertx.test.core,TestUtils,randomKeyCertOptions,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@24898ae6,411
vert.x,io.vertx.test.core,TestUtils,randomTrustOptions,Magic Number,The method contains a magic number: 3,432
vert.x,io.vertx.test.core,TestUtils,randomTrustOptions,Magic Number,The method contains a magic number: 100,432
vert.x,io.vertx.test.core,TestUtils,randomTrustOptions,Magic Number,The method contains a magic number: 100,432
vert.x,io.vertx.test.core,TestUtils,randomTrustOptions,Magic Number,The method contains a magic number: 100,432
vert.x,io.vertx.test.core,TestUtils,randomTrustOptions,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@63a7183c,432
vert.x,io.vertx.test.core,TestUtils,leftPad,Long Statement,The length of the statement "return BufferInternal.buffer(Unpooled.buffer().writerIndex(padding).readerIndex(padding).writeBytes(((BufferInternal)buffer).getByteBuf()));" is 140.,453
vert.x,io.vertx.test.core,VertxTestBase,close,Magic Number,The method contains a magic number: 180,103
vert.x,io.vertx.test.core,VertxTestBase,startNodes,Magic Number,The method contains a magic number: 2,166
vert.x,io.vertx.test.fakecluster,FakeClusterManager,leave,Long Statement,The length of the statement "return infos.stream().filter(info -> !info.nodeId().equals(nodeID)).collect(collectingAndThen(toList()`list -> list.isEmpty() ? null : list));" is 142.,188
vert.x,io.vertx.test.fakecluster,FakeClusterManager,removeRegistration,Long Statement,The length of the statement "res=infos.stream().filter(Predicate.isEqual(registrationInfo).negate()).collect(collectingAndThen(toList()`list -> list.isEmpty() ? null : list));" is 146.,252
vert.x,io.vertx.test.fakedns,FakeDNSServer,A_store,Magic Number,The method contains a magic number: 100,55
vert.x,io.vertx.test.fakedns,FakeDNSServer,A_store,Magic Number,The method contains a magic number: 100,67
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveAAAA,Magic Number,The method contains a magic number: 100,131
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,133
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveMX,Magic Number,The method contains a magic number: 100,150
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,152
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveTXT,Magic Number,The method contains a magic number: 100,169
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,171
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveNS,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,187
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveNS,Magic Number,The method contains a magic number: 100,187
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,189
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveCNAME,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,205
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveCNAME,Magic Number,The method contains a magic number: 100,205
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,207
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolvePTR,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,223
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolvePTR,Magic Number,The method contains a magic number: 100,223
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,225
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveSRV,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,241
vert.x,io.vertx.test.fakedns,FakeDNSServer,testResolveSRV,Magic Number,The method contains a magic number: 100,241
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,243
vert.x,io.vertx.test.fakedns,FakeDNSServer,testLookup4,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,262
vert.x,io.vertx.test.fakedns,FakeDNSServer,testLookup4,Magic Number,The method contains a magic number: 100,262
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,264
vert.x,io.vertx.test.fakedns,FakeDNSServer,testLookup6,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,281
vert.x,io.vertx.test.fakedns,FakeDNSServer,testLookup6,Magic Number,The method contains a magic number: 100,281
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,283
vert.x,io.vertx.test.fakedns,FakeDNSServer,testLookupNonExisting,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,304
vert.x,io.vertx.test.fakedns,FakeDNSServer,testReverseLookup,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,313
vert.x,io.vertx.test.fakedns,FakeDNSServer,testReverseLookup,Magic Number,The method contains a magic number: 100,313
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,315
vert.x,io.vertx.test.fakedns,FakeDNSServer,testLookup4CNAME,Long Statement,The length of the statement "@Override public Set<ResourceRecord> getRecords( QuestionRecord questionRecord) throws org.apache.directory.server.dns.DnsException {" is 133.,335
vert.x,io.vertx.test.fakedns,FakeDNSServer,testLookup4CNAME,Magic Number,The method contains a magic number: 100,335
vert.x,io.vertx.test.fakedns,FakeDNSServer,testLookup4CNAME,Magic Number,The method contains a magic number: 100,335
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,337
vert.x,io.vertx.test.fakedns,FakeDNSServer,getRecords,Magic Number,The method contains a magic number: 100,337
vert.x,io.vertx.test.fakemetrics,HandlerMetric,toString,Long Statement,The length of the statement "return "HandlerRegistration[address=" + address + "`repliedAddress="+ repliedAddress+ "`deliveredCount="+ deliveredCount.get()+ "`discardCount="+ discardCount+ "`localCount="+ localDeliveredCount.get()+ "]";" is 207.,34
vert.x,io.vertx.test.fakemetrics,SentMessage,hashCode,Magic Number,The method contains a magic number: 31,37
vert.x,io.vertx.test.fakemetrics,SentMessage,hashCode,Magic Number,The method contains a magic number: 31,37
vert.x,io.vertx.test.fakemetrics,SentMessage,hashCode,Magic Number,The method contains a magic number: 31,37
vert.x,io.vertx.test.fakestream,FakeStream,checkPending,Complex Method,Cyclomatic complexity of the method is 8,162
vert.x,io.vertx.test.fakestream,FakeStreamTest,testEmit,Magic Number,The method contains a magic number: 2,46
vert.x,io.vertx.test.fakestream,FakeStreamTest,testEmit,Magic Number,The method contains a magic number: 2,46
vert.x,io.vertx.test.fakestream,FakeStreamTest,testPause,Magic Number,The method contains a magic number: 16,55
vert.x,io.vertx.test.fakestream,FakeStreamTest,testPause,Magic Number,The method contains a magic number: 16,55
vert.x,io.vertx.test.fakestream,FakeStreamTest,testResume,Magic Number,The method contains a magic number: 17,63
vert.x,io.vertx.test.fakestream,FakeStreamTest,testResume,Magic Number,The method contains a magic number: 17,63
vert.x,io.vertx.test.fakestream,FakeStreamTest,testFetch,Magic Number,The method contains a magic number: 17,72
vert.x,io.vertx.test.fakestream,FakeStreamTest,testFetch,Magic Number,The method contains a magic number: 17,72
vert.x,io.vertx.test.fakestream,FakeStreamTest,testFetch,Magic Number,The method contains a magic number: 17,72
vert.x,io.vertx.test.fakestream,FakeStreamTest,testEmitReentrancy,Magic Number,The method contains a magic number: 2,98
vert.x,io.vertx.test.fakestream,FakeStreamTest,testEmitReentrancy,Magic Number,The method contains a magic number: 3,98
vert.x,io.vertx.test.fakestream,FakeStreamTest,testEmitReentrancy,Magic Number,The method contains a magic number: 2,98
vert.x,io.vertx.test.fakestream,FakeStreamTest,testFetchReentrancy,Magic Number,The method contains a magic number: 2,114
vert.x,io.vertx.test.fakestream,FakeStreamTest,testFetchReentrancy,Magic Number,The method contains a magic number: 3,114
vert.x,io.vertx.test.fakestream,FakeStreamTest,testFetchReentrancy,Magic Number,The method contains a magic number: 2,114
vert.x,io.vertx.test.fakestream,FakeStreamTest,testAsyncEndDeferred,Magic Number,The method contains a magic number: 3,159
vert.x,io.vertx.test.fakestream,FakeStreamTest,testAck,Magic Number,The method contains a magic number: 2,182
vert.x,io.vertx.test.fakestream,FakeStreamTest,testAck,Magic Number,The method contains a magic number: 2,182
vert.x,io.vertx.test.faketracer,FakeTracer,decode,Complex Conditional,The conditional expression traceId != null && spanId != null && spanParentId != null is complex.,77
vert.x,io.vertx.test.faketracer,FakeTracer,receiveRequest,Long Parameter List,The method has 7 parameters. ,111
vert.x,io.vertx.test.faketracer,FakeTracer,sendResponse,Long Parameter List,The method has 5 parameters. ,126
vert.x,io.vertx.test.faketracer,FakeTracer,sendRequest,Long Parameter List,The method has 7 parameters. ,134
vert.x,io.vertx.test.faketracer,FakeTracer,receiveResponse,Long Parameter List,The method has 5 parameters. ,153
vert.x,io.vertx.test.faketracer,Span,Span,Long Parameter List,The method has 6 parameters. ,38
vert.x,io.vertx.test.proxy,HAProxy,start,Magic Number,The method contains a magic number: 10,37
vert.x,io.vertx.test.proxy,HAProxy,createVersion1TCP4ProtocolHeader,Long Statement,The length of the statement "return Buffer.buffer(String.format("PROXY TCP4 %s %s %d %d\r\n"`remote.hostAddress()`local.hostAddress()`remote.port()`local.port()));" is 134.,104
vert.x,io.vertx.test.proxy,HAProxy,createVersion1TCP6ProtocolHeader,Long Statement,The length of the statement "return Buffer.buffer(String.format("PROXY TCP6 %s %s %d %d\r\n"`remote.hostAddress()`local.hostAddress()`remote.port()`local.port()));" is 134.,108
vert.x,io.vertx.test.proxy,HAProxy,createVersion2TCP4ProtocolHeader,Magic Number,The method contains a magic number: 0x11,116
vert.x,io.vertx.test.proxy,HAProxy,createVersion2TCP6ProtocolHeader,Magic Number,The method contains a magic number: 0x21,120
vert.x,io.vertx.test.proxy,HAProxy,createVersion2UDP4ProtocolHeader,Magic Number,The method contains a magic number: 0x12,124
vert.x,io.vertx.test.proxy,HAProxy,createVersion2UDP6ProtocolHeader,Magic Number,The method contains a magic number: 0x22,128
vert.x,io.vertx.test.proxy,HAProxy,createVersion2UnixStreamProtocolHeader,Magic Number,The method contains a magic number: 0x31,132
vert.x,io.vertx.test.proxy,HAProxy,createVersion2UnixDatagramProtocolHeader,Magic Number,The method contains a magic number: 0x32,136
vert.x,io.vertx.test.proxy,HAProxy,createUnixStreamDatagramProtocolHeader,Magic Number,The method contains a magic number: 108,144
vert.x,io.vertx.test.proxy,HAProxy,createIPv4IPv6ProtocolHeader,Long Statement,The length of the statement "return createVersion2ProtocolHeader(protocolByte`Buffer.buffer().appendBytes(remoteInetAddress.getAddress()).appendBytes(localInetAddress.getAddress()).appendUnsignedShort(remote.port()).appendUnsignedShort(local.port()));" is 222.,156
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 15,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x0D,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x0A,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 2,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x0D,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 3,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x0A,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 4,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 5,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x0D,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 6,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x0A,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 7,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x51,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 8,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x55,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 9,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x49,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 10,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x54,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 11,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x0A,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 12,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 0x21,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 13,174
vert.x,io.vertx.test.proxy,HAProxy,createVersion2ProtocolHeader,Magic Number,The method contains a magic number: 14,174
vert.x,io.vertx.test.proxy,HttpProxy,start,Complex Conditional,The conditional expression port == 8080 || port < 1024 && port != 443 is complex.,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Complex Method,Cyclomatic complexity of the method is 20,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Long Method,The method has 142 lines of code.,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 407,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 403,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 443,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 8080,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 1024,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 443,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 403,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 403,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 500,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 504,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 400,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 405,68
vert.x,io.vertx.test.proxy,HttpProxy,start,Magic Number,The method contains a magic number: 10,68
vert.x,io.vertx.test.proxy,Socks4Proxy,start,Magic Number,The method contains a magic number: 2,57
vert.x,io.vertx.test.proxy,Socks4Proxy,start,Magic Number,The method contains a magic number: 4,57
vert.x,io.vertx.test.proxy,Socks4Proxy,start,Magic Number,The method contains a magic number: 8,57
vert.x,io.vertx.test.proxy,Socks4Proxy,start,Magic Number,The method contains a magic number: 8,57
vert.x,io.vertx.test.proxy,Socks4Proxy,start,Magic Number,The method contains a magic number: 9,57
vert.x,io.vertx.test.proxy,Socks4Proxy,start,Magic Number,The method contains a magic number: 10,57
vert.x,io.vertx.test.proxy,Socks4Proxy,getByte4,Magic Number,The method contains a magic number: 2,143
vert.x,io.vertx.test.proxy,Socks4Proxy,getByte4,Magic Number,The method contains a magic number: 3,143
vert.x,io.vertx.test.proxy,SocksProxy,start,Complex Method,Cyclomatic complexity of the method is 12,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Long Method,The method has 120 lines of code.,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Long Statement,The length of the statement "host=buffer2.getUnsignedByte(4) + "." + buffer2.getUnsignedByte(5)+ "."+ buffer2.getUnsignedByte(6)+ "."+ buffer2.getUnsignedByte(7);" is 133.,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 3,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 10,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 4,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 5,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 6,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 7,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 8,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 3,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 4,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 7,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 5,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 5,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 5,65
vert.x,io.vertx.test.proxy,SocksProxy,start,Magic Number,The method contains a magic number: 10,65
vert.x,io.vertx.test.proxy,TestProxyBase,TestProxyBase,Abstract Function Call From Constructor,The constructor TestProxyBase calls a virtual method defaultPort.,38
vert.x,io.vertx.test.verticles,ExtraCPVerticleNotInParentLoader,start,Empty catch clause,The method has an empty catch block.,25
vert.x,io.vertx.test.verticles,SimpleServer,start,Magic Number,The method contains a magic number: 8080,24
vert.x,io.vertx.test.verticles,TestVerticle,start,Long Statement,The length of the statement "vertx.eventBus().send("testcounts"`new JsonObject().put("deploymentID"`context.deploymentID()).put("count"`instanceCount.incrementAndGet()));" is 141.,32
vert.x,io.vertx.test.verticles.sourceverticle,SourceVerticle,start,Long Statement,The length of the statement "vertx.deployVerticle("java:" + OtherSourceVerticle.class.getName().replace('.'`'/') + ".java"`new DeploymentOptions()).onComplete(ar -> {" is 137.,25
